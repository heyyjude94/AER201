MPASM 5.54  /USERS/JUDY/MPLABXPROJECTS/INTER   3-26-2014  2:25:45         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 ;*******************************************************************
                      00002 ; User Interface
                      00003 ; Assembler : mpasm.exe
                      00004 ; Linker    : mplink.exe
                      00005 ; Written By : Judy Shen
                      00006 ;*******************************************************************
                      00007 
                      00008       list p=16f877                 ; list directive to define processor
                      00009       #include <p16f877.inc>        ; processor specific variable definitions
                      00001         LIST
                      00002 
                      00003 ;==========================================================================
                      00004 ;  MPASM PIC16F877 processor include
                      00005 ; 
                      00006 ;  (c) Copyright 1999-2013 Microchip Technology, All rights reserved
                      00007 ;==========================================================================
                      00008 
                      00540         LIST
                      00010       #include <LCD.inc>
                      00001 
                      00002 WRT_LCD macro val
                      00003         movlw   val
                      00004         call    WR_DATA
                      00005         endm
                      00006 
                      00007     ;Delay: ~160us
Warning[207]: Found label after column 1. (LCD_DELAY)
                      00008  LCD_DELAY macro
                      00009         movlw   0xFF
                      00010         movwf   lcd_d1
                      00011         decfsz  lcd_d1,f
                      00012         goto    $-1
                      00013         endm
                      00014 
                      00015 BCD_Display macro val
                      00016         swapf val, w
                      00017         andlw   0x0f           ; Mask upper four bits 0000 HHHH
                      00018         addlw   0x30           ; convert to ASCII
                      00019         call WR_DATA
                      00020 
                      00021         call    lcdLongDelay
                      00022         movf    val,w
                      00023         andlw   0x0f           ; w  = 0000 LLLL
                      00024         addlw   0x30           ; convert to ASCII
                      00025         call WR_DATA
                      00026         endm
                      00027 
                      00028 BCD_DisplayS macro val
                      00029         movf    val,w
                      00030         andlw   0x0f           ; w  = 0000 LLLL
                      00031         addlw   0x30           ; convert to ASCII
                      00032         call WR_DATA
                      00033         endm
MPASM 5.54  /USERS/JUDY/MPLABXPROJECTS/INTER   3-26-2014  2:25:45         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00034 
                      00035 Display macro   Message
                      00036                 local   loop_
                      00037                 local   end_
                      00038                 clrf    Table_Counter
                      00039                 clrw
                      00040 loop_   movf    Table_Counter,W
                      00041                 call    Message
                      00042                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
                      00043                 btfsc   STATUS,Z
                      00044                         goto    end_
                      00045                 call    WR_DATA
                      00046                 incf    Table_Counter,F
                      00047                 goto    loop_
                      00048 end_
                      00049                 endm
                      00050 
                      00011       #include <rtc_macros.inc>
                      00001         ;External labels
  0000                00002         extern  write_rtc,read_rtc,rtc_convert,i2c_common_setup
                      00003 
                      00004 ;RTC Macros;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00005 
                      00006 rtc_resetAll    macro
                      00007 ;input:         none
                      00008 ;output:        none
                      00009 ;desc:          Resets all the time keeping registers on the RTC to zero
                      00010         banksel         0x74
                      00011         clrf            0x74
                      00012         banksel         0x73
                      00013         clrf            0x73
                      00014     call        write_rtc               ;Write 0 to Seconds
                      00015         banksel         0x73
                      00016     incf        0x73                    ;Set register address to 1
                      00017         call            write_rtc
                      00018         banksel         0x73
                      00019     incf        0x73                    ;Set register address to 2
                      00020         call            write_rtc
                      00021         banksel         0x73
                      00022     incf        0x73                    ;Set register address to 3
                      00023         call            write_rtc
                      00024         banksel         0x73
                      00025     incf        0x73                    ;Set register address to 4
                      00026         call            write_rtc
                      00027         banksel         0x73
                      00028     incf        0x73                    ;Set register address to 5
                      00029         call            write_rtc
                      00030         banksel         0x73
                      00031     incf        0x73                    ;Set register address to 6
                      00032         call            write_rtc
                      00033         endm
                      00034 
                      00035 rtc_set         macro   addliteral,datliteral
MPASM 5.54  /USERS/JUDY/MPLABXPROJECTS/INTER   3-26-2014  2:25:45         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00036 ;input:         addliteral: value of address
                      00037 ;                       datliteral: value of data
                      00038 ;output:        none
                      00039 ;desc:          loads the data in datliteral into the 
                      00040 ;                       address specified by addliteral in the RTC
                      00041         banksel 0x73
                      00042         movlw   addliteral
                      00043         movwf   0x73
                      00044         banksel 0x74
                      00045         movlw   datliteral
                      00046         movwf   0x74    
                      00047         call    write_rtc
                      00048         endm
                      00049 
                      00050 rtc_read        macro   addliteral
                      00051 ;input:         addliteral
                      00052 ;output:        0x75, 0x77, 0x78
                      00053 ;desc:          From the selected register in the RTC, read the data
                      00054 ;                       and load it into 0x75. 0x75 is also converted into 
                      00055 ;                       ASCII characters and the tens digit is placed into
                      00056 ;                       0x77 and the ones digit is placed in 0x78
                      00057         movlw   addliteral
                      00058         banksel 0x73
                      00059         movwf   0x73
                      00060         call    read_rtc
                      00061         banksel 0x75
                      00062         movf    0x75,w
                      00063         call    rtc_convert   
                      00064         endm
2007   3F72           00012       __CONFIG _CP_OFF & _WDT_OFF & _BODEN_ON & _PWRTE_ON & _HS_OSC & _WRT_ENABLE_ON & _CPD_OFF & _LVP_O
                            FF
                      00013 
                      00014         cblock  0x20
  00000020            00015                 COUNTH ;0x20
  00000021            00016                 COUNTM ;0x21
  00000022            00017                 COUNTL ;0x22
  00000023            00018                 Table_Counter ;0x23
  00000024            00019                 lcd_tmp ;0x24
  00000025            00020         key_temp ;0x25
  00000026            00021         test ;0x26
  00000027            00022         rtc1 ;0x27
  00000028            00023         rtc2 ;0x28
  00000029            00024         com ;0x29
  0000002A            00025         dat ;0x2a
  0000002B            00026         lcd_d1 ;0x2b
  0000002C            00027         lcd_d2 ;0x2c
  0000002D            00028         bcd ;0x2d
  0000002E            00029         count ;0x2e
  0000002F            00030         show_data ;02f
  00000030            00031         w_temp ;0x30
  00000031            00032         status_temp ;0x31
  00000032            00033         pass ;0x32
  00000033            00034         flickerfail ;0x33
MPASM 5.54  /USERS/JUDY/MPLABXPROJECTS/INTER   3-26-2014  2:25:45         PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000034            00035         ledfail ;0x34
  00000035            00036         runtime ;0x35
  00000036            00037         timercount ;0x36
  00000037            00038         ones ;0x37
  00000038            00039         tens ;0x38
  00000039            00040         huns ;0x39
  0000003A            00041         count_temp ;0x3a
  0000003B            00042         run_temp ;0x3b
  0000003C            00043         ADDRL ;0x3c
  0000003D            00044         DATAL ;0x3d
  0000003E            00045         VALUEL ;0x3e
  0000003F            00046         signal ;0x3f
  00000040            00047         none ;0x40
  00000041            00048         light1 ;0x41
  00000042            00049         light2 ;0x42
  00000043            00050         light3 ;0x43
  00000044            00051         light4 ;0x44
  00000045            00052         light5 ;0x45
  00000046            00053         light6 ;0x46
  00000047            00054         light7 ;0x47
  00000048            00055         light8 ;0x48
  00000049            00056         light9 ;0x49
  0000004A            00057         result_temp;0x4a
  0000004B            00058         passT  ;0x4b
  0000004C            00059         flickerfailT ;0x4c
  0000004D            00060         ledfailT    ;0x4d
  0000004E            00061         noneT       ;0x4e
                      00062 
                      00063 
                      00064         endc
                      00065 
                      00066         ;Declare constants for pin assignments (LCD on PORTD)
                      00067 
                      00068                 #define RS      PORTD,2
                      00069                 #define E       PORTD,3
                      00070 
                      00071         ORG       0x0000     ;RESET vector must always be at 0x00
0000   018A           00072         clrf PCLATH
0001   2???           00073         goto      init       ;Just jump to the main code section.
                      00074 
                      00075         ORG 0x004
0004   2???           00076         goto ISR
0005                  00077 init
                      00078          ;initialize timer interrupt
0005   178B           00079          bsf    INTCON, GIE
0006   1683 1303      00080          banksel    OPTION_REG
0008   0181           00081          clrf       TMR0
0009   30C7           00082          movlw      B'11000111'
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
000A   0081           00083          movwf      OPTION_REG
                      00084 
000B   1283           00085          bcf        STATUS, RP0
                      00086 
MPASM 5.54  /USERS/JUDY/MPLABXPROJECTS/INTER   3-26-2014  2:25:45         PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00087          ;init timer
000C   3026           00088          movlw      D'38'
000D   00B6           00089          movwf      timercount
000E   01B5           00090          clrf       runtime
                      00091 
000F   1683           00092          bsf       STATUS,RP0     ; select bank 1
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0010   0185           00093          clrf      TRISA
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0011   1605           00094          bsf       TRISA, 4
0012   30F3           00095          movlw     b'11110011'    ; Set required keypad inputs
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0013   0086           00096          movwf     TRISB
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0014   0187           00097          clrf      TRISC          ; All port C is output
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0015   0188           00098          clrf      TRISD          ; All port D is output
                      00099 
                      00100          ;Set SDA and SCL to high-Z first as required for I2C
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0016   1607           00101                  bsf       TRISC,4
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0017   1587           00102                  bsf       TRISC,3
                      00103 
0018   1283           00104          bcf       STATUS,RP0     ; select bank 0
0019   0185           00105          clrf      PORTA
001A   0186           00106          clrf      PORTB
001B   0187           00107          clrf      PORTC
001C   0188           00108          clrf      PORTD
001D   2???           00109                  call      i2c_common_setup
                      00110 
001E   2???           00111          call      InitLCD    ;Initialize the LCD (code in lcd.asm; imported by lcd.inc)
                      00112 
                      00113          ; init EEPROM
001F   3010           00114          movlw    0x10
0020   00BC           00115          movwf    ADDRL
0021   01BD           00116          clrf     DATAL
0022   01BE           00117          clrf     VALUEL
                      00118 
                      00119 ;MAIN PROGRAM
                      00120 ;***************************************
                      00121 Main    Display         Welcome_Msg
  0000                    M                 local   loop_
  0000                    M                 local   end_
0023   01A3               M                 clrf    Table_Counter
0024   0103               M                 clrw
0025   0823               M loop_   movf    Table_Counter,W
0026   2???               M                 call    Welcome_Msg
0027   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
0028   1903               M                 btfsc   STATUS,Z
0029   2???               M                         goto    end_
002A   2???               M                 call    WR_DATA
002B   0AA3               M                 incf    Table_Counter,F
MPASM 5.54  /USERS/JUDY/MPLABXPROJECTS/INTER   3-26-2014  2:25:45         PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

002C   2???               M                 goto    loop_
002D                      M end_
002D   2???           00122         call        HalfS
002E   2???           00123         call        HalfS
002F   2???           00124         call        HalfS
0030   2???           00125         call        Clear_Display
                      00126 
0031                  00127 Start_Test
                      00128                 Display         Menu
  0000                    M                 local   loop_
  0000                    M                 local   end_
0031   01A3               M                 clrf    Table_Counter
0032   0103               M                 clrw
0033   0823               M loop_   movf    Table_Counter,W
0034   2???               M                 call    Menu
0035   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
0036   1903               M                 btfsc   STATUS,Z
0037   2???               M                         goto    end_
0038   2???               M                 call    WR_DATA
0039   0AA3               M                 incf    Table_Counter,F
003A   2???               M                 goto    loop_
003B                      M end_
                      00129 
003B   3018           00130 Test     movlw          b'00011000'             ;Move to the left
003C   2???           00131          call           WR_INS
003D   2???           00132          call           HalfS    ;Wait until data is available from the keypad
003E   1C86           00133          btfss          PORTB,1
003F   2???           00134          goto           Test
                      00135 
                      00136 
0040   0E06           00137          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
0041   390F           00138          andlw          0x0F
0042   2???           00139          call       check
0043   2???           00140          goto       Start_Test
                      00141 
                      00142 ; Look up table
                      00143 ;***************************************
                      00144 
0044                  00145 Welcome_Msg
0044   0782           00146                 addwf   PCL,F
0045   3457 3465 346C 00147                 dt              "Welcome!", 0
       3463 346F 346D 
       3465 3421 3400 
                      00148 
004E                  00149 Paused
004E   0782           00150                 addwf   PCL,F
004F   3450 3461 3475 00151                 dt              "Paused", 0
       3473 3465 3464 
       3400 
                      00152 
0056                  00153 Menu
0056   0782           00154                 addwf   PCL,F
0057   3441 343A 3453 00155                 dt              "A:Start, ", "B:PLog, ", "C:Time",0
MPASM 5.54  /USERS/JUDY/MPLABXPROJECTS/INTER   3-26-2014  2:25:45         PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

       3474 3461 3472 
       3474 342C 3420 
       3442 343A 3450 
       344C 346F 3467 
       342C 3420 3443 
       343A 3454 3469 
       346D 3465 3400 
                      00156 
006F                  00157 Run
006F   0782           00158                 addwf   PCL,F
0070   3454 3465 3473 00159                 dt              "Testing Candles", 0
       3474 3469 346E 
       3467 3420 3443 
       3461 346E 3464 
       346C 3465 3473 
       3400 
0080                  00160 SW_ON
0080   0782           00161                 addwf   PCL,F
0081   3453 3477 3469 00162                 dt              "Switch On", 0
       3474 3463 3468 
       3420 344F 346E 
       3400 
                      00163 
008B                  00164 SW_OFF
008B   0782           00165         addwf   PCL, F
008C   3453 3477 3469 00166         dt      "Switch Off", 0
       3474 3463 3468 
       3420 344F 3466 
       3466 3400 
                      00167 
0097                  00168 Done
0097   0782           00169                 addwf   PCL,F
0098   3446 3469 346E 00170                 dt              "Finished Testing", 0
       3469 3473 3468 
       3465 3464 3420 
       3454 3465 3473 
       3474 3469 346E 
       3467 3400 
                      00171 
00A9                  00172 Runtime
00A9   0782           00173                 addwf   PCL,F
00AA   3452 3475 346E 00174                 dt              "Runtime: ", 0
       3474 3469 346D 
       3465 343A 3420 
       3400 
                      00175 
00B4                  00176 PMem
00B4   0782           00177                 addwf   PCL,F
00B5   3450 3465 3472 00178                 dt              "Permanent Log", 0
       346D 3461 346E 
       3465 346E 3474 
       3420 344C 346F 
       3467 3400 
MPASM 5.54  /USERS/JUDY/MPLABXPROJECTS/INTER   3-26-2014  2:25:45         PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00C3                  00179 PMenu
00C3   0782           00180         addwf   PCL, F
00C4   3453 3465 346C 00181         dt      "Select Trial", 0
       3465 3463 3474 
       3420 3454 3472 
       3469 3461 346C 
       3400 
                      00182 
00D1                  00183 RTC
00D1   0782           00184                 addwf   PCL,F
00D2   3454 3469 346D 00185                 dt              "Time:", 0
       3465 343A 3400 
                      00186 
00D8                  00187 Writing
00D8   0782           00188         addwf   PCL, F
00D9   3457 3472 3469 00189         dt      "Writing EE", 0
       3474 3469 346E 
       3467 3420 3445 
       3445 3400 
                      00190 
00E4                  00191 Trial
00E4   0782           00192         addwf   PCL, F
00E5   3450 343A 3420 00193         dt      "P: FF: LF: N:", 0
       3446 3446 343A 
       3420 344C 3446 
       343A 3420 344E 
       343A 3400 
                      00194 
                      00195 
                      00196 ;***************************************
                      00197 ; Helper Subrountines
                      00198 ;***************************************
                      00199 
00F3                  00200 Switch_Lines
00F3   30C0           00201                 movlw   B'11000000'
00F4   2???           00202                 call    WR_INS
00F5   0008           00203                 return
                      00204 
00F6                  00205 Clear_Display
00F6   3001           00206                 movlw   B'00000001'
00F7   2???           00207                 call    WR_INS
00F8   0008           00208                 return
                      00209 
00F9                  00210 InitLCD
00F9   1283           00211         bcf STATUS,RP0
00FA   1588           00212         bsf E     ;E default high
                      00213 
                      00214         ;Wait for LCD POR to finish (~15ms)
00FB   2???           00215         call lcdLongDelay
00FC   2???           00216         call lcdLongDelay
00FD   2???           00217         call lcdLongDelay
                      00218 
                      00219         ;Ensure 8-bit mode first (no way to immediately guarantee 4-bit mode)
MPASM 5.54  /USERS/JUDY/MPLABXPROJECTS/INTER   3-26-2014  2:25:45         PAGE  9


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00220         ; -> Send b'0011' 3 times
00FE   3033           00221         movlw   b'00110011'
00FF   2???           00222         call    WR_INS
0100   2???           00223         call lcdLongDelay
0101   2???           00224         call lcdLongDelay
0102   3032           00225         movlw   b'00110010'
0103   2???           00226         call    WR_INS
0104   2???           00227         call lcdLongDelay
0105   2???           00228         call lcdLongDelay
                      00229 
                      00230         ; 4 bits, 2 lines, 5x7 dots
0106   3028           00231         movlw   b'00101000'
0107   2???           00232         call    WR_INS
0108   2???           00233         call lcdLongDelay
0109   2???           00234         call lcdLongDelay
                      00235 
                      00236         ; display on/off
010A   300C           00237         movlw   b'00001100'
010B   2???           00238         call    WR_INS
010C   2???           00239         call lcdLongDelay
010D   2???           00240         call lcdLongDelay
                      00241 
                      00242         ; Entry mode
010E   3006           00243         movlw   b'00000110'
010F   2???           00244         call    WR_INS
0110   2???           00245         call lcdLongDelay
0111   2???           00246         call lcdLongDelay
                      00247 
                      00248         ; Clear ram
0112   3001           00249         movlw   b'00000001'
0113   2???           00250         call    WR_INS
0114   2???           00251         call lcdLongDelay
0115   2???           00252         call lcdLongDelay
0116   0008           00253         return
                      00254 
                      00255 ;helper subroutines
                      00256 ;function to check for keyboard input
0117                  00257 check
0117   00A5           00258     movwf key_temp
                      00259 
0118                  00260 check_A
0118   3A03           00261     xorlw   D'3'
0119   1D03           00262     btfss   STATUS, Z
011A   2???           00263         goto    check_B
                      00264 
011B   2???           00265     call Clear_Display
                      00266     Display Run
  0000                    M                 local   loop_
  0000                    M                 local   end_
011C   01A3               M                 clrf    Table_Counter
011D   0103               M                 clrw
011E   0823               M loop_   movf    Table_Counter,W
011F   2???               M                 call    Run
MPASM 5.54  /USERS/JUDY/MPLABXPROJECTS/INTER   3-26-2014  2:25:45         PAGE 10


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0120   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
0121   1903               M                 btfsc   STATUS,Z
0122   2???               M                         goto    end_
0123   2???               M                 call    WR_DATA
0124   0AA3               M                 incf    Table_Counter,F
0125   2???               M                 goto    loop_
0126                      M end_
0126   2???           00267     call    HalfS
0127   2???           00268     call Clear_Display
0128   2???           00269     call    Motor_On
0129   168B           00270     bsf    INTCON, 5
012A   2???           00271     call    count_down
012B   128B           00272     bcf    INTCON, 5
012C   2???           00273     call Clear_Display
012D   2???           00274     call    Motor_Off
                      00275 
                      00276     Display Done
  0000                    M                 local   loop_
  0000                    M                 local   end_
012E   01A3               M                 clrf    Table_Counter
012F   0103               M                 clrw
0130   0823               M loop_   movf    Table_Counter,W
0131   2???               M                 call    Done
0132   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
0133   1903               M                 btfsc   STATUS,Z
0134   2???               M                         goto    end_
0135   2???               M                 call    WR_DATA
0136   0AA3               M                 incf    Table_Counter,F
0137   2???               M                 goto    loop_
0138                      M end_
0138   2???           00277     call Switch_Lines
                      00278     Display Runtime 
  0000                    M                 local   loop_
  0000                    M                 local   end_
0139   01A3               M                 clrf    Table_Counter
013A   0103               M                 clrw
013B   0823               M loop_   movf    Table_Counter,W
013C   2???               M                 call    Runtime
013D   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
013E   1903               M                 btfsc   STATUS,Z
013F   2???               M                         goto    end_
0140   2???               M                 call    WR_DATA
0141   0AA3               M                 incf    Table_Counter,F
0142   2???               M                 goto    loop_
0143                      M end_
0143   2???           00279     call Convert
0144   01B5           00280     clrf    runtime
0145   2???           00281     call    shift_EE
                      00282     ;writing run info into EEPROM
0146   3010           00283     movlw   0x10
0147   00BC           00284     movwf   ADDRL
Warning[202]: Argument out of range.  Least significant bits used.
0148   0832           00285     movf    pass, VALUEL
MPASM 5.54  /USERS/JUDY/MPLABXPROJECTS/INTER   3-26-2014  2:25:45         PAGE 11


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0149   00BE           00286     movwf   VALUEL
014A   2???           00287     call    write_EE
                      00288 
Message[305]: Using default destination of 1 (file).
014B   0ABC           00289     incf    ADDRL
Warning[202]: Argument out of range.  Least significant bits used.
014C   0833           00290     movf    flickerfail, VALUEL
014D   00BE           00291     movwf   VALUEL
014E   2???           00292     call    write_EE
Message[305]: Using default destination of 1 (file).
014F   0ABC           00293     incf    ADDRL
                      00294 
Warning[202]: Argument out of range.  Least significant bits used.
0150   0834           00295     movf    ledfail, VALUEL
0151   00BE           00296     movwf   VALUEL
0152   2???           00297     call    write_EE
Message[305]: Using default destination of 1 (file).
0153   0ABC           00298     incf    ADDRL
                      00299 
Warning[202]: Argument out of range.  Least significant bits used.
0154   0840           00300     movf    none, VALUEL
0155   00BE           00301     movwf   VALUEL
0156   2???           00302     call    write_EE
0157   2???           00303     call    wait
0158   2???           00304     call Clear_Display
                      00305     ;can check previous run trials
0159   2???           00306     call results_access
015A   2???           00307     call wait
                      00308 
015B   2???           00309     call Clear_Display
015C   0008           00310     return
                      00311 
015D                  00312 check_B
015D   0825           00313     movf key_temp, W
015E   3A07           00314     xorlw D'7'
015F   1D03           00315     btfss STATUS, Z
0160   2???           00316         goto check_C
0161   2???           00317     call Clear_Display
                      00318     Display PMem
  0000                    M                 local   loop_
  0000                    M                 local   end_
0162   01A3               M                 clrf    Table_Counter
0163   0103               M                 clrw
0164   0823               M loop_   movf    Table_Counter,W
0165   2???               M                 call    PMem
0166   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
0167   1903               M                 btfsc   STATUS,Z
0168   2???               M                         goto    end_
0169   2???               M                 call    WR_DATA
016A   0AA3               M                 incf    Table_Counter,F
016B   2???               M                 goto    loop_
016C                      M end_
016C   2???           00319     call Switch_Lines
MPASM 5.54  /USERS/JUDY/MPLABXPROJECTS/INTER   3-26-2014  2:25:45         PAGE 12


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00320     Display PMenu
  0000                    M                 local   loop_
  0000                    M                 local   end_
016D   01A3               M                 clrf    Table_Counter
016E   0103               M                 clrw
016F   0823               M loop_   movf    Table_Counter,W
0170   2???               M                 call    PMenu
0171   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
0172   1903               M                 btfsc   STATUS,Z
0173   2???               M                         goto    end_
0174   2???               M                 call    WR_DATA
0175   0AA3               M                 incf    Table_Counter,F
0176   2???               M                 goto    loop_
0177                      M end_
0177   2???           00321     call pmenu_access
0178   2???           00322     call Clear_Display
0179   0008           00323     return
                      00324 
017A                  00325 check_C
017A   0825           00326     movf key_temp, W
017B   3A0B           00327     xorlw D'11'
017C   1D03           00328     btfss STATUS, Z
017D   2???           00329         goto Other_wise
017E   2???           00330     call Clear_Display
017F   2???           00331     call show_RTC
0180   2???           00332     call Clear_Display
0181   0008           00333     return
                      00334 
0182                  00335 Other_wise
0182   2???           00336     call Clear_Display
0183   0008           00337     return
                      00338 
                      00339 
0184                  00340 count_down
0184   01AF           00341         clrf show_data
0185   01B2           00342         clrf pass
0186   01B3           00343         clrf flickerfail
0187   01B4           00344         clrf ledfail
0188   01C0           00345         clrf none
0189   01C1           00346         clrf light1
018A   01C2           00347         clrf light2
018B   01C3           00348         clrf light3
018C   01C4           00349         clrf light4
018D   01C5           00350         clrf light5
018E   01C6           00351         clrf light6
018F   01C7           00352         clrf light7
0190   01C8           00353         clrf light8
0191   01C9           00354         clrf light9
                      00355         Display Run
  0000                    M                 local   loop_
  0000                    M                 local   end_
0192   01A3               M                 clrf    Table_Counter
0193   0103               M                 clrw
MPASM 5.54  /USERS/JUDY/MPLABXPROJECTS/INTER   3-26-2014  2:25:45         PAGE 13


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0194   0823               M loop_   movf    Table_Counter,W
0195   2???               M                 call    Run
0196   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
0197   1903               M                 btfsc   STATUS,Z
0198   2???               M                         goto    end_
0199   2???               M                 call    WR_DATA
019A   0AA3               M                 incf    Table_Counter,F
019B   2???               M                 goto    loop_
019C                      M end_
                      00356 
019C                  00357 count_loop
019C   3000           00358         movlw b'00000000'
019D   0085           00359         movwf PORTA
019E   2???           00360         call Check_Flicker
019F   084A           00361         movf result_temp, w
01A0   00C1           00362         movwf light1
                      00363 
01A1   3001           00364         movlw b'00000001'
01A2   0085           00365         movwf PORTA
01A3   2???           00366         call Check_Flicker
01A4   084A           00367         movf result_temp, w
01A5   00C2           00368         movwf light2
                      00369 
01A6   3002           00370         movlw b'00000010'
01A7   0085           00371         movwf PORTA
01A8   2???           00372         call Check_Flicker
01A9   084A           00373         movf result_temp, w
01AA   00C3           00374         movwf light3
                      00375 
01AB   3003           00376         movlw b'00000011'
01AC   0085           00377         movwf PORTA
01AD   2???           00378         call Check_Flicker
01AE   084A           00379         movf result_temp, w
01AF   00C4           00380         movwf light4
                      00381 
01B0   3004           00382         movlw b'00000100'
01B1   0085           00383         movwf PORTA
01B2   2???           00384         call Check_Flicker
01B3   084A           00385         movf result_temp, w
01B4   00C5           00386         movwf light5
                      00387 
01B5   3005           00388         movlw b'00000101'
01B6   0085           00389         movwf PORTA
01B7   2???           00390         call Check_Flicker
01B8   084A           00391         movf result_temp, w
01B9   00C6           00392         movwf light6
                      00393 
01BA   3006           00394         movlw b'00000110'
01BB   0085           00395         movwf PORTA
01BC   2???           00396         call Check_Flicker
01BD   084A           00397         movf result_temp, w
01BE   00C7           00398         movwf light7
                      00399 
MPASM 5.54  /USERS/JUDY/MPLABXPROJECTS/INTER   3-26-2014  2:25:45         PAGE 14


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

01BF   3007           00400         movlw b'00000111'
01C0   0085           00401         movwf PORTA
01C1   2???           00402         call Check_Flicker
01C2   084A           00403         movf result_temp, w
01C3   00C8           00404         movwf light8
                      00405 
01C4   3008           00406         movlw b'00001000'
01C5   0085           00407         movwf PORTA
01C6   2???           00408         call Check_Flicker
01C7   084A           00409         movf result_temp, w
01C8   00C9           00410         movwf light9
01C9   0008           00411         return
                      00412 
01CA                  00413 Check_Flicker
01CA   2???           00414         call    HalfS 
01CB   01BF           00415         clrf    signal
01CC   0805           00416         movf    PORTA, w
01CD   3910           00417         andlw   b'00010000'
                      00418         ;movf    PORTB, w
                      00419         ;andlw   b'00000001'
01CE   1D03           00420         btfss   STATUS, Z
01CF   2???           00421                 goto flickertime
Message[305]: Using default destination of 1 (file).
01D0   0AC0           00422         incf    none
Message[305]: Using default destination of 1 (file).
01D1   0AAF           00423         incf    show_data
01D2   3001           00424         movlw   b'00000001'
01D3   00CA           00425         movwf   result_temp
01D4   2???           00426         goto    Display_results
                      00427 
01D5                  00428 flickertime
01D5   01BF           00429         clrf    signal
01D6   2???           00430         call    HalfS
01D7   2???           00431         call    HalfS
01D8   2???           00432         call    HalfS
01D9   2???           00433         call    HalfS
01DA   2???           00434         call    HalfS
01DB   2???           00435         call    HalfS
01DC   2???           00436         call    HalfS
01DD   01CA           00437         clrf    result_temp
Message[305]: Using default destination of 1 (file).
01DE   0AAF           00438         incf    show_data
01DF   3080           00439         movlw   B'10000000' ;move cursor to position H?4B?
01E0   2???           00440         call    WR_INS
01E1   1FBF           00441         btfss   signal, 7
01E2   2???           00442             goto    notflickerfail
Message[305]: Using default destination of 1 (file).
01E3   0AB3           00443         incf    flickerfail
01E4   3004           00444         movlw   b'00000100'
01E5   00CA           00445         movwf   result_temp
01E6   2???           00446         goto    Display_results
                      00447 
01E7                  00448 notflickerfail 
MPASM 5.54  /USERS/JUDY/MPLABXPROJECTS/INTER   3-26-2014  2:25:45         PAGE 15


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

01E7   083F           00449         movf    signal, w
01E8   39F8           00450         andlw   b'11111000'
01E9   1D03           00451         btfss   STATUS, Z
01EA   2???           00452             goto    goodcandle
Message[305]: Using default destination of 1 (file).
01EB   0AB4           00453         incf    ledfail
01EC   3002           00454         movlw   b'00000010'
01ED   00CA           00455         movwf   result_temp
01EE   2???           00456         goto    Display_results
                      00457 
01EF                  00458 goodcandle    
Message[305]: Using default destination of 1 (file).
01EF   0AB2           00459         incf    pass
01F0   3008           00460         movlw   b'00001000'
01F1   00CA           00461         movwf   result_temp
                      00462 
01F2                  00463 Display_results
01F2   2???           00464         call Clear_Display
                      00465         BCD_DisplayS show_data
01F3   082F               M         movf    show_data,w
01F4   390F               M         andlw   0x0f           ; w  = 0000 LLLL
01F5   3E30               M         addlw   0x30           ; convert to ASCII
01F6   2???               M         call WR_DATA
01F7   2???           00466         call    Convert1
01F8   2???           00467         call Switch_Lines
                      00468         Display     Trial
  0000                    M                 local   loop_
  0000                    M                 local   end_
01F9   01A3               M                 clrf    Table_Counter
01FA   0103               M                 clrw
01FB   0823               M loop_   movf    Table_Counter,W
01FC   2???               M                 call    Trial
01FD   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
01FE   1903               M                 btfsc   STATUS,Z
01FF   2???               M                         goto    end_
0200   2???               M                 call    WR_DATA
0201   0AA3               M                 incf    Table_Counter,F
0202   2???               M                 goto    loop_
0203                      M end_
0203   30C2           00469         movlw   B'11000010' ;move cursor to Pass
0204   2???           00470         call    WR_INS
                      00471         BCD_DisplayS pass
0205   0832               M         movf    pass,w
0206   390F               M         andlw   0x0f           ; w  = 0000 LLLL
0207   3E30               M         addlw   0x30           ; convert to ASCII
0208   2???               M         call WR_DATA
0209   30C6           00472         movlw   B'11000110' ;move cursor to 46
020A   2???           00473         call    WR_INS
                      00474         BCD_DisplayS flickerfail
020B   0833               M         movf    flickerfail,w
020C   390F               M         andlw   0x0f           ; w  = 0000 LLLL
020D   3E30               M         addlw   0x30           ; convert to ASCII
020E   2???               M         call WR_DATA
MPASM 5.54  /USERS/JUDY/MPLABXPROJECTS/INTER   3-26-2014  2:25:45         PAGE 16


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

020F   30CA           00475         movlw   B'11001010' ;move cursor to position 4A
0210   2???           00476         call    WR_INS
                      00477         BCD_DisplayS ledfail
0211   0834               M         movf    ledfail,w
0212   390F               M         andlw   0x0f           ; w  = 0000 LLLL
0213   3E30               M         addlw   0x30           ; convert to ASCII
0214   2???               M         call WR_DATA
0215   30CD           00478         movlw   B'11001101' ;move crusor to 4E
0216   2???           00479         call    WR_INS
                      00480         BCD_DisplayS none
0217   0840               M         movf    none,w
0218   390F               M         andlw   0x0f           ; w  = 0000 LLLL
0219   3E30               M         addlw   0x30           ; convert to ASCII
021A   2???               M         call WR_DATA
021B   0008           00481         return
                      00482 
021C                  00483 results_access
021C   3080           00484          movlw   B'10000000' ;move cursor to Pass
021D   2???           00485          call    WR_INS
                      00486          Display PMenu
  0000                    M                 local   loop_
  0000                    M                 local   end_
021E   01A3               M                 clrf    Table_Counter
021F   0103               M                 clrw
0220   0823               M loop_   movf    Table_Counter,W
0221   2???               M                 call    PMenu
0222   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
0223   1903               M                 btfsc   STATUS,Z
0224   2???               M                         goto    end_
0225   2???               M                 call    WR_DATA
0226   0AA3               M                 incf    Table_Counter,F
0227   2???               M                 goto    loop_
0228                      M end_
                      00487  
0228   2???           00488          call           HalfS    ;Wait until data is available from the keypad
0229   1C86           00489          btfss          PORTB,1
022A   2???           00490          goto           results_access
                      00491 
022B   0E06           00492          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
022C   390F           00493          andlw          0x0F
022D   00A5           00494          movwf      key_temp
                      00495 
022E                  00496 lightone
022E   3A00           00497          xorlw      D'0'
022F   1D03           00498          btfss      STATUS, Z
0230   2???           00499             goto    lighttwo
0231   0841           00500          movf       light1, w
0232   00CA           00501          movwf      result_temp
0233   2???           00502          call       Switch_Lines
0234   3031           00503          movlw      "1"
0235   2???           00504          call       WR_DATA
0236   303A           00505          movlw      ":"
0237   2???           00506          call       WR_DATA
MPASM 5.54  /USERS/JUDY/MPLABXPROJECTS/INTER   3-26-2014  2:25:45         PAGE 17


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0238   2???           00507          call       display
0239   2???           00508          call       HalfS
023A   2???           00509          call       Clear_Display
023B   2???           00510          goto       results_access
                      00511 
023C                  00512 lighttwo
023C   0825           00513         movf key_temp, W
023D   3A01           00514         xorlw       D'1'
023E   1D03           00515         btfss       STATUS, Z
023F   2???           00516             goto    lightthree
0240   0842           00517         movf        light2, w
0241   00CA           00518         movwf       result_temp
0242   2???           00519         call        Switch_Lines
0243   3032           00520         movlw       "2"
0244   2???           00521         call        WR_DATA
0245   303A           00522         movlw       ":"
0246   2???           00523         call        WR_DATA
0247   2???           00524         call        display
0248   2???           00525         call        HalfS
0249   2???           00526         call        Clear_Display
024A   2???           00527         goto        results_access
                      00528 
024B                  00529 lightthree 
024B   0825           00530         movf key_temp, W
024C   3A02           00531         xorlw       D'2'
024D   1D03           00532         btfss       STATUS, Z
024E   2???           00533             goto    lightfour
024F   0843           00534         movf        light3, w
0250   00CA           00535         movwf       result_temp
0251   2???           00536         call        Switch_Lines
0252   3033           00537         movlw       "3"
0253   2???           00538         call        WR_DATA
0254   303A           00539         movlw       ":"
0255   2???           00540         call        WR_DATA
0256   2???           00541         call        display
0257   2???           00542         call        HalfS
0258   2???           00543         call        Clear_Display
0259   2???           00544         goto        results_access
                      00545 
025A                  00546 lightfour
025A   0825           00547         movf key_temp, W
025B   3A04           00548         xorlw       D'4'
025C   1D03           00549         btfss       STATUS, Z
025D   2???           00550             goto    lightfive
025E   0844           00551         movf        light4, w
025F   00CA           00552         movwf       result_temp
0260   2???           00553         call        Switch_Lines
0261   3034           00554         movlw       "4"
0262   2???           00555         call        WR_DATA
0263   303A           00556         movlw       ":"
0264   2???           00557         call        WR_DATA
0265   2???           00558         call        display
0266   2???           00559         call        HalfS
MPASM 5.54  /USERS/JUDY/MPLABXPROJECTS/INTER   3-26-2014  2:25:45         PAGE 18


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0267   2???           00560         call        Clear_Display
0268   2???           00561         goto        results_access
                      00562 
0269                  00563 lightfive
0269   0825           00564         movf key_temp, W
026A   3A05           00565         xorlw       D'5'
026B   1D03           00566         btfss       STATUS, Z
026C   2???           00567             goto    lightsix
026D   0845           00568         movf       light5, w
026E   00CA           00569         movwf      result_temp
026F   2???           00570         call        Switch_Lines
0270   3035           00571         movlw      "5"
0271   2???           00572         call       WR_DATA
0272   303A           00573         movlw      ":"
0273   2???           00574         call       WR_DATA
0274   2???           00575         call       display
0275   2???           00576         call       HalfS
0276   2???           00577         call       Clear_Display
0277   2???           00578         goto       results_access
                      00579 
0278                  00580 lightsix
0278   0825           00581         movf key_temp, W
0279   3A06           00582         xorlw       D'6'
027A   1D03           00583         btfss       STATUS, Z
027B   2???           00584             goto    lightseven
027C   0846           00585          movf       light6, w
027D   00CA           00586          movwf      result_temp
027E   2???           00587          call Switch_Lines
027F   3036           00588          movlw      "6"
0280   2???           00589          call       WR_DATA
0281   303A           00590          movlw      ":"
0282   2???           00591          call       WR_DATA
0283   2???           00592          call       display
0284   2???           00593          call       HalfS
0285   2???           00594          call Clear_Display
0286   2???           00595          goto       results_access
                      00596 
0287                  00597 lightseven
0287   0825           00598         movf key_temp, W
0288   3A08           00599         xorlw       D'8'
0289   1D03           00600         btfss       STATUS, Z
028A   2???           00601             goto    lighteight
028B   0847           00602          movf       light7, w
028C   00CA           00603          movwf      result_temp
028D   2???           00604          call Switch_Lines
028E   3037           00605          movlw      "7"
028F   2???           00606          call       WR_DATA
0290   303A           00607          movlw      ":"
0291   2???           00608          call       WR_DATA
0292   2???           00609          call       display
0293   2???           00610          call       HalfS
0294   2???           00611          call Clear_Display
0295   2???           00612          goto       results_access
MPASM 5.54  /USERS/JUDY/MPLABXPROJECTS/INTER   3-26-2014  2:25:45         PAGE 19


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00613 
0296                  00614 lighteight
0296   0825           00615         movf key_temp, W
0297   3A09           00616         xorlw       D'9'
0298   1D03           00617         btfss       STATUS, Z
0299   2???           00618             goto    lightnine
029A   0848           00619          movf       light8, w
029B   00CA           00620          movwf      result_temp
029C   2???           00621          call Switch_Lines
029D   3038           00622          movlw      "8"
029E   2???           00623          call       WR_DATA
029F   303A           00624          movlw      ":"
02A0   2???           00625          call       WR_DATA
02A1   2???           00626          call       display
02A2   2???           00627          call       HalfS
02A3   2???           00628          call Clear_Display
02A4   2???           00629          goto       results_access
                      00630 
02A5                  00631 lightnine
02A5   0825           00632         movf key_temp, W
02A6   3A0A           00633         xorlw       D'10'
02A7   1D03           00634         btfss       STATUS, Z
02A8   2???           00635             goto    next
02A9   0849           00636          movf       light9, w
02AA   00CA           00637          movwf      result_temp
02AB   2???           00638          call Switch_Lines
02AC   3039           00639          movlw      "9"
02AD   2???           00640          call       WR_DATA
02AE   303A           00641          movlw      ":"
02AF   2???           00642          call       WR_DATA
02B0   2???           00643          call       display
02B1   2???           00644          call       HalfS
02B2   2???           00645          call Clear_Display
02B3   2???           00646          goto       results_access
                      00647 
02B4                  00648 next
02B4   0008           00649          return
                      00650 
                      00651 
02B5                  00652 display
02B5   1C4A           00653         btfss   result_temp, 0
02B6   2???           00654             goto notnone
02B7   304E           00655         movlw "N"
02B8   2???           00656         call WR_DATA
02B9   2???           00657         goto end_display
                      00658 
02BA                  00659 notnone
02BA   1CCA           00660         btfss   result_temp, 1
02BB   2???           00661             goto notlf
02BC   304C           00662         movlw "L"
02BD   2???           00663         call WR_DATA
02BE   3046           00664         movlw "F"
02BF   2???           00665         call WR_DATA
MPASM 5.54  /USERS/JUDY/MPLABXPROJECTS/INTER   3-26-2014  2:25:45         PAGE 20


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

02C0   2???           00666         goto end_display
                      00667 
02C1                  00668 notlf
02C1   1D4A           00669         btfss   result_temp, 2
02C2   2???           00670             goto notff
02C3   3046           00671         movlw "F"
02C4   2???           00672         call WR_DATA
02C5   3046           00673         movlw "F"
02C6   2???           00674         call WR_DATA
02C7   2???           00675         goto end_display
02C8                  00676 notff
02C8   3050           00677         movlw "P"
02C9   2???           00678         call WR_DATA
                      00679 
02CA                  00680 end_display
02CA   2???           00681         call HalfS
02CB   0008           00682         return
                      00683 
02CC                  00684 pmenu_access
02CC   0186           00685          clrf       PORTB
02CD   01A5           00686          clrf       key_temp
02CE   2???           00687          call           HalfS    ;Wait until data is available from the keypad
02CF   1C86           00688          btfss          PORTB,1
02D0   2???           00689          goto           pmenu_access
                      00690 
02D1   0E06           00691          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
02D2   390F           00692          andlw          0x0F
02D3   00A5           00693          movwf      key_temp
                      00694 
02D4                  00695 check_1
02D4   0825           00696         movf key_temp, W
02D5   3A00           00697         xorlw D'0'
02D6   1D03           00698         btfss STATUS, Z
02D7   2???           00699             goto check_2
02D8   2???           00700         call Clear_Display
02D9   3001           00701         movlw H'01'
02DA   00A4           00702         movwf lcd_tmp
                      00703         BCD_Display lcd_tmp
02DB   0E24               M         swapf lcd_tmp, w
02DC   390F               M         andlw   0x0f           ; Mask upper four bits 0000 HHHH
02DD   3E30               M         addlw   0x30           ; convert to ASCII
02DE   2???               M         call WR_DATA
                          M 
02DF   2???               M         call    lcdLongDelay
02E0   0824               M         movf    lcd_tmp,w
02E1   390F               M         andlw   0x0f           ; w  = 0000 LLLL
02E2   3E30               M         addlw   0x30           ; convert to ASCII
02E3   2???               M         call WR_DATA
02E4   2???           00704         call Switch_Lines
                      00705         Display Trial
  0000                    M                 local   loop_
  0000                    M                 local   end_
02E5   01A3               M                 clrf    Table_Counter
MPASM 5.54  /USERS/JUDY/MPLABXPROJECTS/INTER   3-26-2014  2:25:45         PAGE 21


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

02E6   0103               M                 clrw
02E7   0823               M loop_   movf    Table_Counter,W
02E8   2???               M                 call    Trial
02E9   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
02EA   1903               M                 btfsc   STATUS,Z
02EB   2???               M                         goto    end_
02EC   2???               M                 call    WR_DATA
02ED   0AA3               M                 incf    Table_Counter,F
02EE   2???               M                 goto    loop_
02EF                      M end_
02EF   3010           00706         movlw    0x10
02F0   00BC           00707         movwf    ADDRL
02F1   2???           00708         call display_EE
02F2   2???           00709         call HalfS
02F3   2???           00710         goto pmenu_access
                      00711 
02F4                  00712 display_EE
02F4   2???           00713         call read_EE
02F5   30C2           00714         movlw   B'11000010' ;move cursor to Pass
02F6   2???           00715         call WR_INS
                      00716         BCD_DisplayS DATAL
02F7   083D               M         movf    DATAL,w
02F8   390F               M         andlw   0x0f           ; w  = 0000 LLLL
02F9   3E30               M         addlw   0x30           ; convert to ASCII
02FA   2???               M         call WR_DATA
02FB   30C6           00717         movlw   B'11000110' ;move cursor to 46
02FC   2???           00718         call WR_INS
Message[305]: Using default destination of 1 (file).
02FD   0ABC           00719         incf ADDRL
02FE   2???           00720         call read_EE
                      00721         BCD_DisplayS DATAL
02FF   083D               M         movf    DATAL,w
0300   390F               M         andlw   0x0f           ; w  = 0000 LLLL
0301   3E30               M         addlw   0x30           ; convert to ASCII
0302   2???               M         call WR_DATA
0303   30CA           00722         movlw   B'11001010' ;move cursor to position 4A
0304   2???           00723         call WR_INS
Message[305]: Using default destination of 1 (file).
0305   0ABC           00724         incf ADDRL
0306   2???           00725         call read_EE
                      00726         BCD_DisplayS DATAL
0307   083D               M         movf    DATAL,w
0308   390F               M         andlw   0x0f           ; w  = 0000 LLLL
0309   3E30               M         addlw   0x30           ; convert to ASCII
030A   2???               M         call WR_DATA
030B   30CD           00727         movlw   B'11001101' ;move cursor to position 4A
030C   2???           00728         call WR_INS
Message[305]: Using default destination of 1 (file).
030D   0ABC           00729         incf ADDRL
030E   2???           00730         call read_EE
                      00731         BCD_DisplayS DATAL
030F   083D               M         movf    DATAL,w
0310   390F               M         andlw   0x0f           ; w  = 0000 LLLL
MPASM 5.54  /USERS/JUDY/MPLABXPROJECTS/INTER   3-26-2014  2:25:45         PAGE 22


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0311   3E30               M         addlw   0x30           ; convert to ASCII
0312   2???               M         call WR_DATA
0313   0008           00732         return 
                      00733 
0314                  00734 check_2
0314   0825           00735         movf key_temp, W
0315   3A01           00736         xorlw D'1'
0316   1D03           00737         btfss STATUS, Z
0317   2???           00738             goto check_3
0318   2???           00739         call Clear_Display
0319   3002           00740         movlw H'02'
031A   00A4           00741         movwf lcd_tmp
                      00742         BCD_Display lcd_tmp
031B   0E24               M         swapf lcd_tmp, w
031C   390F               M         andlw   0x0f           ; Mask upper four bits 0000 HHHH
031D   3E30               M         addlw   0x30           ; convert to ASCII
031E   2???               M         call WR_DATA
                          M 
031F   2???               M         call    lcdLongDelay
0320   0824               M         movf    lcd_tmp,w
0321   390F               M         andlw   0x0f           ; w  = 0000 LLLL
0322   3E30               M         addlw   0x30           ; convert to ASCII
0323   2???               M         call WR_DATA
0324   2???           00743         call Switch_Lines
                      00744         Display Trial
  0000                    M                 local   loop_
  0000                    M                 local   end_
0325   01A3               M                 clrf    Table_Counter
0326   0103               M                 clrw
0327   0823               M loop_   movf    Table_Counter,W
0328   2???               M                 call    Trial
0329   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
032A   1903               M                 btfsc   STATUS,Z
032B   2???               M                         goto    end_
032C   2???               M                 call    WR_DATA
032D   0AA3               M                 incf    Table_Counter,F
032E   2???               M                 goto    loop_
032F                      M end_
032F   3014           00745         movlw    0x14
0330   00BC           00746         movwf    ADDRL
0331   2???           00747         call display_EE
0332   2???           00748         call HalfS
0333   2???           00749         goto pmenu_access
                      00750 
0334                  00751 check_3
0334   0825           00752         movf key_temp, W
0335   3A02           00753         xorlw D'2'
0336   1D03           00754         btfss STATUS, Z
0337   2???           00755             goto check_4
0338   2???           00756         call Clear_Display
0339   3003           00757         movlw D'3'
033A   00A4           00758         movwf lcd_tmp
                      00759         BCD_Display lcd_tmp
MPASM 5.54  /USERS/JUDY/MPLABXPROJECTS/INTER   3-26-2014  2:25:45         PAGE 23


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

033B   0E24               M         swapf lcd_tmp, w
033C   390F               M         andlw   0x0f           ; Mask upper four bits 0000 HHHH
033D   3E30               M         addlw   0x30           ; convert to ASCII
033E   2???               M         call WR_DATA
                          M 
033F   2???               M         call    lcdLongDelay
0340   0824               M         movf    lcd_tmp,w
0341   390F               M         andlw   0x0f           ; w  = 0000 LLLL
0342   3E30               M         addlw   0x30           ; convert to ASCII
0343   2???               M         call WR_DATA
0344   2???           00760         call Switch_Lines
                      00761         Display Trial
  0000                    M                 local   loop_
  0000                    M                 local   end_
0345   01A3               M                 clrf    Table_Counter
0346   0103               M                 clrw
0347   0823               M loop_   movf    Table_Counter,W
0348   2???               M                 call    Trial
0349   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
034A   1903               M                 btfsc   STATUS,Z
034B   2???               M                         goto    end_
034C   2???               M                 call    WR_DATA
034D   0AA3               M                 incf    Table_Counter,F
034E   2???               M                 goto    loop_
034F                      M end_
034F   3018           00762         movlw    0x18
0350   00BC           00763         movwf    ADDRL
0351   2???           00764         call display_EE
0352   2???           00765         call HalfS
0353   2???           00766         goto pmenu_access
                      00767 
0354                  00768 check_4
0354   0825           00769         movf key_temp, W
0355   3A04           00770         xorlw D'4'
0356   1D03           00771         btfss STATUS, Z
0357   2???           00772             goto check_5
0358   2???           00773         call Clear_Display
0359   3004           00774         movlw H'04'
035A   00A4           00775         movwf lcd_tmp
                      00776         BCD_Display lcd_tmp
035B   0E24               M         swapf lcd_tmp, w
035C   390F               M         andlw   0x0f           ; Mask upper four bits 0000 HHHH
035D   3E30               M         addlw   0x30           ; convert to ASCII
035E   2???               M         call WR_DATA
                          M 
035F   2???               M         call    lcdLongDelay
0360   0824               M         movf    lcd_tmp,w
0361   390F               M         andlw   0x0f           ; w  = 0000 LLLL
0362   3E30               M         addlw   0x30           ; convert to ASCII
0363   2???               M         call WR_DATA
0364   2???           00777         call Switch_Lines
                      00778         Display Trial
  0000                    M                 local   loop_
MPASM 5.54  /USERS/JUDY/MPLABXPROJECTS/INTER   3-26-2014  2:25:45         PAGE 24


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  0000                    M                 local   end_
0365   01A3               M                 clrf    Table_Counter
0366   0103               M                 clrw
0367   0823               M loop_   movf    Table_Counter,W
0368   2???               M                 call    Trial
0369   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
036A   1903               M                 btfsc   STATUS,Z
036B   2???               M                         goto    end_
036C   2???               M                 call    WR_DATA
036D   0AA3               M                 incf    Table_Counter,F
036E   2???               M                 goto    loop_
036F                      M end_
036F   301C           00779         movlw    0x1c
0370   00BC           00780         movwf    ADDRL
0371   2???           00781         call display_EE
0372   2???           00782         call HalfS
0373   2???           00783         goto pmenu_access
                      00784 
0374                  00785 check_5
0374   0825           00786         movf key_temp, W
0375   3A05           00787         xorlw D'5'
0376   1D03           00788         btfss STATUS, Z
0377   2???           00789             goto check_6
0378   2???           00790         call Clear_Display
0379   3005           00791         movlw H'05'
037A   00A4           00792         movwf lcd_tmp
                      00793         BCD_Display lcd_tmp
037B   0E24               M         swapf lcd_tmp, w
037C   390F               M         andlw   0x0f           ; Mask upper four bits 0000 HHHH
037D   3E30               M         addlw   0x30           ; convert to ASCII
037E   2???               M         call WR_DATA
                          M 
037F   2???               M         call    lcdLongDelay
0380   0824               M         movf    lcd_tmp,w
0381   390F               M         andlw   0x0f           ; w  = 0000 LLLL
0382   3E30               M         addlw   0x30           ; convert to ASCII
0383   2???               M         call WR_DATA
0384   2???           00794         call Switch_Lines
                      00795         Display Trial
  0000                    M                 local   loop_
  0000                    M                 local   end_
0385   01A3               M                 clrf    Table_Counter
0386   0103               M                 clrw
0387   0823               M loop_   movf    Table_Counter,W
0388   2???               M                 call    Trial
0389   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
038A   1903               M                 btfsc   STATUS,Z
038B   2???               M                         goto    end_
038C   2???               M                 call    WR_DATA
038D   0AA3               M                 incf    Table_Counter,F
038E   2???               M                 goto    loop_
038F                      M end_
038F   3020           00796         movlw    0x20
MPASM 5.54  /USERS/JUDY/MPLABXPROJECTS/INTER   3-26-2014  2:25:45         PAGE 25


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0390   00BC           00797         movwf    ADDRL
0391   2???           00798         call display_EE
0392   2???           00799         call HalfS
0393   2???           00800         goto pmenu_access
                      00801 
0394                  00802 check_6
0394   0825           00803         movf key_temp, W
0395   3A06           00804         xorlw D'6'
0396   1D03           00805         btfss STATUS, Z
0397   2???           00806             goto check_7
0398   2???           00807         call Clear_Display
0399   3006           00808         movlw H'06'
039A   00A4           00809         movwf lcd_tmp
                      00810         BCD_Display lcd_tmp
039B   0E24               M         swapf lcd_tmp, w
039C   390F               M         andlw   0x0f           ; Mask upper four bits 0000 HHHH
039D   3E30               M         addlw   0x30           ; convert to ASCII
039E   2???               M         call WR_DATA
                          M 
039F   2???               M         call    lcdLongDelay
03A0   0824               M         movf    lcd_tmp,w
03A1   390F               M         andlw   0x0f           ; w  = 0000 LLLL
03A2   3E30               M         addlw   0x30           ; convert to ASCII
03A3   2???               M         call WR_DATA
03A4   2???           00811         call Switch_Lines
                      00812         Display Trial
  0000                    M                 local   loop_
  0000                    M                 local   end_
03A5   01A3               M                 clrf    Table_Counter
03A6   0103               M                 clrw
03A7   0823               M loop_   movf    Table_Counter,W
03A8   2???               M                 call    Trial
03A9   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
03AA   1903               M                 btfsc   STATUS,Z
03AB   2???               M                         goto    end_
03AC   2???               M                 call    WR_DATA
03AD   0AA3               M                 incf    Table_Counter,F
03AE   2???               M                 goto    loop_
03AF                      M end_
03AF   3024           00813         movlw    0x24
03B0   00BC           00814         movwf    ADDRL
03B1   2???           00815         call display_EE
03B2   2???           00816         call HalfS
03B3   2???           00817         goto pmenu_access
                      00818 
03B4                  00819 check_7
03B4   0825           00820         movf key_temp, W
03B5   3A08           00821         xorlw D'8'
03B6   1D03           00822         btfss STATUS, Z
03B7   2???           00823             goto check_8
03B8   2???           00824         call Clear_Display
03B9   3007           00825         movlw H'07'
03BA   00A4           00826         movwf lcd_tmp
MPASM 5.54  /USERS/JUDY/MPLABXPROJECTS/INTER   3-26-2014  2:25:45         PAGE 26


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00827         BCD_Display lcd_tmp
03BB   0E24               M         swapf lcd_tmp, w
03BC   390F               M         andlw   0x0f           ; Mask upper four bits 0000 HHHH
03BD   3E30               M         addlw   0x30           ; convert to ASCII
03BE   2???               M         call WR_DATA
                          M 
03BF   2???               M         call    lcdLongDelay
03C0   0824               M         movf    lcd_tmp,w
03C1   390F               M         andlw   0x0f           ; w  = 0000 LLLL
03C2   3E30               M         addlw   0x30           ; convert to ASCII
03C3   2???               M         call WR_DATA
03C4   2???           00828         call Switch_Lines
                      00829         Display Trial
  0000                    M                 local   loop_
  0000                    M                 local   end_
03C5   01A3               M                 clrf    Table_Counter
03C6   0103               M                 clrw
03C7   0823               M loop_   movf    Table_Counter,W
03C8   2???               M                 call    Trial
03C9   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
03CA   1903               M                 btfsc   STATUS,Z
03CB   2???               M                         goto    end_
03CC   2???               M                 call    WR_DATA
03CD   0AA3               M                 incf    Table_Counter,F
03CE   2???               M                 goto    loop_
03CF                      M end_
03CF   3028           00830         movlw    0x28
03D0   00BC           00831         movwf    ADDRL
03D1   2???           00832         call display_EE
03D2   2???           00833         call HalfS
03D3   2???           00834         goto pmenu_access
                      00835 
03D4                  00836 check_8
03D4   0825           00837         movf key_temp, W
03D5   3A09           00838         xorlw D'9'
03D6   1D03           00839         btfss STATUS, Z
03D7   2???           00840             goto check_9
03D8   2???           00841         call Clear_Display
03D9   3008           00842         movlw H'08'
03DA   00A4           00843         movwf lcd_tmp
                      00844         BCD_Display lcd_tmp
03DB   0E24               M         swapf lcd_tmp, w
03DC   390F               M         andlw   0x0f           ; Mask upper four bits 0000 HHHH
03DD   3E30               M         addlw   0x30           ; convert to ASCII
03DE   2???               M         call WR_DATA
                          M 
03DF   2???               M         call    lcdLongDelay
03E0   0824               M         movf    lcd_tmp,w
03E1   390F               M         andlw   0x0f           ; w  = 0000 LLLL
03E2   3E30               M         addlw   0x30           ; convert to ASCII
03E3   2???               M         call WR_DATA
03E4   2???           00845         call Switch_Lines
                      00846         Display Trial
MPASM 5.54  /USERS/JUDY/MPLABXPROJECTS/INTER   3-26-2014  2:25:45         PAGE 27


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  0000                    M                 local   loop_
  0000                    M                 local   end_
03E5   01A3               M                 clrf    Table_Counter
03E6   0103               M                 clrw
03E7   0823               M loop_   movf    Table_Counter,W
03E8   2???               M                 call    Trial
03E9   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
03EA   1903               M                 btfsc   STATUS,Z
03EB   2???               M                         goto    end_
03EC   2???               M                 call    WR_DATA
03ED   0AA3               M                 incf    Table_Counter,F
03EE   2???               M                 goto    loop_
03EF                      M end_
03EF   302C           00847         movlw    0x2c
03F0   00BC           00848         movwf    ADDRL
03F1   2???           00849         call display_EE
03F2   2???           00850         call HalfS
03F3   2???           00851         goto pmenu_access
                      00852 
03F4                  00853 check_9
03F4   0825           00854         movf key_temp, W
03F5   3A0A           00855         xorlw D'10'
03F6   1D03           00856         btfss STATUS, Z
03F7   2???           00857             goto continue
03F8   2???           00858         call Clear_Display
03F9   3009           00859         movlw H'09'
03FA   00A4           00860         movwf lcd_tmp
                      00861         BCD_Display lcd_tmp
03FB   0E24               M         swapf lcd_tmp, w
03FC   390F               M         andlw   0x0f           ; Mask upper four bits 0000 HHHH
03FD   3E30               M         addlw   0x30           ; convert to ASCII
03FE   2???               M         call WR_DATA
                          M 
03FF   2???               M         call    lcdLongDelay
0400   0824               M         movf    lcd_tmp,w
0401   390F               M         andlw   0x0f           ; w  = 0000 LLLL
0402   3E30               M         addlw   0x30           ; convert to ASCII
0403   2???               M         call WR_DATA
0404   2???           00862         call Switch_Lines
                      00863         Display Trial
  0000                    M                 local   loop_
  0000                    M                 local   end_
0405   01A3               M                 clrf    Table_Counter
0406   0103               M                 clrw
0407   0823               M loop_   movf    Table_Counter,W
0408   2???               M                 call    Trial
0409   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
040A   1903               M                 btfsc   STATUS,Z
040B   2???               M                         goto    end_
040C   2???               M                 call    WR_DATA
040D   0AA3               M                 incf    Table_Counter,F
040E   2???               M                 goto    loop_
040F                      M end_
MPASM 5.54  /USERS/JUDY/MPLABXPROJECTS/INTER   3-26-2014  2:25:45         PAGE 28


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

040F   3030           00864         movlw    0x30
0410   00BC           00865         movwf    ADDRL
0411   2???           00866         call display_EE
0412   2???           00867         call HalfS
0413   2???           00868         goto pmenu_access
                      00869 
0414                  00870 continue
0414   2???           00871         call Clear_Display
0415   0008           00872         return
                      00873 
0416                  00874 wait
0416   2???           00875          call           HalfS    ;Wait until data is available from the keypad
0417   1C86           00876          btfss          PORTB,1
0418   2???           00877          goto           wait
0419   0008           00878          return
                      00879 
041A                  00880 show_RTC
                      00881                 ;clear LCD screen
041A   3001           00882                 movlw   b'00000001'
041B   2???           00883                 call    WR_INS
                      00884 
                      00885                 ;Get year
041C   3032           00886                 movlw   "2"                             ;First line shows 20**/**/**
041D   2???           00887                 call    WR_DATA
041E   3030           00888                 movlw   "0"
041F   2???           00889                 call    WR_DATA
                      00890 
                      00891                 rtc_read        0x06            ;Read Address 0x06 from DS1307---year
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
0420   3006               M         movlw   0x06
0421   1283 1303          M         banksel 0x73
0423   00F3               M         movwf   0x73
0424   2???               M         call    read_rtc
0425   1283 1303          M         banksel 0x75
0427   0875               M         movf    0x75,w
0428   2???               M         call    rtc_convert   
0429   0877           00892                 movfw   0x77
042A   2???           00893                 call    WR_DATA
042B   0878           00894                 movfw   0x78
042C   2???           00895                 call    WR_DATA
                      00896 
042D   302F           00897                 movlw   "/"
042E   2???           00898                 call    WR_DATA
                      00899 
                      00900                 ;Get month
                      00901                 rtc_read        0x05            ;Read Address 0x05 from DS1307---month
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
MPASM 5.54  /USERS/JUDY/MPLABXPROJECTS/INTER   3-26-2014  2:25:45         PAGE 29


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
042F   3005               M         movlw   0x05
0430   1283 1303          M         banksel 0x73
0432   00F3               M         movwf   0x73
0433   2???               M         call    read_rtc
0434   1283 1303          M         banksel 0x75
0436   0875               M         movf    0x75,w
0437   2???               M         call    rtc_convert   
0438   0877           00902                 movfw   0x77
0439   2???           00903                 call    WR_DATA
043A   0878           00904                 movfw   0x78
043B   2???           00905                 call    WR_DATA
                      00906 
043C   302F           00907                 movlw   "/"
043D   2???           00908                 call    WR_DATA
                      00909 
                      00910                 ;Get day
                      00911                 rtc_read        0x04            ;Read Address 0x04 from DS1307---day
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
043E   3004               M         movlw   0x04
043F   1283 1303          M         banksel 0x73
0441   00F3               M         movwf   0x73
0442   2???               M         call    read_rtc
0443   1283 1303          M         banksel 0x75
0445   0875               M         movf    0x75,w
0446   2???               M         call    rtc_convert   
0447   0877           00912                 movfw   0x77
0448   2???           00913                 call    WR_DATA
0449   0878           00914                 movfw   0x78
044A   2???           00915                 call    WR_DATA
                      00916 
044B   30C0           00917                 movlw   B'11000000'             ;Next line displays (hour):(min):(sec) **:**:**
044C   2???           00918                 call    WR_INS
                      00919 
044D                  00920 Refresh
044D   30C0           00921         movlw B'11000000' ;move cursor to position H?4B?
044E   2???           00922         call WR_INS
                      00923 
                      00924                 ;Get hour
                      00925                 rtc_read        0x02            ;Read Address 0x02 from DS1307---hour
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
MPASM 5.54  /USERS/JUDY/MPLABXPROJECTS/INTER   3-26-2014  2:25:45         PAGE 30


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M ;                       0x77 and the ones digit is placed in 0x78
044F   3002               M         movlw   0x02
0450   1283 1303          M         banksel 0x73
0452   00F3               M         movwf   0x73
0453   2???               M         call    read_rtc
0454   1283 1303          M         banksel 0x75
0456   0875               M         movf    0x75,w
0457   2???               M         call    rtc_convert   
0458   0877           00926                 movfw   0x77
0459   2???           00927                 call    WR_DATA
045A   0878           00928                 movfw   0x78
045B   2???           00929                 call    WR_DATA
045C   303A           00930                 movlw   ":"
045D   2???           00931                 call    WR_DATA
                      00932                 ;Get minute
                      00933                 rtc_read        0x01            ;Read Address 0x01 from DS1307---min
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
045E   3001               M         movlw   0x01
045F   1283 1303          M         banksel 0x73
0461   00F3               M         movwf   0x73
0462   2???               M         call    read_rtc
0463   1283 1303          M         banksel 0x75
0465   0875               M         movf    0x75,w
0466   2???               M         call    rtc_convert   
0467   0877           00934                 movfw   0x77
0468   2???           00935                 call    WR_DATA
0469   0878           00936                 movfw   0x78
046A   2???           00937                 call    WR_DATA
046B   303A           00938                 movlw                   ":"
046C   2???           00939                 call    WR_DATA
                      00940 
                      00941                 ;Get seconds
                      00942                 rtc_read        0x00            ;Read Address 0x00 from DS1307---seconds
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
046D   3000               M         movlw   0x00
046E   1283 1303          M         banksel 0x73
0470   00F3               M         movwf   0x73
0471   2???               M         call    read_rtc
0472   1283 1303          M         banksel 0x75
0474   0875               M         movf    0x75,w
0475   2???               M         call    rtc_convert   
0476   0877           00943                 movfw   0x77
0477   2???           00944                 call    WR_DATA
MPASM 5.54  /USERS/JUDY/MPLABXPROJECTS/INTER   3-26-2014  2:25:45         PAGE 31


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0478   0878           00945                 movfw   0x78
0479   2???           00946                 call    WR_DATA
                      00947 
047A   2???           00948                 call    HalfS                   ;Delay for exactly one seconds and read DS1307 again
047B   2???           00949         call    HalfS    ;Wait until data is available from the keypad
047C   1C86           00950         btfss   PORTB,1
047D   2???           00951             goto        Refresh
047E   0008           00952         return
                      00953 
047F                  00954 Motor_On
                      00955     Display SW_ON
  0000                    M                 local   loop_
  0000                    M                 local   end_
047F   01A3               M                 clrf    Table_Counter
0480   0103               M                 clrw
0481   0823               M loop_   movf    Table_Counter,W
0482   2???               M                 call    SW_ON
0483   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
0484   1903               M                 btfsc   STATUS,Z
0485   2???               M                         goto    end_
0486   2???               M                 call    WR_DATA
0487   0AA3               M                 incf    Table_Counter,F
0488   2???               M                 goto    loop_
0489                      M end_
                      00956     ;movlw 0x01 ;turn motor on
                      00957     ;movwf PORTC
                      00958     ;call QuarterS
0489   3000           00959     movlw 0x00 ;turn motor off
048A   0087           00960     movwf PORTC
048B   2???           00961     call HalfS
048C   3001           00962     movlw 0x01 ;turn motor on
048D   0087           00963     movwf PORTC
048E   2???           00964     call EightS
048F   3000           00965     movlw 0x00 ;turn motor off
0490   0087           00966     movwf PORTC
0491   2???           00967     call HalfS
0492   3001           00968     movlw 0x01 ;turn motor on
0493   0087           00969     movwf PORTC
0494   2???           00970     call EightS
0495   3000           00971     movlw 0x00 ;turn motor off
0496   0087           00972     movwf PORTC
0497   2???           00973     call HalfS
0498   2???           00974     call Clear_Display
0499   0008           00975     return
                      00976 
049A                  00977 Motor_Off
                      00978     Display SW_OFF
  0000                    M                 local   loop_
  0000                    M                 local   end_
049A   01A3               M                 clrf    Table_Counter
049B   0103               M                 clrw
049C   0823               M loop_   movf    Table_Counter,W
049D   2???               M                 call    SW_OFF
MPASM 5.54  /USERS/JUDY/MPLABXPROJECTS/INTER   3-26-2014  2:25:45         PAGE 32


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

049E   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
049F   1903               M                 btfsc   STATUS,Z
04A0   2???               M                         goto    end_
04A1   2???               M                 call    WR_DATA
04A2   0AA3               M                 incf    Table_Counter,F
04A3   2???               M                 goto    loop_
04A4                      M end_
04A4   3002           00979     movlw 0x02 ;turn motor on
04A5   0087           00980     movwf PORTC
04A6   2???           00981     call QuarterS
04A7   3000           00982     movlw 0x00 ;turn motor off
04A8   0087           00983     movwf PORTC
04A9   2???           00984     call HalfS
04AA   3002           00985     movlw 0x02 ;turn motor on
04AB   0087           00986     movwf PORTC
04AC   2???           00987     call EightS
                      00988 ;    movlw 0x00 ;turn motor off
                      00989 ;    movwf PORTC
                      00990 ;    call  HalfS
                      00991 ;    movlw 0x02 ;turn motor on
                      00992 ;    movwf PORTC
                      00993 ;    call QuarterS
04AD   3000           00994     movlw 0x00 ;turn motor off
04AE   0087           00995     movwf PORTC
04AF   2???           00996     call Clear_Display
04B0   0008           00997     return
                      00998 
04B1                  00999 HalfS
  0000                01000         local   HalfS_0
04B1   3088           01001       movlw 0x88
04B2   00A0           01002       movwf COUNTH
04B3   30BD           01003       movlw 0xBD
04B4   00A1           01004       movwf COUNTM
04B5   3003           01005       movlw 0x03
04B6   00A2           01006       movwf COUNTL
                      01007 
04B7                  01008 HalfS_0
04B7   0BA0           01009       decfsz COUNTH, f
04B8   2???           01010       goto   $+2
04B9   0BA1           01011       decfsz COUNTM, f
04BA   2???           01012       goto   $+2
04BB   0BA2           01013       decfsz COUNTL, f
04BC   2???           01014       goto   HalfS_0
                      01015 
04BD   2???           01016       goto $+1
04BE   0000           01017       nop
04BF   0000           01018       nop
04C0   0008           01019                 return
                      01020 
04C1                  01021 QuarterS
  0000                01022         local   QuarterS_0
04C1   3044           01023       movlw 0x44
04C2   00A0           01024       movwf COUNTH
MPASM 5.54  /USERS/JUDY/MPLABXPROJECTS/INTER   3-26-2014  2:25:45         PAGE 33


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

04C3   304F           01025       movlw 0x4F
04C4   00A1           01026       movwf COUNTM
04C5   3003           01027       movlw 0x03
04C6   00A2           01028       movwf COUNTL
                      01029 
04C7                  01030 QuarterS_0
04C7   0BA0           01031       decfsz COUNTH, f
04C8   2???           01032       goto   $+2
04C9   0BA1           01033       decfsz COUNTM, f
04CA   2???           01034       goto   $+2
04CB   0BA2           01035       decfsz COUNTL, f
04CC   2???           01036       goto   QuarterS_0
                      01037 
04CD   2???           01038       goto $+1
04CE   0000           01039       nop
04CF   0000           01040       nop
04D0   0008           01041                 return
                      01042 
04D1                  01043 EightS
  0000                01044         local   EightS_0
04D1   3020           01045       movlw 0x20
04D2   00A0           01046       movwf COUNTH
04D3   3020           01047       movlw 0x20
04D4   00A1           01048       movwf COUNTM
04D5   3003           01049       movlw 0x03
04D6   00A2           01050       movwf COUNTL
                      01051 
04D7                  01052 EightS_0
04D7   0BA0           01053       decfsz COUNTH, f
04D8   2???           01054       goto   $+2
04D9   0BA1           01055       decfsz COUNTM, f
04DA   2???           01056       goto   $+2
04DB   0BA2           01057       decfsz COUNTL, f
04DC   2???           01058       goto   EightS_0
                      01059 
04DD   2???           01060       goto $+1
04DE   0000           01061       nop
04DF   0000           01062       nop
04E0   0008           01063                 return
                      01064 
04E1                  01065 WR_INS
04E1   1108           01066         bcf             RS                              ;clear RS
04E2   00A9           01067         movwf   com                             ;W --> com
04E3   39F0           01068         andlw   0xF0                    ;mask 4 bits MSB w = X0
04E4   0088           01069         movwf   PORTD                   ;Send 4 bits MSB
04E5   1588           01070         bsf             E                               ;
04E6   2???           01071         call    lcdLongDelay    ;__    __
04E7   1188           01072         bcf             E                               ;  |__|
04E8   0E29           01073         swapf   com,w
04E9   39F0           01074         andlw   0xF0                    ;1111 0010
04EA   0088           01075         movwf   PORTD                   ;send 4 bits LSB
04EB   1588           01076         bsf             E                               ;
04EC   2???           01077         call    lcdLongDelay    ;__    __
MPASM 5.54  /USERS/JUDY/MPLABXPROJECTS/INTER   3-26-2014  2:25:45         PAGE 34


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

04ED   1188           01078         bcf             E                               ;  |__|
04EE   2???           01079         call    lcdLongDelay
04EF   0008           01080         return
                      01081 
04F0                  01082 WR_DATA
04F0   1508           01083         bsf             RS
04F1   00AA           01084         movwf   dat
04F2   082A           01085         movf    dat,w
04F3   39F0           01086         andlw   0xF0
04F4   3E04           01087         addlw   4
04F5   0088           01088         movwf   PORTD
04F6   1588           01089         bsf             E                               ;
04F7   2???           01090         call    lcdLongDelay    ;__    __
04F8   1188           01091         bcf             E                               ;  |__|
04F9   0E2A           01092         swapf   dat,w
04FA   39F0           01093         andlw   0xF0
04FB   3E04           01094         addlw   4
04FC   0088           01095         movwf   PORTD
04FD   1588           01096         bsf             E                               ;
04FE   2???           01097         call    lcdLongDelay    ;__    __
04FF   1188           01098         bcf             E                               ;  |__|
0500   0008           01099         return
                      01100 
0501                  01101 Convert
0501   01BB           01102     clrf run_temp
                      01103 ;save and restore
0502   0835           01104     movf runtime, w
0503   00BB           01105     movwf run_temp
0504   3008           01106     movlw 8
0505   00BA           01107     movwf count_temp
0506   01B9           01108     clrf huns
0507   01B8           01109     clrf tens
0508   01B7           01110     clrf ones
                      01111 
0509                  01112 BCDADD3
                      01113 
0509   3005           01114     movlw 5
050A   0239           01115     subwf huns, 0
050B   1803           01116     btfsc STATUS, C
050C   2???           01117     CALL ADD3HUNS
                      01118 
050D   3005           01119     movlw 5
050E   0238           01120     subwf tens, 0
050F   1803           01121     btfsc STATUS, C
0510   2???           01122     CALL ADD3TENS
                      01123 
0511   3005           01124     movlw 5
0512   0237           01125     subwf ones, 0
0513   1803           01126     btfsc STATUS, C
0514   2???           01127     CALL ADD3ONES
                      01128 
0515   03BA           01129     decf count_temp, 1
0516   1003           01130     bcf STATUS, C
MPASM 5.54  /USERS/JUDY/MPLABXPROJECTS/INTER   3-26-2014  2:25:45         PAGE 35


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0517   0DB5           01131     rlf runtime, 1
0518   0DB7           01132     rlf ones, 1
0519   1A37           01133     btfsc ones,4 ;
051A   2???           01134     CALL CARRYONES
051B   0DB8           01135     rlf tens, 1
                      01136 
051C   1A38           01137     btfsc tens,4 ;
051D   2???           01138     CALL CARRYTENS
051E   0DB9           01139     rlf huns,1
051F   1003           01140     bcf STATUS, C
                      01141 
0520   083A           01142     movf count_temp, 0
0521   1D03           01143     btfss STATUS, Z
0522   2???           01144     GOTO BCDADD3
                      01145 
                      01146 
0523   0839           01147     movf huns, 0 ; add ASCII Offset
0524   3E30           01148     addlw h'30'
0525   2???           01149     call WR_DATA
                      01150 
0526   0838           01151     movf tens, 0 ; add ASCII Offset
0527   3E30           01152     addlw h'30'
0528   2???           01153     call WR_DATA
                      01154 
0529   0837           01155     movf ones, 0 ; add ASCII Offset
052A   3E30           01156     addlw h'30'
052B   2???           01157     call WR_DATA
                      01158 
052C   083B           01159     movf run_temp, w
052D   00B5           01160     movwf runtime
052E   0008           01161     RETURN
                      01162 
052F                  01163 ADD3HUNS
052F   3003           01164     movlw 3
0530   07B9           01165     addwf huns,1
0531   0008           01166     RETURN
                      01167 
0532                  01168 ADD3TENS
0532   3003           01169     movlw 3
0533   07B8           01170     addwf tens,1
0534   0008           01171     RETURN
                      01172 
0535                  01173 ADD3ONES
0535   3003           01174     movlw 3
0536   07B7           01175     addwf ones,1
0537   0008           01176     RETURN
                      01177 
0538                  01178 CARRYONES
0538   1237           01179     bcf ones, 4
0539   1403           01180     bsf STATUS, C
053A   0008           01181     RETURN
                      01182 
053B                  01183 CARRYTENS
MPASM 5.54  /USERS/JUDY/MPLABXPROJECTS/INTER   3-26-2014  2:25:45         PAGE 36


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

053B   1238           01184     bcf tens, 4
053C   1403           01185     bsf STATUS, C
053D   0008           01186     RETURN
                      01187 
053E                  01188 Convert1
053E   01BB           01189     clrf run_temp
                      01190 ;save and restore
053F   083F           01191     movf signal, w
0540   00BB           01192     movwf run_temp
0541   3008           01193     movlw 8
0542   00BA           01194     movwf count_temp
0543   01B9           01195     clrf huns
0544   01B8           01196     clrf tens
0545   01B7           01197     clrf ones
                      01198 
0546                  01199 BCDADD31
                      01200 
0546   3005           01201     movlw 5
0547   0239           01202     subwf huns, 0
0548   1803           01203     btfsc STATUS, C
0549   2???           01204     CALL ADD3HUNS1
                      01205 
054A   3005           01206     movlw 5
054B   0238           01207     subwf tens, 0
054C   1803           01208     btfsc STATUS, C
054D   2???           01209     CALL ADD3TENS1
                      01210 
054E   3005           01211     movlw 5
054F   0237           01212     subwf ones, 0
0550   1803           01213     btfsc STATUS, C
0551   2???           01214     CALL ADD3ONES1
                      01215 
0552   03BA           01216     decf count_temp, 1
0553   1003           01217     bcf STATUS, C
0554   0DBF           01218     rlf signal, 1
0555   0DB7           01219     rlf ones, 1
0556   1A37           01220     btfsc ones,4 ;
0557   2???           01221     CALL CARRYONES1
0558   0DB8           01222     rlf tens, 1
                      01223 
0559   1A38           01224     btfsc tens,4 ;
055A   2???           01225     CALL CARRYTENS1
055B   0DB9           01226     rlf huns,1
055C   1003           01227     bcf STATUS, C
                      01228 
055D   083A           01229     movf count_temp, 0
055E   1D03           01230     btfss STATUS, Z
055F   2???           01231     GOTO BCDADD31
                      01232 
                      01233 
0560   0839           01234     movf huns, 0 ; add ASCII Offset
0561   3E30           01235     addlw h'30'
0562   2???           01236     call WR_DATA
MPASM 5.54  /USERS/JUDY/MPLABXPROJECTS/INTER   3-26-2014  2:25:45         PAGE 37


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01237 
0563   0838           01238     movf tens, 0 ; add ASCII Offset
0564   3E30           01239     addlw h'30'
0565   2???           01240     call WR_DATA
                      01241 
0566   0837           01242     movf ones, 0 ; add ASCII Offset
0567   3E30           01243     addlw h'30'
0568   2???           01244     call WR_DATA
                      01245 
0569   083B           01246     movf run_temp, w
056A   00BF           01247     movwf signal
056B   0008           01248     RETURN
                      01249 
056C                  01250 ADD3HUNS1
056C   3003           01251     movlw 3
056D   07B9           01252     addwf huns,1
056E   0008           01253     RETURN
                      01254 
056F                  01255 ADD3TENS1
056F   3003           01256     movlw 3
0570   07B8           01257     addwf tens,1
0571   0008           01258     RETURN
                      01259 
0572                  01260 ADD3ONES1
0572   3003           01261     movlw 3
0573   07B7           01262     addwf ones,1
0574   0008           01263     RETURN
                      01264 
0575                  01265 CARRYONES1
0575   1237           01266     bcf ones, 4
0576   1403           01267     bsf STATUS, C
0577   0008           01268     RETURN
                      01269 
0578                  01270 CARRYTENS1
0578   1238           01271     bcf tens, 4
0579   1403           01272     bsf STATUS, C
057A   0008           01273     RETURN
                      01274 
057B                  01275 lcdLongDelay
057B   3014           01276     movlw d'20'
057C   00AC           01277     movwf lcd_d2
057D                  01278 LLD_LOOP
                      01279     LCD_DELAY
057D   30FF               M         movlw   0xFF
057E   00AB               M         movwf   lcd_d1
057F   0BAB               M         decfsz  lcd_d1,f
0580   2???               M         goto    $-1
0581   0BAC           01280     decfsz lcd_d2,f
0582   2???           01281     goto LLD_LOOP
0583   0008           01282     return
                      01283 
                      01284 
0584                  01285 ISR
MPASM 5.54  /USERS/JUDY/MPLABXPROJECTS/INTER   3-26-2014  2:25:45         PAGE 38


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01286         ;saving registers
0584   00B0           01287         movwf w_temp
0585   0803           01288         movf STATUS, w
0586   00B1           01289         movwf status_temp
                      01290 
0587                  01291 Timer
0587   110B           01292         bcf     INTCON, 2
0588   0BB6           01293         decfsz  timercount, f
0589   2???           01294             goto    addsignal
058A   0AB5           01295         incf    runtime, f
058B   3026           01296         movlw   D'38'
058C   00B6           01297         movwf   timercount
058D   2???           01298         goto    finish
                      01299 
058E                  01300 addsignal
058E   1283 1303      01301         banksel PORTB
0590   1C06           01302         btfss   PORTB, 0
0591   2???           01303             goto    finish
Message[305]: Using default destination of 1 (file).
0592   0ABF           01304         incf    signal
                      01305 
0593                  01306 finish
0593   0831           01307         movf status_temp, w
0594   0083           01308         movwf STATUS
0595   0EB0           01309         swapf w_temp, f
0596   0E30           01310         swapf w_temp, w
0597   0009           01311         retfie
                      01312 
0598                  01313 write_EE
                      01314 ;write to EEPROM
0598   1283 1303      01315     banksel ADDRL
059A   083C           01316     movf    ADDRL, W ; write address of desired program memory location
059B   1283 1703      01317     banksel EEADR
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
059D   008D           01318     movwf   EEADR
                      01319 ;    movf    ADDRH, W
                      01320 ;    movwf   EEADRH
059E   1283 1303      01321     banksel VALUEL
05A0   083E           01322     movf    VALUEL, W ; write value to program at desired memory locqation
05A1   1283 1703      01323     banksel EEDATA
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
05A3   008C           01324     movwf   EEDATA
                      01325 ;    movf    VALUEH, W
                      01326 ;    movwf   EEDATH
                      01327 
05A4   1683           01328     bsf     STATUS, RP0
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
05A5   178C           01329     bsf     EECON1, EEPGD
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
05A6   150C           01330     bsf     EECON1, WREN
05A7   138B           01331     bcf     INTCON, GIE
                      01332 
05A8   3055           01333     movlw   0x55
MPASM 5.54  /USERS/JUDY/MPLABXPROJECTS/INTER   3-26-2014  2:25:45         PAGE 39


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
05A9   008D           01334     movwf   EECON2
05AA   30AA           01335     movlw   0xaa
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
05AB   008D           01336     movwf   EECON2 ;
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
05AC   148C           01337     bsf     EECON1, WR ; start write operation
05AD   0000           01338     nop ;wait for micro
05AE   0000           01339     nop
                      01340 
05AF   178B           01341     bsf    INTCON, GIE ;re-enable interrupts
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
05B0   110C           01342     bcf    EECON1, WREN ;disables writes
05B1   1283           01343     bcf    STATUS, RP0
05B2   1303           01344     bcf    STATUS, RP1 
05B3   0008           01345     return
                      01346 
05B4                  01347 write_EES
05B4   1283 1303      01348     banksel ADDRL
05B6   083C           01349     movf    ADDRL, W ; write address of desired program memory location
05B7   1283 1703      01350     banksel EEADR
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
05B9   008D           01351     movwf   EEADR
                      01352 
05BA   1683           01353     bsf     STATUS, RP0
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
05BB   178C           01354     bsf     EECON1, EEPGD
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
05BC   150C           01355     bsf     EECON1, WREN
05BD   138B           01356     bcf     INTCON, GIE
                      01357 
05BE   3055           01358     movlw   0x55
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
05BF   008D           01359     movwf   EECON2
05C0   30AA           01360     movlw   0xaa
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
05C1   008D           01361     movwf   EECON2 ;
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
05C2   148C           01362     bsf     EECON1, WR ; start write operation
05C3   0000           01363     nop ;wait for micro
05C4   0000           01364     nop
                      01365 
05C5   178B           01366     bsf    INTCON, GIE ;re-enable interrupts
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
05C6   110C           01367     bcf    EECON1, WREN ;disables writes
05C7   1283           01368     bcf    STATUS, RP0
05C8   1303           01369     bcf    STATUS, RP1
05C9   0008           01370     return
                      01371 
05CA                  01372 read_EE
05CA   1283 1303      01373     banksel ADDRL
05CC   083C           01374     movf   ADDRL, W
05CD   1283 1703      01375     banksel EEADR
MPASM 5.54  /USERS/JUDY/MPLABXPROJECTS/INTER   3-26-2014  2:25:45         PAGE 40


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
05CF   008D           01376     movwf   EEADR
05D0   1683 1703      01377     banksel EECON1
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
05D2   178C           01378     bsf     EECON1, EEPGD
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
05D3   140C           01379     bsf     EECON1, RD
05D4   0000           01380     nop
05D5   0000           01381     nop
05D6   1283           01382     bcf     STATUS, RP0
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
05D7   080C           01383     movf    EEDATA, W
05D8   1283 1303      01384     banksel DATAL
05DA   00BD           01385     movwf   DATAL
05DB   1283           01386     bcf     STATUS, RP0
05DC   1303           01387     bcf     STATUS, RP1
05DD   0008           01388     return
                      01389 
05DE                  01390 shift_EE
                      01391     ;shift 8 to 9
05DE   1283 1303      01392     banksel DATAL
05E0   302C           01393     movlw   0x2c
05E1   00BC           01394     movwf   ADDRL
05E2   2???           01395     call    read_EE
05E3   3030           01396     movlw   0x30
05E4   00BC           01397     movwf   ADDRL
05E5   2???           01398     call    write_EES
                      01399 
05E6   302D           01400     movlw   0x2d
05E7   00BC           01401     movwf   ADDRL
05E8   2???           01402     call    read_EE
05E9   3031           01403     movlw   0x31
05EA   00BC           01404     movwf   ADDRL
05EB   2???           01405     call    write_EES
                      01406 
05EC   302E           01407     movlw   0x2e
05ED   00BC           01408     movwf   ADDRL
05EE   2???           01409     call    read_EE
05EF   3032           01410     movlw   0x32
05F0   00BC           01411     movwf   ADDRL
05F1   2???           01412     call    write_EES
                      01413 
05F2   302F           01414     movlw   0x2f
05F3   00BC           01415     movwf   ADDRL
05F4   2???           01416     call    read_EE
05F5   3033           01417     movlw   0x33
05F6   00BC           01418     movwf   ADDRL
05F7   2???           01419     call    write_EES
                      01420 
                      01421     ;shift 7 to 8
05F8   1283 1303      01422     banksel DATAL
05FA   3028           01423     movlw   0x28
05FB   00BC           01424     movwf   ADDRL
MPASM 5.54  /USERS/JUDY/MPLABXPROJECTS/INTER   3-26-2014  2:25:45         PAGE 41


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

05FC   2???           01425     call    read_EE
05FD   302C           01426     movlw   0x2c
05FE   00BC           01427     movwf   ADDRL
05FF   2???           01428     call    write_EES
                      01429 
0600   3029           01430     movlw   0x29
0601   00BC           01431     movwf   ADDRL
0602   2???           01432     call    read_EE
0603   302D           01433     movlw   0x2d
0604   00BC           01434     movwf   ADDRL
0605   2???           01435     call    write_EES
                      01436 
0606   302A           01437     movlw   0x2a
0607   00BC           01438     movwf   ADDRL
0608   2???           01439     call    read_EE
0609   302E           01440     movlw   0x2e
060A   00BC           01441     movwf   ADDRL
060B   2???           01442     call    write_EES
                      01443 
060C   302B           01444     movlw   0x2b
060D   00BC           01445     movwf   ADDRL
060E   2???           01446     call    read_EE
060F   302F           01447     movlw   0x2f
0610   00BC           01448     movwf   ADDRL
0611   2???           01449     call    write_EES
                      01450 
                      01451     ;shift 6 to 7
0612   1283 1303      01452     banksel DATAL
0614   3024           01453     movlw   0x24
0615   00BC           01454     movwf   ADDRL
0616   2???           01455     call    read_EE
0617   3028           01456     movlw   0x28
0618   00BC           01457     movwf   ADDRL
0619   2???           01458     call    write_EES
                      01459 
061A   3025           01460     movlw   0x25
061B   00BC           01461     movwf   ADDRL
061C   2???           01462     call    read_EE
061D   3029           01463     movlw   0x29
061E   00BC           01464     movwf   ADDRL
061F   2???           01465     call    write_EES
                      01466 
0620   3026           01467     movlw   0x26
0621   00BC           01468     movwf   ADDRL
0622   2???           01469     call    read_EE
0623   302A           01470     movlw   0x2a
0624   00BC           01471     movwf   ADDRL
0625   2???           01472     call    write_EES
                      01473 
0626   3027           01474     movlw   0x27
0627   00BC           01475     movwf   ADDRL
0628   2???           01476     call    read_EE
0629   302B           01477     movlw   0x2b
MPASM 5.54  /USERS/JUDY/MPLABXPROJECTS/INTER   3-26-2014  2:25:45         PAGE 42


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

062A   00BC           01478     movwf   ADDRL
062B   2???           01479     call    write_EES
                      01480 
                      01481     ;shift 5 to 6
062C   1283 1303      01482     banksel DATAL
062E   3020           01483     movlw   0x20
062F   00BC           01484     movwf   ADDRL
0630   2???           01485     call    read_EE
0631   3024           01486     movlw   0x24
0632   00BC           01487     movwf   ADDRL
0633   2???           01488     call    write_EES
                      01489 
0634   3021           01490     movlw   0x21
0635   00BC           01491     movwf   ADDRL
0636   2???           01492     call    read_EE
0637   3025           01493     movlw   0x25
0638   00BC           01494     movwf   ADDRL
0639   2???           01495     call    write_EES
                      01496 
063A   3022           01497     movlw   0x22
063B   00BC           01498     movwf   ADDRL
063C   2???           01499     call    read_EE
063D   3026           01500     movlw   0x26
063E   00BC           01501     movwf   ADDRL
063F   2???           01502     call    write_EES
                      01503 
0640   3023           01504     movlw   0x23
0641   00BC           01505     movwf   ADDRL
0642   2???           01506     call    read_EE
0643   3027           01507     movlw   0x27
0644   00BC           01508     movwf   ADDRL
0645   2???           01509     call    write_EES
                      01510 
                      01511     ;shift 4 to 5
0646   1283 1303      01512     banksel DATAL
0648   301C           01513     movlw   0x1c
0649   00BC           01514     movwf   ADDRL
064A   2???           01515     call    read_EE
064B   3020           01516     movlw   0x20
064C   00BC           01517     movwf   ADDRL
064D   2???           01518     call    write_EES
                      01519 
064E   301D           01520     movlw   0x1d
064F   00BC           01521     movwf   ADDRL
0650   2???           01522     call    read_EE
0651   3021           01523     movlw   0x21
0652   00BC           01524     movwf   ADDRL
0653   2???           01525     call    write_EES
                      01526 
0654   301E           01527     movlw   0x1e
0655   00BC           01528     movwf   ADDRL
0656   2???           01529     call    read_EE
0657   3022           01530     movlw   0x22
MPASM 5.54  /USERS/JUDY/MPLABXPROJECTS/INTER   3-26-2014  2:25:45         PAGE 43


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0658   00BC           01531     movwf   ADDRL
0659   2???           01532     call    write_EES
                      01533 
065A   301F           01534     movlw   0x1f
065B   00BC           01535     movwf   ADDRL
065C   2???           01536     call    read_EE
065D   3023           01537     movlw   0x23
065E   00BC           01538     movwf   ADDRL
065F   2???           01539     call    write_EES
                      01540 
                      01541     ;shift 3 to 4
0660   1283 1303      01542     banksel DATAL
0662   3018           01543     movlw   0x18
0663   00BC           01544     movwf   ADDRL
0664   2???           01545     call    read_EE
0665   301C           01546     movlw   0x1c
0666   00BC           01547     movwf   ADDRL
0667   2???           01548     call    write_EES
                      01549 
0668   3019           01550     movlw   0x19
0669   00BC           01551     movwf   ADDRL
066A   2???           01552     call    read_EE
066B   301D           01553     movlw   0x1d
066C   00BC           01554     movwf   ADDRL
066D   2???           01555     call    write_EES
                      01556 
066E   301A           01557     movlw   0x1a
066F   00BC           01558     movwf   ADDRL
0670   2???           01559     call    read_EE
0671   301E           01560     movlw   0x1e
0672   00BC           01561     movwf   ADDRL
0673   2???           01562     call    write_EES
                      01563 
0674   301B           01564     movlw   0x1b
0675   00BC           01565     movwf   ADDRL
0676   2???           01566     call    read_EE
0677   301F           01567     movlw   0x1f
0678   00BC           01568     movwf   ADDRL
0679   2???           01569     call    write_EES
                      01570 
                      01571     ;shift 2 to 3
067A   1283 1303      01572     banksel DATAL
067C   3014           01573     movlw   0x14
067D   00BC           01574     movwf   ADDRL
067E   2???           01575     call    read_EE
067F   3018           01576     movlw   0x18
0680   00BC           01577     movwf   ADDRL
0681   2???           01578     call    write_EES
                      01579 
0682   3015           01580     movlw   0x15
0683   00BC           01581     movwf   ADDRL
0684   2???           01582     call    read_EE
0685   3019           01583     movlw   0x19
MPASM 5.54  /USERS/JUDY/MPLABXPROJECTS/INTER   3-26-2014  2:25:45         PAGE 44


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0686   00BC           01584     movwf   ADDRL
0687   2???           01585     call    write_EES
                      01586 
0688   3016           01587     movlw   0x16
0689   00BC           01588     movwf   ADDRL
068A   2???           01589     call    read_EE
068B   301A           01590     movlw   0x1a
068C   00BC           01591     movwf   ADDRL
068D   2???           01592     call    write_EES
                      01593 
068E   3017           01594     movlw   0x17
068F   00BC           01595     movwf   ADDRL
0690   2???           01596     call    read_EE
0691   301B           01597     movlw   0x1b
0692   00BC           01598     movwf   ADDRL
0693   2???           01599     call    write_EES
                      01600 
                      01601     ;shift 1 to 2
0694   1283 1303      01602     banksel DATAL
0696   3010           01603     movlw   0x10
0697   00BC           01604     movwf   ADDRL
0698   2???           01605     call    read_EE
0699   3014           01606     movlw   0x14
069A   00BC           01607     movwf   ADDRL
069B   2???           01608     call    write_EES
                      01609 
069C   3011           01610     movlw   0x11
069D   00BC           01611     movwf   ADDRL
069E   2???           01612     call    read_EE
069F   3015           01613     movlw   0x15
06A0   00BC           01614     movwf   ADDRL
06A1   2???           01615     call    write_EES
                      01616 
06A2   3012           01617     movlw   0x12
06A3   00BC           01618     movwf   ADDRL
06A4   2???           01619     call    read_EE
06A5   3016           01620     movlw   0x16
06A6   00BC           01621     movwf   ADDRL
06A7   2???           01622     call    write_EES
                      01623 
06A8   3013           01624     movlw   0x13
06A9   00BC           01625     movwf   ADDRL
06AA   2???           01626     call    read_EE
06AB   3017           01627     movlw   0x17
06AC   00BC           01628     movwf   ADDRL
06AD   2???           01629     call    write_EES
                      01630 
06AE   0008           01631     return
                      01632 
Warning[205]: Found directive in column 1. (END)
3F72                  01633 END
MPASM 5.54  /USERS/JUDY/MPLABXPROJECTS/INTER   3-26-2014  2:25:45         PAGE 45


SYMBOL TABLE
  LABEL                             VALUE 

ACKDT                             00000005
ACKEN                             00000004
ACKSTAT                           00000006
ADCON0                            0000001F
ADCON1                            0000009F
ADCS0                             00000006
ADCS1                             00000007
ADD3HUNS                          0000052F
ADD3HUNS1                         0000056C
ADD3ONES                          00000535
ADD3ONES1                         00000572
ADD3TENS                          00000532
ADD3TENS1                         0000056F
ADDEN                             00000003
ADDRL                             0000003C
ADFM                              00000007
ADIE                              00000006
ADIF                              00000006
ADON                              00000000
ADRESH                            0000001E
ADRESL                            0000009E
BCDADD3                           00000509
BCDADD31                          00000546
BCD_Display                       
BCD_DisplayS                      
BCLIE                             00000003
BCLIF                             00000003
BF                                00000000
BRGH                              00000002
C                                 00000000
CARRYONES                         00000538
CARRYONES1                        00000575
CARRYTENS                         0000053B
CARRYTENS1                        00000578
CCP1CON                           00000017
CCP1IE                            00000002
CCP1IF                            00000002
CCP1M0                            00000000
CCP1M1                            00000001
CCP1M2                            00000002
CCP1M3                            00000003
CCP1X                             00000005
CCP1Y                             00000004
CCP2CON                           0000001D
CCP2IE                            00000000
CCP2IF                            00000000
CCP2M0                            00000000
CCP2M1                            00000001
CCP2M2                            00000002
CCP2M3                            00000003
CCP2X                             00000005
CCP2Y                             00000004
CCPR1                             00000015
MPASM 5.54  /USERS/JUDY/MPLABXPROJECTS/INTER   3-26-2014  2:25:45         PAGE 46


SYMBOL TABLE
  LABEL                             VALUE 

CCPR1H                            00000016
CCPR1L                            00000015
CCPR2                             0000001B
CCPR2H                            0000001C
CCPR2L                            0000001B
CHS0                              00000003
CHS1                              00000004
CHS2                              00000005
CKE                               00000006
CKP                               00000004
COUNTH                            00000020
COUNTL                            00000022
COUNTM                            00000021
CREN                              00000004
CSRC                              00000007
Check_Flicker                     000001CA
Clear_Display                     000000F6
Convert                           00000501
Convert1                          0000053E
D                                 00000005
DATAL                             0000003D
DATA_ADDRESS                      00000005
DC                                00000001
D_A                               00000005
D_NOT_A                           00000005
Display                           
Display_results                   000001F2
Done                              00000097
E                                 PORTD,3
EEADR                             0000010D
EEADRH                            0000010F
EECON1                            0000018C
EECON2                            0000018D
EEDATA                            0000010C
EEDATH                            0000010E
EEIE                              00000004
EEIF                              00000004
EEPGD                             00000007
EightS                            000004D1
F                                 00000001
FERR                              00000002
FSR                               00000004
GCEN                              00000007
GIE                               00000007
GO                                00000002
GO_DONE                           00000002
GO_NOT_DONE                       00000002
HalfS                             000004B1
I2C_DATA                          00000005
I2C_READ                          00000002
I2C_START                         00000003
I2C_STOP                          00000004
IBF                               00000007
MPASM 5.54  /USERS/JUDY/MPLABXPROJECTS/INTER   3-26-2014  2:25:45         PAGE 47


SYMBOL TABLE
  LABEL                             VALUE 

IBOV                              00000005
INDF                              00000000
INTCON                            0000000B
INTE                              00000004
INTEDG                            00000006
INTF                              00000001
IRP                               00000007
ISR                               00000584
InitLCD                           000000F9
LCD_DELAY                         
LLD_LOOP                          0000057D
Main                              00000023
Menu                              00000056
Motor_Off                         0000049A
Motor_On                          0000047F
NOT_A                             00000005
NOT_ADDRESS                       00000005
NOT_BO                            00000000
NOT_BOR                           00000000
NOT_DONE                          00000002
NOT_PD                            00000003
NOT_POR                           00000001
NOT_RBPU                          00000007
NOT_RC8                           00000006
NOT_T1SYNC                        00000002
NOT_TO                            00000004
NOT_TX8                           00000006
NOT_W                             00000002
NOT_WRITE                         00000002
OBF                               00000006
OERR                              00000001
OPTION_REG                        00000081
Other_wise                        00000182
P                                 00000004
PCFG0                             00000000
PCFG1                             00000001
PCFG2                             00000002
PCFG3                             00000003
PCL                               00000002
PCLATH                            0000000A
PCON                              0000008E
PEIE                              00000006
PEN                               00000002
PIE1                              0000008C
PIE2                              0000008D
PIR1                              0000000C
PIR2                              0000000D
PMem                              000000B4
PMenu                             000000C3
PORTA                             00000005
PORTB                             00000006
PORTC                             00000007
PORTD                             00000008
MPASM 5.54  /USERS/JUDY/MPLABXPROJECTS/INTER   3-26-2014  2:25:45         PAGE 48


SYMBOL TABLE
  LABEL                             VALUE 

PORTE                             00000009
PR2                               00000092
PS0                               00000000
PS1                               00000001
PS2                               00000002
PSA                               00000003
PSPIE                             00000007
PSPIF                             00000007
PSPMODE                           00000004
Paused                            0000004E
QuarterS                          000004C1
R                                 00000002
RA0                               00000000
RA1                               00000001
RA2                               00000002
RA3                               00000003
RA4                               00000004
RA5                               00000005
RB0                               00000000
RB1                               00000001
RB2                               00000002
RB3                               00000003
RB4                               00000004
RB5                               00000005
RB6                               00000006
RB7                               00000007
RBIE                              00000003
RBIF                              00000000
RC0                               00000000
RC1                               00000001
RC2                               00000002
RC3                               00000003
RC4                               00000004
RC5                               00000005
RC6                               00000006
RC7                               00000007
RC8_9                             00000006
RC9                               00000006
RCD8                              00000000
RCEN                              00000003
RCIE                              00000005
RCIF                              00000005
RCREG                             0000001A
RCSTA                             00000018
RD                                00000000
RD0                               00000000
RD1                               00000001
RD2                               00000002
RD3                               00000003
RD4                               00000004
RD5                               00000005
RD6                               00000006
RD7                               00000007
MPASM 5.54  /USERS/JUDY/MPLABXPROJECTS/INTER   3-26-2014  2:25:45         PAGE 49


SYMBOL TABLE
  LABEL                             VALUE 

RE0                               00000000
RE1                               00000001
RE2                               00000002
READ_WRITE                        00000002
RP0                               00000005
RP1                               00000006
RS                                PORTD,2
RSEN                              00000001
RTC                               000000D1
RX9                               00000006
RX9D                              00000000
R_NOT_W                           00000002
R_W                               00000002
Refresh                           0000044D
Run                               0000006F
Runtime                           000000A9
S                                 00000003
SEN                               00000000
SMP                               00000007
SPBRG                             00000099
SPEN                              00000007
SREN                              00000005
SSPADD                            00000093
SSPBUF                            00000013
SSPCON                            00000014
SSPCON2                           00000091
SSPEN                             00000005
SSPIE                             00000003
SSPIF                             00000003
SSPM0                             00000000
SSPM1                             00000001
SSPM2                             00000002
SSPM3                             00000003
SSPOV                             00000006
SSPSTAT                           00000094
STATUS                            00000003
SW_OFF                            0000008B
SW_ON                             00000080
SYNC                              00000004
Start_Test                        00000031
Switch_Lines                      000000F3
T0CS                              00000005
T0IE                              00000005
T0IF                              00000002
T0SE                              00000004
T1CKPS0                           00000004
T1CKPS1                           00000005
T1CON                             00000010
T1INSYNC                          00000002
T1OSCEN                           00000003
T1SYNC                            00000002
T2CKPS0                           00000000
T2CKPS1                           00000001
MPASM 5.54  /USERS/JUDY/MPLABXPROJECTS/INTER   3-26-2014  2:25:45         PAGE 50


SYMBOL TABLE
  LABEL                             VALUE 

T2CON                             00000012
TMR0                              00000001
TMR0IE                            00000005
TMR0IF                            00000002
TMR1                              0000000E
TMR1CS                            00000001
TMR1H                             0000000F
TMR1IE                            00000000
TMR1IF                            00000000
TMR1L                             0000000E
TMR1ON                            00000000
TMR2                              00000011
TMR2IE                            00000001
TMR2IF                            00000001
TMR2ON                            00000002
TOUTPS0                           00000003
TOUTPS1                           00000004
TOUTPS2                           00000005
TOUTPS3                           00000006
TRISA                             00000085
TRISA0                            00000000
TRISA1                            00000001
TRISA2                            00000002
TRISA3                            00000003
TRISA4                            00000004
TRISA5                            00000005
TRISB                             00000086
TRISB0                            00000000
TRISB1                            00000001
TRISB2                            00000002
TRISB3                            00000003
TRISB4                            00000004
TRISB5                            00000005
TRISB6                            00000006
TRISB7                            00000007
TRISC                             00000087
TRISC0                            00000000
TRISC1                            00000001
TRISC2                            00000002
TRISC3                            00000003
TRISC4                            00000004
TRISC5                            00000005
TRISC6                            00000006
TRISC7                            00000007
TRISD                             00000088
TRISD0                            00000000
TRISD1                            00000001
TRISD2                            00000002
TRISD3                            00000003
TRISD4                            00000004
TRISD5                            00000005
TRISD6                            00000006
TRISD7                            00000007
MPASM 5.54  /USERS/JUDY/MPLABXPROJECTS/INTER   3-26-2014  2:25:45         PAGE 51


SYMBOL TABLE
  LABEL                             VALUE 

TRISE                             00000089
TRISE0                            00000000
TRISE1                            00000001
TRISE2                            00000002
TRMT                              00000001
TX8_9                             00000006
TX9                               00000006
TX9D                              00000000
TXD8                              00000000
TXEN                              00000005
TXIE                              00000004
TXIF                              00000004
TXREG                             00000019
TXSTA                             00000098
Table_Counter                     00000023
Test                              0000003B
Timer                             00000587
Trial                             000000E4
UA                                00000001
VALUEL                            0000003E
W                                 00000000
WCOL                              00000007
WR                                00000001
WREN                              00000002
WRERR                             00000003
WRT_LCD                           
WR_DATA                           000004F0
WR_INS                            000004E1
Welcome_Msg                       00000044
Writing                           000000D8
Z                                 00000002
_.org_1_04B8                      000004B8
_.org_1_04BA                      000004BA
_.org_1_04BD                      000004BD
_.org_1_04C8                      000004C8
_.org_1_04CA                      000004CA
_.org_1_04CD                      000004CD
_.org_1_04D8                      000004D8
_.org_1_04DA                      000004DA
_.org_1_04DD                      000004DD
_.org_1_0580                      00000580
_BODEN_OFF                        00003FBF
_BODEN_ON                         00003FFF
_BOREN_OFF                        00003FBF
_BOREN_ON                         00003FFF
_CONFIG                           00002007
_CPD_OFF                          00003FFF
_CPD_ON                           00003EFF
_CP_ALL                           00000FCF
_CP_HALF                          00001FDF
_CP_OFF                           00003FFF
_CP_UPPER_256                     00002FEF
_DEBUG_OFF                        00003FFF
MPASM 5.54  /USERS/JUDY/MPLABXPROJECTS/INTER   3-26-2014  2:25:45         PAGE 52


SYMBOL TABLE
  LABEL                             VALUE 

_DEBUG_ON                         000037FF
_DEVID1                           00002006
_FOSC_EXTRC                       00003FFF
_FOSC_HS                          00003FFE
_FOSC_LP                          00003FFC
_FOSC_XT                          00003FFD
_HS_OSC                           00003FFE
_IDLOC0                           00002000
_IDLOC1                           00002001
_IDLOC2                           00002002
_IDLOC3                           00002003
_LP_OSC                           00003FFC
_LVP_OFF                          00003F7F
_LVP_ON                           00003FFF
_PWRTE_OFF                        00003FFF
_PWRTE_ON                         00003FF7
_RC_OSC                           00003FFF
_WDTE_OFF                         00003FFB
_WDTE_ON                          00003FFF
_WDT_OFF                          00003FFB
_WDT_ON                           00003FFF
_WRT_ENABLE_OFF                   00003DFF
_WRT_ENABLE_ON                    00003FFF
_WRT_OFF                          00003DFF
_WRT_ON                           00003FFF
_XT_OSC                           00003FFD
__16F877                          00000001
addsignal                         0000058E
bcd                               0000002D
check                             00000117
check_1                           000002D4
check_2                           00000314
check_3                           00000334
check_4                           00000354
check_5                           00000374
check_6                           00000394
check_7                           000003B4
check_8                           000003D4
check_9                           000003F4
check_A                           00000118
check_B                           0000015D
check_C                           0000017A
com                               00000029
continue                          00000414
count                             0000002E
count_down                        00000184
count_loop                        0000019C
count_temp                        0000003A
dat                               0000002A
display                           000002B5
display_EE                        000002F4
end_display                       000002CA
finish                            00000593
MPASM 5.54  /USERS/JUDY/MPLABXPROJECTS/INTER   3-26-2014  2:25:45         PAGE 53


SYMBOL TABLE
  LABEL                             VALUE 

flickerfail                       00000033
flickerfailT                      0000004C
flickertime                       000001D5
goodcandle                        000001EF
huns                              00000039
i2c_common_setup                  00000000
init                              00000005
key_temp                          00000025
lcdLongDelay                      0000057B
lcd_d1                            0000002B
lcd_d2                            0000002C
lcd_tmp                           00000024
ledfail                           00000034
ledfailT                          0000004D
light1                            00000041
light2                            00000042
light3                            00000043
light4                            00000044
light5                            00000045
light6                            00000046
light7                            00000047
light8                            00000048
light9                            00000049
lighteight                        00000296
lightfive                         00000269
lightfour                         0000025A
lightnine                         000002A5
lightone                          0000022E
lightseven                        00000287
lightsix                          00000278
lightthree                        0000024B
lighttwo                          0000023C
next                              000002B4
none                              00000040
noneT                             0000004E
notff                             000002C8
notflickerfail                    000001E7
notlf                             000002C1
notnone                           000002BA
ones                              00000037
pass                              00000032
passT                             0000004B
pmenu_access                      000002CC
read_EE                           000005CA
read_rtc                          00000000
result_temp                       0000004A
results_access                    0000021C
rtc1                              00000027
rtc2                              00000028
rtc_convert                       00000000
rtc_read                          
rtc_resetAll                      
rtc_set                           
MPASM 5.54  /USERS/JUDY/MPLABXPROJECTS/INTER   3-26-2014  2:25:45         PAGE 54


SYMBOL TABLE
  LABEL                             VALUE 

run_temp                          0000003B
runtime                           00000035
shift_EE                          000005DE
show_RTC                          0000041A
show_data                         0000002F
signal                            0000003F
status_temp                       00000031
tens                              00000038
test                              00000026
timercount                        00000036
w_temp                            00000030
wait                              00000416
write_EE                          00000598
write_EES                         000005B4
write_rtc                         00000000

Errors   :     0
Warnings :     6 reported,     0 suppressed
Messages :    40 reported,     0 suppressed

