MPASM 5.54  /USERS/JUDY/MPLABXPROJECTS/INTER   4-4-2014  16:50:32         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 ;*******************************************************************
                      00002 ; User Interface
                      00003 ; Assembler : mpasm.exe
                      00004 ; Linker    : mplink.exe
                      00005 ; Written By : Judy Shen
                      00006 ;*******************************************************************
                      00007 
                      00008       list p=16f877                 ; list directive to define processor
                      00009       #include <p16f877.inc>        ; processor specific variable definitions
                      00001         LIST
                      00002 
                      00003 ;==========================================================================
                      00004 ;  MPASM PIC16F877 processor include
                      00005 ; 
                      00006 ;  (c) Copyright 1999-2013 Microchip Technology, All rights reserved
                      00007 ;==========================================================================
                      00008 
                      00540         LIST
                      00010       #include <LCD.inc>
                      00001 
                      00002 WRT_LCD macro val
                      00003         movlw   val
                      00004         call    WR_DATA
                      00005         endm
                      00006 
                      00007     ;Delay: ~160us
Warning[207]: Found label after column 1. (LCD_DELAY)
                      00008  LCD_DELAY macro
                      00009         movlw   0xFF
                      00010         movwf   lcd_d1
                      00011         decfsz  lcd_d1,f
                      00012         goto    $-1
                      00013         endm
                      00014 
                      00015 BCD_Display macro val
                      00016         swapf val, w
                      00017         andlw   0x0f           ; Mask upper four bits 0000 HHHH
                      00018         addlw   0x30           ; convert to ASCII
                      00019         call WR_DATA
                      00020 
                      00021         call    lcdLongDelay
                      00022         movf    val,w
                      00023         andlw   0x0f           ; w  = 0000 LLLL
                      00024         addlw   0x30           ; convert to ASCII
                      00025         call WR_DATA
                      00026         endm
                      00027 
                      00028 BCD_DisplayS macro val
                      00029         movf    val,w
                      00030         andlw   0x0f           ; w  = 0000 LLLL
                      00031         addlw   0x30           ; convert to ASCII
                      00032         call WR_DATA
                      00033         endm
MPASM 5.54  /USERS/JUDY/MPLABXPROJECTS/INTER   4-4-2014  16:50:32         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00034 
                      00035 Display macro   Message
                      00036                 local   loop_
                      00037                 local   end_
                      00038                 clrf    Table_Counter
                      00039                 clrw
                      00040 loop_   movf    Table_Counter,W
                      00041                 call    Message
                      00042                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
                      00043                 btfsc   STATUS,Z
                      00044                         goto    end_
                      00045                 call    WR_DATA
                      00046                 incf    Table_Counter,F
                      00047                 goto    loop_
                      00048 end_
                      00049                 endm
                      00050 
                      00011       #include <rtc_macros.inc>
                      00001         ;External labels
  0000                00002         extern  write_rtc,read_rtc,rtc_convert,i2c_common_setup
                      00003 
                      00004 ;RTC Macros;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00005 
                      00006 rtc_resetAll    macro
                      00007 ;input:         none
                      00008 ;output:        none
                      00009 ;desc:          Resets all the time keeping registers on the RTC to zero
                      00010         banksel         0x74
                      00011         clrf            0x74
                      00012         banksel         0x73
                      00013         clrf            0x73
                      00014     call        write_rtc               ;Write 0 to Seconds
                      00015         banksel         0x73
                      00016     incf        0x73                    ;Set register address to 1
                      00017         call            write_rtc
                      00018         banksel         0x73
                      00019     incf        0x73                    ;Set register address to 2
                      00020         call            write_rtc
                      00021         banksel         0x73
                      00022     incf        0x73                    ;Set register address to 3
                      00023         call            write_rtc
                      00024         banksel         0x73
                      00025     incf        0x73                    ;Set register address to 4
                      00026         call            write_rtc
                      00027         banksel         0x73
                      00028     incf        0x73                    ;Set register address to 5
                      00029         call            write_rtc
                      00030         banksel         0x73
                      00031     incf        0x73                    ;Set register address to 6
                      00032         call            write_rtc
                      00033         endm
                      00034 
                      00035 rtc_set         macro   addliteral,datliteral
MPASM 5.54  /USERS/JUDY/MPLABXPROJECTS/INTER   4-4-2014  16:50:32         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00036 ;input:         addliteral: value of address
                      00037 ;                       datliteral: value of data
                      00038 ;output:        none
                      00039 ;desc:          loads the data in datliteral into the 
                      00040 ;                       address specified by addliteral in the RTC
                      00041         banksel 0x73
                      00042         movlw   addliteral
                      00043         movwf   0x73
                      00044         banksel 0x74
                      00045         movlw   datliteral
                      00046         movwf   0x74    
                      00047         call    write_rtc
                      00048         endm
                      00049 
                      00050 rtc_read        macro   addliteral
                      00051 ;input:         addliteral
                      00052 ;output:        0x75, 0x77, 0x78
                      00053 ;desc:          From the selected register in the RTC, read the data
                      00054 ;                       and load it into 0x75. 0x75 is also converted into 
                      00055 ;                       ASCII characters and the tens digit is placed into
                      00056 ;                       0x77 and the ones digit is placed in 0x78
                      00057         movlw   addliteral
                      00058         banksel 0x73
                      00059         movwf   0x73
                      00060         call    read_rtc
                      00061         banksel 0x75
                      00062         movf    0x75,w
                      00063         call    rtc_convert   
                      00064         endm
2007   3F72           00012       __CONFIG _CP_OFF & _WDT_OFF & _BODEN_ON & _PWRTE_ON & _HS_OSC & _WRT_ENABLE_ON & _CPD_OFF & _LVP_O
                            FF
                      00013 
                      00014         cblock  0x20
  00000020            00015                 COUNTH ;0x20
  00000021            00016                 COUNTM ;0x21
  00000022            00017                 COUNTL ;0x22
  00000023            00018                 Table_Counter ;0x23
  00000024            00019                 lcd_tmp ;0x24
  00000025            00020         key_temp ;0x25
  00000026            00021         test ;0x26
  00000027            00022         rtc1 ;0x27
  00000028            00023         rtc2 ;0x28
  00000029            00024         com ;0x29
  0000002A            00025         dat ;0x2a
  0000002B            00026         lcd_d1 ;0x2b
  0000002C            00027         lcd_d2 ;0x2c
  0000002D            00028         bcd ;0x2d
  0000002E            00029         count ;0x2e
  0000002F            00030         show_data ;02f
  00000030            00031         w_temp ;0x30
  00000031            00032         status_temp ;0x31
  00000032            00033         pass ;0x32
  00000033            00034         flickerfail ;0x33
MPASM 5.54  /USERS/JUDY/MPLABXPROJECTS/INTER   4-4-2014  16:50:32         PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000034            00035         ledfail ;0x34
  00000035            00036         runtime ;0x35
  00000036            00037         timercount ;0x36
  00000037            00038         ones ;0x37
  00000038            00039         tens ;0x38
  00000039            00040         huns ;0x39
  0000003A            00041         count_temp ;0x3a
  0000003B            00042         run_temp ;0x3b
  0000003C            00043         ADDRL ;0x3c
  0000003D            00044         DATAL ;0x3d
  0000003E            00045         VALUEL ;0x3e
  0000003F            00046         signal ;0x3f
  00000040            00047         none ;0x40
  00000041            00048         light1 ;0x41
  00000042            00049         light2 ;0x42
  00000043            00050         light3 ;0x43
  00000044            00051         light4 ;0x44
  00000045            00052         light5 ;0x45
  00000046            00053         light6 ;0x46
  00000047            00054         light7 ;0x47
  00000048            00055         light8 ;0x48
  00000049            00056         light9 ;0x49
  0000004A            00057         result_temp;0x4a
  0000004B            00058         passT  ;0x4b
  0000004C            00059         flickerfailT ;0x4c
  0000004D            00060         ledfailT    ;0x4d
  0000004E            00061         noneT       ;0x4e
  0000004F            00062         val
                      00063 
                      00064 
                      00065         endc
                      00066 
                      00067         ;Declare constants for pin assignments (LCD on PORTD)
                      00068 
                      00069                 #define RS      PORTD,2
                      00070                 #define E       PORTD,3
                      00071 
                      00072         ORG       0x0000     ;RESET vector must always be at 0x00
0000   018A           00073         clrf PCLATH
0001   2???           00074         goto      init       ;Just jump to the main code section.
                      00075 
                      00076         ORG 0x004
0004   2???           00077         goto ISR
0005                  00078 init
                      00079          ;initialize timer interrupt
0005   178B           00080          bsf    INTCON, GIE
0006   1683 1303      00081          banksel    OPTION_REG
0008   0181           00082          clrf       TMR0
0009   30C7           00083          movlw      B'11000111'
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
000A   0081           00084          movwf      OPTION_REG
                      00085 
000B   1283           00086          bcf        STATUS, RP0
MPASM 5.54  /USERS/JUDY/MPLABXPROJECTS/INTER   4-4-2014  16:50:32         PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00087 
                      00088          ;init timer
000C   3026           00089          movlw      D'38'
000D   00B6           00090          movwf      timercount
000E   01B5           00091          clrf       runtime
                      00092 
000F   1683           00093          bsf       STATUS,RP0     ; select bank 1
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0010   0185           00094          clrf      TRISA
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0011   1605           00095          bsf       TRISA, 4
0012   30F3           00096          movlw     b'11110011'    ; Set required keypad inputs
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0013   0086           00097          movwf     TRISB
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0014   0187           00098          clrf      TRISC          ; All port C is output
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0015   0188           00099          clrf      TRISD          ; All port D is output
                      00100 
                      00101 
                      00102 
                      00103          ;Set SDA and SCL to high-Z first as required for I2C
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0016   1607           00104                  bsf       TRISC,4
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0017   1587           00105                  bsf       TRISC,3
                      00106 
0018   1283           00107          bcf       STATUS,RP0     ; select bank 0
0019   0185           00108          clrf      PORTA
001A   0186           00109          clrf      PORTB
001B   0187           00110          clrf      PORTC
001C   0188           00111          clrf      PORTD
001D   2???           00112                  call      i2c_common_setup
                      00113 
                      00114 
001E   2???           00115          call      InitLCD    ;Initialize the LCD (code in lcd.asm; imported by lcd.inc)
                      00116 
                      00117          ;init RS232
001F   2???           00118          call      pc_init
                      00119 
                      00120          ; init EEPROM
0020   3010           00121          movlw    0x10
0021   00BC           00122          movwf    ADDRL
0022   01BD           00123          clrf     DATAL
0023   01BE           00124          clrf     VALUEL
                      00125 
                      00126 
                      00127 
                      00128 ;MAIN PROGRAM
                      00129 ;***************************************
                      00130 Main    Display         Welcome_Msg
  0000                    M                 local   loop_
  0000                    M                 local   end_
MPASM 5.54  /USERS/JUDY/MPLABXPROJECTS/INTER   4-4-2014  16:50:32         PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0024   01A3               M                 clrf    Table_Counter
0025   0103               M                 clrw
0026   0823               M loop_   movf    Table_Counter,W
0027   2???               M                 call    Welcome_Msg
0028   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
0029   1903               M                 btfsc   STATUS,Z
002A   2???               M                         goto    end_
002B   2???               M                 call    WR_DATA
002C   0AA3               M                 incf    Table_Counter,F
002D   2???               M                 goto    loop_
002E                      M end_
002E   2???           00131         call        HalfS
002F   2???           00132         call        HalfS
0030   2???           00133         call        HalfS
0031   2???           00134         call        Clear_Display
                      00135 
0032                  00136 Start_Test
                      00137                 Display         Menu
  0000                    M                 local   loop_
  0000                    M                 local   end_
0032   01A3               M                 clrf    Table_Counter
0033   0103               M                 clrw
0034   0823               M loop_   movf    Table_Counter,W
0035   2???               M                 call    Menu
0036   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
0037   1903               M                 btfsc   STATUS,Z
0038   2???               M                         goto    end_
0039   2???               M                 call    WR_DATA
003A   0AA3               M                 incf    Table_Counter,F
003B   2???               M                 goto    loop_
003C                      M end_
                      00138 
003C   3018           00139 Test     movlw          b'00011000'             ;Move to the left
003D   2???           00140          call           WR_INS
003E   2???           00141          call           HalfS    ;Wait until data is available from the keypad
003F   1C86           00142          btfss          PORTB,1
0040   2???           00143          goto           Test
                      00144 
                      00145 
0041   0E06           00146          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
0042   390F           00147          andlw          0x0F
0043   2???           00148          call       check
0044   2???           00149          goto       Start_Test
                      00150 
                      00151 ; Look up table
                      00152 ;***************************************
                      00153 
0045                  00154 Welcome_Msg
0045   0782           00155                 addwf   PCL,F
0046   3457 3465 346C 00156                 dt              "Welcome!", 0
       3463 346F 346D 
       3465 3421 3400 
                      00157 
MPASM 5.54  /USERS/JUDY/MPLABXPROJECTS/INTER   4-4-2014  16:50:32         PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

004F                  00158 Paused
004F   0782           00159                 addwf   PCL,F
0050   3450 3461 3475 00160                 dt              "Paused", 0
       3473 3465 3464 
       3400 
                      00161 
0057                  00162 Menu
0057   0782           00163                 addwf   PCL,F
0058   3441 343A 3453 00164                 dt              "A:Start, ", "B:PLog, ", "C:Time",0
       3474 3461 3472 
       3474 342C 3420 
       3442 343A 3450 
       344C 346F 3467 
       342C 3420 3443 
       343A 3454 3469 
       346D 3465 3400 
                      00165 
0070                  00166 Run
0070   0782           00167                 addwf   PCL,F
0071   3454 3465 3473 00168                 dt              "Testing Candles", 0
       3474 3469 346E 
       3467 3420 3443 
       3461 346E 3464 
       346C 3465 3473 
       3400 
                      00169 
0081                  00170 Done
0081   0782           00171                 addwf   PCL,F
0082   3446 3469 346E 00172                 dt              "Finished Testing", 0
       3469 3473 3468 
       3465 3464 3420 
       3454 3465 3473 
       3474 3469 346E 
       3467 3400 
                      00173 
0093                  00174 Runtime
0093   0782           00175                 addwf   PCL,F
0094   3452 3475 346E 00176                 dt              "Runtime: ", 0
       3474 3469 346D 
       3465 343A 3420 
       3400 
                      00177 
009E                  00178 PMem
009E   0782           00179                 addwf   PCL,F
009F   3450 3465 3472 00180                 dt              "Permanent Log", 0
       346D 3461 346E 
       3465 346E 3474 
       3420 344C 346F 
       3467 3400 
00AD                  00181 PMenu
00AD   0782           00182         addwf   PCL, F
00AE   3453 3465 346C 00183         dt      "Select Trial", 0
       3465 3463 3474 
MPASM 5.54  /USERS/JUDY/MPLABXPROJECTS/INTER   4-4-2014  16:50:32         PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

       3420 3454 3472 
       3469 3461 346C 
       3400 
                      00184 
00BB                  00185 RTC
00BB   0782           00186                 addwf   PCL,F
00BC   3454 3469 346D 00187                 dt              "Time:", 0
       3465 343A 3400 
                      00188 
00C2                  00189 Trial
00C2   0782           00190         addwf   PCL, F
00C3   3450 343A 3420 00191         dt      "P: FF: LF: N:", 0
       3446 3446 343A 
       3420 344C 3446 
       343A 3420 344E 
       343A 3400 
                      00192 
                      00193 
                      00194 ;***************************************
                      00195 ; Helper Subrountines
                      00196 ;***************************************
                      00197 
00D1                  00198 Switch_Lines
00D1   30C0           00199                 movlw   B'11000000'
00D2   2???           00200                 call    WR_INS
00D3   0008           00201                 return
                      00202 
00D4                  00203 Clear_Display
00D4   3001           00204                 movlw   B'00000001'
00D5   2???           00205                 call    WR_INS
00D6   0008           00206                 return
                      00207 
00D7                  00208 InitLCD
00D7   1283           00209         bcf STATUS,RP0
00D8   1588           00210         bsf E     ;E default high
                      00211 
                      00212         ;Wait for LCD POR to finish (~15ms)
00D9   2???           00213         call lcdLongDelay
00DA   2???           00214         call lcdLongDelay
00DB   2???           00215         call lcdLongDelay
                      00216 
                      00217         ;Ensure 8-bit mode first (no way to immediately guarantee 4-bit mode)
                      00218         ; -> Send b'0011' 3 times
00DC   3033           00219         movlw   b'00110011'
00DD   2???           00220         call    WR_INS
00DE   2???           00221         call lcdLongDelay
00DF   2???           00222         call lcdLongDelay
00E0   3032           00223         movlw   b'00110010'
00E1   2???           00224         call    WR_INS
00E2   2???           00225         call lcdLongDelay
00E3   2???           00226         call lcdLongDelay
                      00227 
                      00228         ; 4 bits, 2 lines, 5x7 dots
MPASM 5.54  /USERS/JUDY/MPLABXPROJECTS/INTER   4-4-2014  16:50:32         PAGE  9


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00E4   3028           00229         movlw   b'00101000'
00E5   2???           00230         call    WR_INS
00E6   2???           00231         call lcdLongDelay
00E7   2???           00232         call lcdLongDelay
                      00233 
                      00234         ; display on/off
00E8   300C           00235         movlw   b'00001100'
00E9   2???           00236         call    WR_INS
00EA   2???           00237         call lcdLongDelay
00EB   2???           00238         call lcdLongDelay
                      00239 
                      00240         ; Entry mode
00EC   3006           00241         movlw   b'00000110'
00ED   2???           00242         call    WR_INS
00EE   2???           00243         call lcdLongDelay
00EF   2???           00244         call lcdLongDelay
                      00245 
                      00246         ; Clear ram
00F0   3001           00247         movlw   b'00000001'
00F1   2???           00248         call    WR_INS
00F2   2???           00249         call lcdLongDelay
00F3   2???           00250         call lcdLongDelay
00F4   0008           00251         return
                      00252 
                      00253 ;helper subroutines
                      00254 ;function to check for keyboard input
00F5                  00255 check
00F5   00A5           00256     movwf key_temp
                      00257 
00F6                  00258 check_A
00F6   3A03           00259     xorlw   D'3'
00F7   1D03           00260     btfss   STATUS, Z
00F8   2???           00261         goto    check_B
00F9   2???           00262     call Clear_Display
                      00263     Display Run
  0000                    M                 local   loop_
  0000                    M                 local   end_
00FA   01A3               M                 clrf    Table_Counter
00FB   0103               M                 clrw
00FC   0823               M loop_   movf    Table_Counter,W
00FD   2???               M                 call    Run
00FE   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
00FF   1903               M                 btfsc   STATUS,Z
0100   2???               M                         goto    end_
0101   2???               M                 call    WR_DATA
0102   0AA3               M                 incf    Table_Counter,F
0103   2???               M                 goto    loop_
0104                      M end_
0104   2???           00264     call    HalfS
0105   2???           00265     call    Motor_On
0106   168B           00266     bsf    INTCON, 5
0107   2???           00267     call    count_down
0108   128B           00268     bcf    INTCON, 5
MPASM 5.54  /USERS/JUDY/MPLABXPROJECTS/INTER   4-4-2014  16:50:32         PAGE 10


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0109   2???           00269     call Clear_Display
010A   2???           00270     call    Motor_Off
                      00271 
                      00272     Display Done
  0000                    M                 local   loop_
  0000                    M                 local   end_
010B   01A3               M                 clrf    Table_Counter
010C   0103               M                 clrw
010D   0823               M loop_   movf    Table_Counter,W
010E   2???               M                 call    Done
010F   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
0110   1903               M                 btfsc   STATUS,Z
0111   2???               M                         goto    end_
0112   2???               M                 call    WR_DATA
0113   0AA3               M                 incf    Table_Counter,F
0114   2???               M                 goto    loop_
0115                      M end_
0115   2???           00273     call Switch_Lines
                      00274     Display Runtime 
  0000                    M                 local   loop_
  0000                    M                 local   end_
0116   01A3               M                 clrf    Table_Counter
0117   0103               M                 clrw
0118   0823               M loop_   movf    Table_Counter,W
0119   2???               M                 call    Runtime
011A   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
011B   1903               M                 btfsc   STATUS,Z
011C   2???               M                         goto    end_
011D   2???               M                 call    WR_DATA
011E   0AA3               M                 incf    Table_Counter,F
011F   2???               M                 goto    loop_
0120                      M end_
0120   2???           00275     call Convert
0121   01B5           00276     clrf    runtime
0122   2???           00277     call    shift_EE
                      00278     ;writing run info into EEPROM
0123   3010           00279     movlw   0x10
0124   00BC           00280     movwf   ADDRL
Warning[202]: Argument out of range.  Least significant bits used.
0125   0832           00281     movf    pass, VALUEL
0126   00BE           00282     movwf   VALUEL
0127   2???           00283     call    write_EE
                      00284 
Message[305]: Using default destination of 1 (file).
0128   0ABC           00285     incf    ADDRL
Warning[202]: Argument out of range.  Least significant bits used.
0129   0833           00286     movf    flickerfail, VALUEL
012A   00BE           00287     movwf   VALUEL
012B   2???           00288     call    write_EE
Message[305]: Using default destination of 1 (file).
012C   0ABC           00289     incf    ADDRL
                      00290 
Warning[202]: Argument out of range.  Least significant bits used.
MPASM 5.54  /USERS/JUDY/MPLABXPROJECTS/INTER   4-4-2014  16:50:32         PAGE 11


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

012D   0834           00291     movf    ledfail, VALUEL
012E   00BE           00292     movwf   VALUEL
012F   2???           00293     call    write_EE
Message[305]: Using default destination of 1 (file).
0130   0ABC           00294     incf    ADDRL
                      00295 
Warning[202]: Argument out of range.  Least significant bits used.
0131   0840           00296     movf    none, VALUEL
0132   00BE           00297     movwf   VALUEL
0133   2???           00298     call    write_EE
0134   2???           00299     call    wait
0135   2???           00300     call Clear_Display
                      00301     ;can check previous run trials
0136   2???           00302     call results_access
0137   2???           00303     call pc_log
0138   2???           00304     call wait
                      00305 
0139   2???           00306     call Clear_Display
013A   0008           00307     return
                      00308 
013B                  00309 check_B
013B   0825           00310     movf key_temp, W
013C   3A07           00311     xorlw D'7'
013D   1D03           00312     btfss STATUS, Z
013E   2???           00313         goto check_C
013F   2???           00314     call Clear_Display
                      00315     Display PMem
  0000                    M                 local   loop_
  0000                    M                 local   end_
0140   01A3               M                 clrf    Table_Counter
0141   0103               M                 clrw
0142   0823               M loop_   movf    Table_Counter,W
0143   2???               M                 call    PMem
0144   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
0145   1903               M                 btfsc   STATUS,Z
0146   2???               M                         goto    end_
0147   2???               M                 call    WR_DATA
0148   0AA3               M                 incf    Table_Counter,F
0149   2???               M                 goto    loop_
014A                      M end_
014A   2???           00316     call Switch_Lines
                      00317     Display PMenu
  0000                    M                 local   loop_
  0000                    M                 local   end_
014B   01A3               M                 clrf    Table_Counter
014C   0103               M                 clrw
014D   0823               M loop_   movf    Table_Counter,W
014E   2???               M                 call    PMenu
014F   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
0150   1903               M                 btfsc   STATUS,Z
0151   2???               M                         goto    end_
0152   2???               M                 call    WR_DATA
0153   0AA3               M                 incf    Table_Counter,F
MPASM 5.54  /USERS/JUDY/MPLABXPROJECTS/INTER   4-4-2014  16:50:32         PAGE 12


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0154   2???               M                 goto    loop_
0155                      M end_
0155   2???           00318     call pmenu_access
0156   2???           00319     call Clear_Display
0157   0008           00320     return
                      00321 
0158                  00322 check_C
0158   0825           00323     movf key_temp, W
0159   3A0B           00324     xorlw D'11'
015A   1D03           00325     btfss STATUS, Z
015B   2???           00326         goto Other_wise
015C   2???           00327     call Clear_Display
015D   2???           00328     call show_RTC
015E   2???           00329     call Clear_Display
015F   0008           00330     return
                      00331 
0160                  00332 Other_wise
0160   2???           00333     call Clear_Display
0161   0008           00334     return
                      00335 
                      00336 
0162                  00337 count_down
0162   01AF           00338         clrf show_data
0163   01B2           00339         clrf pass
0164   01B3           00340         clrf flickerfail
0165   01B4           00341         clrf ledfail
0166   01C0           00342         clrf none
0167   01C1           00343         clrf light1
0168   01C2           00344         clrf light2
0169   01C3           00345         clrf light3
016A   01C4           00346         clrf light4
016B   01C5           00347         clrf light5
016C   01C6           00348         clrf light6
016D   01C7           00349         clrf light7
016E   01C8           00350         clrf light8
016F   01C9           00351         clrf light9
                      00352 
0170                  00353 count_loop
0170   3000           00354         movlw b'00000000'
0171   0085           00355         movwf PORTA
0172   2???           00356         call Check_Flicker
0173   084A           00357         movf result_temp, w
0174   00C1           00358         movwf light1
                      00359 
0175   3001           00360         movlw b'00000001'
0176   0085           00361         movwf PORTA
0177   2???           00362         call Check_Flicker
0178   084A           00363         movf result_temp, w
0179   00C2           00364         movwf light2
                      00365 
017A   3002           00366         movlw b'00000010'
017B   0085           00367         movwf PORTA
017C   2???           00368         call Check_Flicker
MPASM 5.54  /USERS/JUDY/MPLABXPROJECTS/INTER   4-4-2014  16:50:32         PAGE 13


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

017D   084A           00369         movf result_temp, w
017E   00C3           00370         movwf light3
                      00371 
017F   3003           00372         movlw b'00000011'
0180   0085           00373         movwf PORTA
0181   2???           00374         call Check_Flicker
0182   084A           00375         movf result_temp, w
0183   00C4           00376         movwf light4
                      00377 
0184   3004           00378         movlw b'00000100'
0185   0085           00379         movwf PORTA
0186   2???           00380         call Check_Flicker
0187   084A           00381         movf result_temp, w
0188   00C5           00382         movwf light5
                      00383 
0189   3005           00384         movlw b'00000101'
018A   0085           00385         movwf PORTA
018B   2???           00386         call Check_Flicker
018C   084A           00387         movf result_temp, w
018D   00C6           00388         movwf light6
                      00389 
018E   3006           00390         movlw b'00000110'
018F   0085           00391         movwf PORTA
0190   2???           00392         call Check_Flicker
0191   084A           00393         movf result_temp, w
0192   00C7           00394         movwf light7
                      00395 
0193   3007           00396         movlw b'00000111'
0194   0085           00397         movwf PORTA
0195   2???           00398         call Check_Flicker
0196   084A           00399         movf result_temp, w
0197   00C8           00400         movwf light8
                      00401 
0198   3008           00402         movlw b'00001000'
0199   0085           00403         movwf PORTA
019A   2???           00404         call Check_Flicker
019B   084A           00405         movf result_temp, w
019C   00C9           00406         movwf light9
019D   0008           00407         return
                      00408 
019E                  00409 Check_Flicker
019E   2???           00410         call    HalfS 
019F   01BF           00411         clrf    signal
01A0   0805           00412         movf    PORTA, w
01A1   3910           00413         andlw   b'00010000'
                      00414         ;movf    PORTB, w
                      00415         ;andlw   b'00000001'
01A2   1D03           00416         btfss   STATUS, Z
01A3   2???           00417                 goto flickertime
Message[305]: Using default destination of 1 (file).
01A4   0AC0           00418         incf    none
Message[305]: Using default destination of 1 (file).
01A5   0AAF           00419         incf    show_data
MPASM 5.54  /USERS/JUDY/MPLABXPROJECTS/INTER   4-4-2014  16:50:32         PAGE 14


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

01A6   3001           00420         movlw   b'00000001'
01A7   00CA           00421         movwf   result_temp
01A8   2???           00422         call Clear_Display
                      00423         BCD_DisplayS show_data
01A9   082F               M         movf    show_data,w
01AA   390F               M         andlw   0x0f           ; w  = 0000 LLLL
01AB   3E30               M         addlw   0x30           ; convert to ASCII
01AC   2???               M         call WR_DATA
01AD   3020           00424         movlw " "
01AE   2???           00425         call WR_DATA
01AF   304E           00426         movlw "N"
01B0   2???           00427         call WR_DATA
01B1   3020           00428         movlw " "
01B2   2???           00429         call WR_DATA
01B3   2???           00430         goto    Display_results
                      00431 
01B4                  00432 flickertime
01B4   01BF           00433         clrf    signal
                      00434        ; call    HalfS
                      00435        ; call    HalfS
                      00436        ; call    HalfS
01B5   2???           00437         call    HalfS
01B6   2???           00438         call    HalfS
01B7   2???           00439         call    HalfS
01B8   2???           00440         call    HalfS
01B9   01CA           00441         clrf    result_temp
Message[305]: Using default destination of 1 (file).
01BA   0AAF           00442         incf    show_data
01BB   3080           00443         movlw   B'10000000' ;move cursor to position H?4B?
01BC   2???           00444         call    WR_INS
                      00445         
01BD   1F3F           00446         btfss   signal, 6
                      00447         ;btfss   signal, 7
                      00448             ;goto    notflickerfail
01BE   2???           00449             goto notflickerfail
01BF   1DBF           00450         btfss   signal, 3
01C0   2???           00451             goto notflickerfail 
Message[305]: Using default destination of 1 (file).
01C1   0AB3           00452         incf    flickerfail
01C2   3004           00453         movlw   b'00000100'
01C3   00CA           00454         movwf   result_temp
01C4   2???           00455         call Clear_Display
                      00456         BCD_DisplayS show_data
01C5   082F               M         movf    show_data,w
01C6   390F               M         andlw   0x0f           ; w  = 0000 LLLL
01C7   3E30               M         addlw   0x30           ; convert to ASCII
01C8   2???               M         call WR_DATA
01C9   3020           00457         movlw " "
01CA   2???           00458         call WR_DATA
01CB   3046           00459         movlw "F"
01CC   2???           00460         call WR_DATA
01CD   3046           00461         movlw "F"
01CE   2???           00462         call WR_DATA
MPASM 5.54  /USERS/JUDY/MPLABXPROJECTS/INTER   4-4-2014  16:50:32         PAGE 15


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

01CF   3020           00463         movlw " "
01D0   2???           00464         call WR_DATA
01D1   2???           00465         goto    Display_results
                      00466 
01D2                  00467 notflickerfail 
01D2   083F           00468         movf    signal, w
01D3   39F8           00469         andlw   b'11111000'
01D4   1D03           00470         btfss   STATUS, Z
01D5   2???           00471             goto    goodcandle
Message[305]: Using default destination of 1 (file).
01D6   0AB4           00472         incf    ledfail
01D7   3002           00473         movlw   b'00000010'
01D8   00CA           00474         movwf   result_temp
01D9   2???           00475         call Clear_Display
                      00476         BCD_DisplayS show_data
01DA   082F               M         movf    show_data,w
01DB   390F               M         andlw   0x0f           ; w  = 0000 LLLL
01DC   3E30               M         addlw   0x30           ; convert to ASCII
01DD   2???               M         call WR_DATA
01DE   3020           00477         movlw " "
01DF   2???           00478         call WR_DATA
01E0   304C           00479         movlw "L"
01E1   2???           00480         call WR_DATA
01E2   3046           00481         movlw "F"
01E3   2???           00482         call WR_DATA
01E4   3020           00483         movlw " "
01E5   2???           00484         call WR_DATA
01E6   2???           00485         goto    Display_results
                      00486 
01E7                  00487 goodcandle    
Message[305]: Using default destination of 1 (file).
01E7   0AB2           00488         incf    pass
01E8   3008           00489         movlw   b'00001000'
01E9   00CA           00490         movwf   result_temp
01EA   2???           00491         call Clear_Display
                      00492         BCD_DisplayS show_data
01EB   082F               M         movf    show_data,w
01EC   390F               M         andlw   0x0f           ; w  = 0000 LLLL
01ED   3E30               M         addlw   0x30           ; convert to ASCII
01EE   2???               M         call WR_DATA
01EF   3020           00493         movlw " "
01F0   2???           00494         call WR_DATA
01F1   3050           00495         movlw "P"
01F2   2???           00496         call WR_DATA
01F3   3020           00497         movlw " "
01F4   2???           00498         call WR_DATA
                      00499 
                      00500 
01F5                  00501 Display_results
                      00502         ;BCD_DisplayS show_data
01F5   2???           00503         call    Convert1
01F6   2???           00504         call Switch_Lines
                      00505         Display     Trial
MPASM 5.54  /USERS/JUDY/MPLABXPROJECTS/INTER   4-4-2014  16:50:32         PAGE 16


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  0000                    M                 local   loop_
  0000                    M                 local   end_
01F7   01A3               M                 clrf    Table_Counter
01F8   0103               M                 clrw
01F9   0823               M loop_   movf    Table_Counter,W
01FA   2???               M                 call    Trial
01FB   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
01FC   1903               M                 btfsc   STATUS,Z
01FD   2???               M                         goto    end_
01FE   2???               M                 call    WR_DATA
01FF   0AA3               M                 incf    Table_Counter,F
0200   2???               M                 goto    loop_
0201                      M end_
0201   30C2           00506         movlw   B'11000010' ;move cursor to Pass
0202   2???           00507         call    WR_INS
                      00508         BCD_DisplayS pass
0203   0832               M         movf    pass,w
0204   390F               M         andlw   0x0f           ; w  = 0000 LLLL
0205   3E30               M         addlw   0x30           ; convert to ASCII
0206   2???               M         call WR_DATA
0207   30C6           00509         movlw   B'11000110' ;move cursor to 46
0208   2???           00510         call    WR_INS
                      00511         BCD_DisplayS flickerfail
0209   0833               M         movf    flickerfail,w
020A   390F               M         andlw   0x0f           ; w  = 0000 LLLL
020B   3E30               M         addlw   0x30           ; convert to ASCII
020C   2???               M         call WR_DATA
020D   30CA           00512         movlw   B'11001010' ;move cursor to position 4A
020E   2???           00513         call    WR_INS
                      00514         BCD_DisplayS ledfail
020F   0834               M         movf    ledfail,w
0210   390F               M         andlw   0x0f           ; w  = 0000 LLLL
0211   3E30               M         addlw   0x30           ; convert to ASCII
0212   2???               M         call WR_DATA
0213   30CD           00515         movlw   B'11001101' ;move crusor to 4E
0214   2???           00516         call    WR_INS
                      00517         BCD_DisplayS none
0215   0840               M         movf    none,w
0216   390F               M         andlw   0x0f           ; w  = 0000 LLLL
0217   3E30               M         addlw   0x30           ; convert to ASCII
0218   2???               M         call WR_DATA
0219   0008           00518         return
                      00519 
021A                  00520 results_access
021A   3080           00521          movlw   B'10000000' ;move cursor to Pass
021B   2???           00522          call    WR_INS
                      00523          Display PMenu
  0000                    M                 local   loop_
  0000                    M                 local   end_
021C   01A3               M                 clrf    Table_Counter
021D   0103               M                 clrw
021E   0823               M loop_   movf    Table_Counter,W
021F   2???               M                 call    PMenu
MPASM 5.54  /USERS/JUDY/MPLABXPROJECTS/INTER   4-4-2014  16:50:32         PAGE 17


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0220   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
0221   1903               M                 btfsc   STATUS,Z
0222   2???               M                         goto    end_
0223   2???               M                 call    WR_DATA
0224   0AA3               M                 incf    Table_Counter,F
0225   2???               M                 goto    loop_
0226                      M end_
                      00524  
0226   2???           00525          call           HalfS    ;Wait until data is available from the keypad
0227   1C86           00526          btfss          PORTB,1
0228   2???           00527          goto           results_access
                      00528 
0229   0E06           00529          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
022A   390F           00530          andlw          0x0F
022B   00A5           00531          movwf      key_temp
                      00532 
022C                  00533 lightone
022C   3A00           00534          xorlw      D'0'
022D   1D03           00535          btfss      STATUS, Z
022E   2???           00536             goto    lighttwo
022F   0841           00537          movf       light1, w
0230   00CA           00538          movwf      result_temp
0231   2???           00539          call       Switch_Lines
0232   3031           00540          movlw      "1"
0233   2???           00541          call       WR_DATA
0234   303A           00542          movlw      ":"
0235   2???           00543          call       WR_DATA
0236   2???           00544          call       display
0237   2???           00545          call       HalfS
0238   2???           00546          call       Clear_Display
0239   2???           00547          goto       results_access
                      00548 
023A                  00549 lighttwo
023A   0825           00550         movf key_temp, W
023B   3A01           00551         xorlw       D'1'
023C   1D03           00552         btfss       STATUS, Z
023D   2???           00553             goto    lightthree
023E   0842           00554         movf        light2, w
023F   00CA           00555         movwf       result_temp
0240   2???           00556         call        Switch_Lines
0241   3032           00557         movlw       "2"
0242   2???           00558         call        WR_DATA
0243   303A           00559         movlw       ":"
0244   2???           00560         call        WR_DATA
0245   2???           00561         call        display
0246   2???           00562         call        HalfS
0247   2???           00563         call        Clear_Display
0248   2???           00564         goto        results_access
                      00565 
0249                  00566 lightthree 
0249   0825           00567         movf key_temp, W
024A   3A02           00568         xorlw       D'2'
024B   1D03           00569         btfss       STATUS, Z
MPASM 5.54  /USERS/JUDY/MPLABXPROJECTS/INTER   4-4-2014  16:50:32         PAGE 18


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

024C   2???           00570             goto    lightfour
024D   0843           00571         movf        light3, w
024E   00CA           00572         movwf       result_temp
024F   2???           00573         call        Switch_Lines
0250   3033           00574         movlw       "3"
0251   2???           00575         call        WR_DATA
0252   303A           00576         movlw       ":"
0253   2???           00577         call        WR_DATA
0254   2???           00578         call        display
0255   2???           00579         call        HalfS
0256   2???           00580         call        Clear_Display
0257   2???           00581         goto        results_access
                      00582 
0258                  00583 lightfour
0258   0825           00584         movf key_temp, W
0259   3A04           00585         xorlw       D'4'
025A   1D03           00586         btfss       STATUS, Z
025B   2???           00587             goto    lightfive
025C   0844           00588         movf        light4, w
025D   00CA           00589         movwf       result_temp
025E   2???           00590         call        Switch_Lines
025F   3034           00591         movlw       "4"
0260   2???           00592         call        WR_DATA
0261   303A           00593         movlw       ":"
0262   2???           00594         call        WR_DATA
0263   2???           00595         call        display
0264   2???           00596         call        HalfS
0265   2???           00597         call        Clear_Display
0266   2???           00598         goto        results_access
                      00599 
0267                  00600 lightfive
0267   0825           00601         movf key_temp, W
0268   3A05           00602         xorlw       D'5'
0269   1D03           00603         btfss       STATUS, Z
026A   2???           00604             goto    lightsix
026B   0845           00605         movf       light5, w
026C   00CA           00606         movwf      result_temp
026D   2???           00607         call        Switch_Lines
026E   3035           00608         movlw      "5"
026F   2???           00609         call       WR_DATA
0270   303A           00610         movlw      ":"
0271   2???           00611         call       WR_DATA
0272   2???           00612         call       display
0273   2???           00613         call       HalfS
0274   2???           00614         call       Clear_Display
0275   2???           00615         goto       results_access
                      00616 
0276                  00617 lightsix
0276   0825           00618         movf key_temp, W
0277   3A06           00619         xorlw       D'6'
0278   1D03           00620         btfss       STATUS, Z
0279   2???           00621             goto    lightseven
027A   0846           00622          movf       light6, w
MPASM 5.54  /USERS/JUDY/MPLABXPROJECTS/INTER   4-4-2014  16:50:32         PAGE 19


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

027B   00CA           00623          movwf      result_temp
027C   2???           00624          call Switch_Lines
027D   3036           00625          movlw      "6"
027E   2???           00626          call       WR_DATA
027F   303A           00627          movlw      ":"
0280   2???           00628          call       WR_DATA
0281   2???           00629          call       display
0282   2???           00630          call       HalfS
0283   2???           00631          call Clear_Display
0284   2???           00632          goto       results_access
                      00633 
0285                  00634 lightseven
0285   0825           00635         movf key_temp, W
0286   3A08           00636         xorlw       D'8'
0287   1D03           00637         btfss       STATUS, Z
0288   2???           00638             goto    lighteight
0289   0847           00639          movf       light7, w
028A   00CA           00640          movwf      result_temp
028B   2???           00641          call Switch_Lines
028C   3037           00642          movlw      "7"
028D   2???           00643          call       WR_DATA
028E   303A           00644          movlw      ":"
028F   2???           00645          call       WR_DATA
0290   2???           00646          call       display
0291   2???           00647          call       HalfS
0292   2???           00648          call Clear_Display
0293   2???           00649          goto       results_access
                      00650 
0294                  00651 lighteight
0294   0825           00652         movf key_temp, W
0295   3A09           00653         xorlw       D'9'
0296   1D03           00654         btfss       STATUS, Z
0297   2???           00655             goto    lightnine
0298   0848           00656          movf       light8, w
0299   00CA           00657          movwf      result_temp
029A   2???           00658          call Switch_Lines
029B   3038           00659          movlw      "8"
029C   2???           00660          call       WR_DATA
029D   303A           00661          movlw      ":"
029E   2???           00662          call       WR_DATA
029F   2???           00663          call       display
02A0   2???           00664          call       HalfS
02A1   2???           00665          call Clear_Display
02A2   2???           00666          goto       results_access
                      00667 
02A3                  00668 lightnine
02A3   0825           00669         movf key_temp, W
02A4   3A0A           00670         xorlw       D'10'
02A5   1D03           00671         btfss       STATUS, Z
02A6   2???           00672             goto    next
02A7   0849           00673          movf       light9, w
02A8   00CA           00674          movwf      result_temp
02A9   2???           00675          call Switch_Lines
MPASM 5.54  /USERS/JUDY/MPLABXPROJECTS/INTER   4-4-2014  16:50:32         PAGE 20


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

02AA   3039           00676          movlw      "9"
02AB   2???           00677          call       WR_DATA
02AC   303A           00678          movlw      ":"
02AD   2???           00679          call       WR_DATA
02AE   2???           00680          call       display
02AF   2???           00681          call       HalfS
02B0   2???           00682          call Clear_Display
02B1   2???           00683          goto       results_access
                      00684 
02B2                  00685 next
02B2   0008           00686          return
                      00687 
                      00688 
02B3                  00689 display
02B3   1C4A           00690         btfss   result_temp, 0
02B4   2???           00691             goto notnone
02B5   304E           00692         movlw "N"
02B6   2???           00693         call WR_DATA
02B7   2???           00694         goto end_display
                      00695 
02B8                  00696 notnone
02B8   1CCA           00697         btfss   result_temp, 1
02B9   2???           00698             goto notlf
02BA   304C           00699         movlw "L"
02BB   2???           00700         call WR_DATA
02BC   3046           00701         movlw "F"
02BD   2???           00702         call WR_DATA
02BE   2???           00703         goto end_display
                      00704 
02BF                  00705 notlf
02BF   1D4A           00706         btfss   result_temp, 2
02C0   2???           00707             goto notff
02C1   3046           00708         movlw "F"
02C2   2???           00709         call WR_DATA
02C3   3046           00710         movlw "F"
02C4   2???           00711         call WR_DATA
02C5   2???           00712         goto end_display
02C6                  00713 notff
02C6   3050           00714         movlw "P"
02C7   2???           00715         call WR_DATA
                      00716 
02C8                  00717 end_display
02C8   2???           00718         call HalfS
02C9   0008           00719         return
                      00720 
02CA                  00721 pmenu_access
02CA   0186           00722          clrf       PORTB
02CB   01A5           00723          clrf       key_temp
02CC   2???           00724          call           HalfS    ;Wait until data is available from the keypad
02CD   1C86           00725          btfss          PORTB,1
02CE   2???           00726          goto           pmenu_access
                      00727 
02CF   0E06           00728          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
MPASM 5.54  /USERS/JUDY/MPLABXPROJECTS/INTER   4-4-2014  16:50:32         PAGE 21


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

02D0   390F           00729          andlw          0x0F
02D1   00A5           00730          movwf      key_temp
                      00731 
02D2                  00732 check_1
02D2   0825           00733         movf key_temp, W
02D3   3A00           00734         xorlw D'0'
02D4   1D03           00735         btfss STATUS, Z
02D5   2???           00736             goto check_2
02D6   2???           00737         call Clear_Display
02D7   3001           00738         movlw H'01'
02D8   00A4           00739         movwf lcd_tmp
                      00740         BCD_Display lcd_tmp
02D9   0E24               M         swapf lcd_tmp, w
02DA   390F               M         andlw   0x0f           ; Mask upper four bits 0000 HHHH
02DB   3E30               M         addlw   0x30           ; convert to ASCII
02DC   2???               M         call WR_DATA
                          M 
02DD   2???               M         call    lcdLongDelay
02DE   0824               M         movf    lcd_tmp,w
02DF   390F               M         andlw   0x0f           ; w  = 0000 LLLL
02E0   3E30               M         addlw   0x30           ; convert to ASCII
02E1   2???               M         call WR_DATA
02E2   2???           00741         call Switch_Lines
                      00742         Display Trial
  0000                    M                 local   loop_
  0000                    M                 local   end_
02E3   01A3               M                 clrf    Table_Counter
02E4   0103               M                 clrw
02E5   0823               M loop_   movf    Table_Counter,W
02E6   2???               M                 call    Trial
02E7   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
02E8   1903               M                 btfsc   STATUS,Z
02E9   2???               M                         goto    end_
02EA   2???               M                 call    WR_DATA
02EB   0AA3               M                 incf    Table_Counter,F
02EC   2???               M                 goto    loop_
02ED                      M end_
02ED   3010           00743         movlw    0x10
02EE   00BC           00744         movwf    ADDRL
02EF   2???           00745         call display_EE
02F0   2???           00746         call HalfS
02F1   2???           00747         goto pmenu_access
                      00748 
02F2                  00749 display_EE
02F2   2???           00750         call read_EE
02F3   30C2           00751         movlw   B'11000010' ;move cursor to Pass
02F4   2???           00752         call WR_INS
                      00753         BCD_DisplayS DATAL
02F5   083D               M         movf    DATAL,w
02F6   390F               M         andlw   0x0f           ; w  = 0000 LLLL
02F7   3E30               M         addlw   0x30           ; convert to ASCII
02F8   2???               M         call WR_DATA
02F9   30C6           00754         movlw   B'11000110' ;move cursor to 46
MPASM 5.54  /USERS/JUDY/MPLABXPROJECTS/INTER   4-4-2014  16:50:32         PAGE 22


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

02FA   2???           00755         call WR_INS
Message[305]: Using default destination of 1 (file).
02FB   0ABC           00756         incf ADDRL
02FC   2???           00757         call read_EE
                      00758         BCD_DisplayS DATAL
02FD   083D               M         movf    DATAL,w
02FE   390F               M         andlw   0x0f           ; w  = 0000 LLLL
02FF   3E30               M         addlw   0x30           ; convert to ASCII
0300   2???               M         call WR_DATA
0301   30CA           00759         movlw   B'11001010' ;move cursor to position 4A
0302   2???           00760         call WR_INS
Message[305]: Using default destination of 1 (file).
0303   0ABC           00761         incf ADDRL
0304   2???           00762         call read_EE
                      00763         BCD_DisplayS DATAL
0305   083D               M         movf    DATAL,w
0306   390F               M         andlw   0x0f           ; w  = 0000 LLLL
0307   3E30               M         addlw   0x30           ; convert to ASCII
0308   2???               M         call WR_DATA
0309   30CD           00764         movlw   B'11001101' ;move cursor to position 4A
030A   2???           00765         call WR_INS
Message[305]: Using default destination of 1 (file).
030B   0ABC           00766         incf ADDRL
030C   2???           00767         call read_EE
                      00768         BCD_DisplayS DATAL
030D   083D               M         movf    DATAL,w
030E   390F               M         andlw   0x0f           ; w  = 0000 LLLL
030F   3E30               M         addlw   0x30           ; convert to ASCII
0310   2???               M         call WR_DATA
0311   0008           00769         return 
                      00770 
0312                  00771 check_2
0312   0825           00772         movf key_temp, W
0313   3A01           00773         xorlw D'1'
0314   1D03           00774         btfss STATUS, Z
0315   2???           00775             goto check_3
0316   2???           00776         call Clear_Display
0317   3002           00777         movlw H'02'
0318   00A4           00778         movwf lcd_tmp
                      00779         BCD_Display lcd_tmp
0319   0E24               M         swapf lcd_tmp, w
031A   390F               M         andlw   0x0f           ; Mask upper four bits 0000 HHHH
031B   3E30               M         addlw   0x30           ; convert to ASCII
031C   2???               M         call WR_DATA
                          M 
031D   2???               M         call    lcdLongDelay
031E   0824               M         movf    lcd_tmp,w
031F   390F               M         andlw   0x0f           ; w  = 0000 LLLL
0320   3E30               M         addlw   0x30           ; convert to ASCII
0321   2???               M         call WR_DATA
0322   2???           00780         call Switch_Lines
                      00781         Display Trial
  0000                    M                 local   loop_
MPASM 5.54  /USERS/JUDY/MPLABXPROJECTS/INTER   4-4-2014  16:50:32         PAGE 23


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  0000                    M                 local   end_
0323   01A3               M                 clrf    Table_Counter
0324   0103               M                 clrw
0325   0823               M loop_   movf    Table_Counter,W
0326   2???               M                 call    Trial
0327   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
0328   1903               M                 btfsc   STATUS,Z
0329   2???               M                         goto    end_
032A   2???               M                 call    WR_DATA
032B   0AA3               M                 incf    Table_Counter,F
032C   2???               M                 goto    loop_
032D                      M end_
032D   3014           00782         movlw    0x14
032E   00BC           00783         movwf    ADDRL
032F   2???           00784         call display_EE
0330   2???           00785         call HalfS
0331   2???           00786         goto pmenu_access
                      00787 
0332                  00788 check_3
0332   0825           00789         movf key_temp, W
0333   3A02           00790         xorlw D'2'
0334   1D03           00791         btfss STATUS, Z
0335   2???           00792             goto check_4
0336   2???           00793         call Clear_Display
0337   3003           00794         movlw D'3'
0338   00A4           00795         movwf lcd_tmp
                      00796         BCD_Display lcd_tmp
0339   0E24               M         swapf lcd_tmp, w
033A   390F               M         andlw   0x0f           ; Mask upper four bits 0000 HHHH
033B   3E30               M         addlw   0x30           ; convert to ASCII
033C   2???               M         call WR_DATA
                          M 
033D   2???               M         call    lcdLongDelay
033E   0824               M         movf    lcd_tmp,w
033F   390F               M         andlw   0x0f           ; w  = 0000 LLLL
0340   3E30               M         addlw   0x30           ; convert to ASCII
0341   2???               M         call WR_DATA
0342   2???           00797         call Switch_Lines
                      00798         Display Trial
  0000                    M                 local   loop_
  0000                    M                 local   end_
0343   01A3               M                 clrf    Table_Counter
0344   0103               M                 clrw
0345   0823               M loop_   movf    Table_Counter,W
0346   2???               M                 call    Trial
0347   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
0348   1903               M                 btfsc   STATUS,Z
0349   2???               M                         goto    end_
034A   2???               M                 call    WR_DATA
034B   0AA3               M                 incf    Table_Counter,F
034C   2???               M                 goto    loop_
034D                      M end_
034D   3018           00799         movlw    0x18
MPASM 5.54  /USERS/JUDY/MPLABXPROJECTS/INTER   4-4-2014  16:50:32         PAGE 24


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

034E   00BC           00800         movwf    ADDRL
034F   2???           00801         call display_EE
0350   2???           00802         call HalfS
0351   2???           00803         goto pmenu_access
                      00804 
0352                  00805 check_4
0352   0825           00806         movf key_temp, W
0353   3A04           00807         xorlw D'4'
0354   1D03           00808         btfss STATUS, Z
0355   2???           00809             goto check_5
0356   2???           00810         call Clear_Display
0357   3004           00811         movlw H'04'
0358   00A4           00812         movwf lcd_tmp
                      00813         BCD_Display lcd_tmp
0359   0E24               M         swapf lcd_tmp, w
035A   390F               M         andlw   0x0f           ; Mask upper four bits 0000 HHHH
035B   3E30               M         addlw   0x30           ; convert to ASCII
035C   2???               M         call WR_DATA
                          M 
035D   2???               M         call    lcdLongDelay
035E   0824               M         movf    lcd_tmp,w
035F   390F               M         andlw   0x0f           ; w  = 0000 LLLL
0360   3E30               M         addlw   0x30           ; convert to ASCII
0361   2???               M         call WR_DATA
0362   2???           00814         call Switch_Lines
                      00815         Display Trial
  0000                    M                 local   loop_
  0000                    M                 local   end_
0363   01A3               M                 clrf    Table_Counter
0364   0103               M                 clrw
0365   0823               M loop_   movf    Table_Counter,W
0366   2???               M                 call    Trial
0367   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
0368   1903               M                 btfsc   STATUS,Z
0369   2???               M                         goto    end_
036A   2???               M                 call    WR_DATA
036B   0AA3               M                 incf    Table_Counter,F
036C   2???               M                 goto    loop_
036D                      M end_
036D   301C           00816         movlw    0x1c
036E   00BC           00817         movwf    ADDRL
036F   2???           00818         call display_EE
0370   2???           00819         call HalfS
0371   2???           00820         goto pmenu_access
                      00821 
0372                  00822 check_5
0372   0825           00823         movf key_temp, W
0373   3A05           00824         xorlw D'5'
0374   1D03           00825         btfss STATUS, Z
0375   2???           00826             goto check_6
0376   2???           00827         call Clear_Display
0377   3005           00828         movlw H'05'
0378   00A4           00829         movwf lcd_tmp
MPASM 5.54  /USERS/JUDY/MPLABXPROJECTS/INTER   4-4-2014  16:50:32         PAGE 25


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00830         BCD_Display lcd_tmp
0379   0E24               M         swapf lcd_tmp, w
037A   390F               M         andlw   0x0f           ; Mask upper four bits 0000 HHHH
037B   3E30               M         addlw   0x30           ; convert to ASCII
037C   2???               M         call WR_DATA
                          M 
037D   2???               M         call    lcdLongDelay
037E   0824               M         movf    lcd_tmp,w
037F   390F               M         andlw   0x0f           ; w  = 0000 LLLL
0380   3E30               M         addlw   0x30           ; convert to ASCII
0381   2???               M         call WR_DATA
0382   2???           00831         call Switch_Lines
                      00832         Display Trial
  0000                    M                 local   loop_
  0000                    M                 local   end_
0383   01A3               M                 clrf    Table_Counter
0384   0103               M                 clrw
0385   0823               M loop_   movf    Table_Counter,W
0386   2???               M                 call    Trial
0387   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
0388   1903               M                 btfsc   STATUS,Z
0389   2???               M                         goto    end_
038A   2???               M                 call    WR_DATA
038B   0AA3               M                 incf    Table_Counter,F
038C   2???               M                 goto    loop_
038D                      M end_
038D   3020           00833         movlw    0x20
038E   00BC           00834         movwf    ADDRL
038F   2???           00835         call display_EE
0390   2???           00836         call HalfS
0391   2???           00837         goto pmenu_access
                      00838 
0392                  00839 check_6
0392   0825           00840         movf key_temp, W
0393   3A06           00841         xorlw D'6'
0394   1D03           00842         btfss STATUS, Z
0395   2???           00843             goto check_7
0396   2???           00844         call Clear_Display
0397   3006           00845         movlw H'06'
0398   00A4           00846         movwf lcd_tmp
                      00847         BCD_Display lcd_tmp
0399   0E24               M         swapf lcd_tmp, w
039A   390F               M         andlw   0x0f           ; Mask upper four bits 0000 HHHH
039B   3E30               M         addlw   0x30           ; convert to ASCII
039C   2???               M         call WR_DATA
                          M 
039D   2???               M         call    lcdLongDelay
039E   0824               M         movf    lcd_tmp,w
039F   390F               M         andlw   0x0f           ; w  = 0000 LLLL
03A0   3E30               M         addlw   0x30           ; convert to ASCII
03A1   2???               M         call WR_DATA
03A2   2???           00848         call Switch_Lines
                      00849         Display Trial
MPASM 5.54  /USERS/JUDY/MPLABXPROJECTS/INTER   4-4-2014  16:50:32         PAGE 26


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  0000                    M                 local   loop_
  0000                    M                 local   end_
03A3   01A3               M                 clrf    Table_Counter
03A4   0103               M                 clrw
03A5   0823               M loop_   movf    Table_Counter,W
03A6   2???               M                 call    Trial
03A7   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
03A8   1903               M                 btfsc   STATUS,Z
03A9   2???               M                         goto    end_
03AA   2???               M                 call    WR_DATA
03AB   0AA3               M                 incf    Table_Counter,F
03AC   2???               M                 goto    loop_
03AD                      M end_
03AD   3024           00850         movlw    0x24
03AE   00BC           00851         movwf    ADDRL
03AF   2???           00852         call display_EE
03B0   2???           00853         call HalfS
03B1   2???           00854         goto pmenu_access
                      00855 
03B2                  00856 check_7
03B2   0825           00857         movf key_temp, W
03B3   3A08           00858         xorlw D'8'
03B4   1D03           00859         btfss STATUS, Z
03B5   2???           00860             goto check_8
03B6   2???           00861         call Clear_Display
03B7   3007           00862         movlw H'07'
03B8   00A4           00863         movwf lcd_tmp
                      00864         BCD_Display lcd_tmp
03B9   0E24               M         swapf lcd_tmp, w
03BA   390F               M         andlw   0x0f           ; Mask upper four bits 0000 HHHH
03BB   3E30               M         addlw   0x30           ; convert to ASCII
03BC   2???               M         call WR_DATA
                          M 
03BD   2???               M         call    lcdLongDelay
03BE   0824               M         movf    lcd_tmp,w
03BF   390F               M         andlw   0x0f           ; w  = 0000 LLLL
03C0   3E30               M         addlw   0x30           ; convert to ASCII
03C1   2???               M         call WR_DATA
03C2   2???           00865         call Switch_Lines
                      00866         Display Trial
  0000                    M                 local   loop_
  0000                    M                 local   end_
03C3   01A3               M                 clrf    Table_Counter
03C4   0103               M                 clrw
03C5   0823               M loop_   movf    Table_Counter,W
03C6   2???               M                 call    Trial
03C7   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
03C8   1903               M                 btfsc   STATUS,Z
03C9   2???               M                         goto    end_
03CA   2???               M                 call    WR_DATA
03CB   0AA3               M                 incf    Table_Counter,F
03CC   2???               M                 goto    loop_
03CD                      M end_
MPASM 5.54  /USERS/JUDY/MPLABXPROJECTS/INTER   4-4-2014  16:50:32         PAGE 27


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

03CD   3028           00867         movlw    0x28
03CE   00BC           00868         movwf    ADDRL
03CF   2???           00869         call display_EE
03D0   2???           00870         call HalfS
03D1   2???           00871         goto pmenu_access
                      00872 
03D2                  00873 check_8
03D2   0825           00874         movf key_temp, W
03D3   3A09           00875         xorlw D'9'
03D4   1D03           00876         btfss STATUS, Z
03D5   2???           00877             goto check_9
03D6   2???           00878         call Clear_Display
03D7   3008           00879         movlw H'08'
03D8   00A4           00880         movwf lcd_tmp
                      00881         BCD_Display lcd_tmp
03D9   0E24               M         swapf lcd_tmp, w
03DA   390F               M         andlw   0x0f           ; Mask upper four bits 0000 HHHH
03DB   3E30               M         addlw   0x30           ; convert to ASCII
03DC   2???               M         call WR_DATA
                          M 
03DD   2???               M         call    lcdLongDelay
03DE   0824               M         movf    lcd_tmp,w
03DF   390F               M         andlw   0x0f           ; w  = 0000 LLLL
03E0   3E30               M         addlw   0x30           ; convert to ASCII
03E1   2???               M         call WR_DATA
03E2   2???           00882         call Switch_Lines
                      00883         Display Trial
  0000                    M                 local   loop_
  0000                    M                 local   end_
03E3   01A3               M                 clrf    Table_Counter
03E4   0103               M                 clrw
03E5   0823               M loop_   movf    Table_Counter,W
03E6   2???               M                 call    Trial
03E7   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
03E8   1903               M                 btfsc   STATUS,Z
03E9   2???               M                         goto    end_
03EA   2???               M                 call    WR_DATA
03EB   0AA3               M                 incf    Table_Counter,F
03EC   2???               M                 goto    loop_
03ED                      M end_
03ED   302C           00884         movlw    0x2c
03EE   00BC           00885         movwf    ADDRL
03EF   2???           00886         call display_EE
03F0   2???           00887         call HalfS
03F1   2???           00888         goto pmenu_access
                      00889 
03F2                  00890 check_9
03F2   0825           00891         movf key_temp, W
03F3   3A0A           00892         xorlw D'10'
03F4   1D03           00893         btfss STATUS, Z
03F5   2???           00894             goto continue
03F6   2???           00895         call Clear_Display
03F7   3009           00896         movlw H'09'
MPASM 5.54  /USERS/JUDY/MPLABXPROJECTS/INTER   4-4-2014  16:50:32         PAGE 28


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

03F8   00A4           00897         movwf lcd_tmp
                      00898         BCD_Display lcd_tmp
03F9   0E24               M         swapf lcd_tmp, w
03FA   390F               M         andlw   0x0f           ; Mask upper four bits 0000 HHHH
03FB   3E30               M         addlw   0x30           ; convert to ASCII
03FC   2???               M         call WR_DATA
                          M 
03FD   2???               M         call    lcdLongDelay
03FE   0824               M         movf    lcd_tmp,w
03FF   390F               M         andlw   0x0f           ; w  = 0000 LLLL
0400   3E30               M         addlw   0x30           ; convert to ASCII
0401   2???               M         call WR_DATA
0402   2???           00899         call Switch_Lines
                      00900         Display Trial
  0000                    M                 local   loop_
  0000                    M                 local   end_
0403   01A3               M                 clrf    Table_Counter
0404   0103               M                 clrw
0405   0823               M loop_   movf    Table_Counter,W
0406   2???               M                 call    Trial
0407   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
0408   1903               M                 btfsc   STATUS,Z
0409   2???               M                         goto    end_
040A   2???               M                 call    WR_DATA
040B   0AA3               M                 incf    Table_Counter,F
040C   2???               M                 goto    loop_
040D                      M end_
040D   3030           00901         movlw    0x30
040E   00BC           00902         movwf    ADDRL
040F   2???           00903         call display_EE
0410   2???           00904         call HalfS
0411   2???           00905         goto pmenu_access
                      00906 
0412                  00907 continue
0412   2???           00908         call Clear_Display
0413   0008           00909         return
                      00910 
0414                  00911 wait
0414   2???           00912          call           HalfS    ;Wait until data is available from the keypad
0415   1C86           00913          btfss          PORTB,1
0416   2???           00914          goto           wait
0417   0008           00915          return
                      00916 
0418                  00917 show_RTC
                      00918                 ;clear LCD screen
0418   3001           00919                 movlw   b'00000001'
0419   2???           00920                 call    WR_INS
                      00921 
                      00922                 ;Get year
041A   3032           00923                 movlw   "2"                             ;First line shows 20**/**/**
041B   2???           00924                 call    WR_DATA
041C   3030           00925                 movlw   "0"
041D   2???           00926                 call    WR_DATA
MPASM 5.54  /USERS/JUDY/MPLABXPROJECTS/INTER   4-4-2014  16:50:32         PAGE 29


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00927 
                      00928                 rtc_read        0x06            ;Read Address 0x06 from DS1307---year
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
041E   3006               M         movlw   0x06
041F   1283 1303          M         banksel 0x73
0421   00F3               M         movwf   0x73
0422   2???               M         call    read_rtc
0423   1283 1303          M         banksel 0x75
0425   0875               M         movf    0x75,w
0426   2???               M         call    rtc_convert   
0427   0877           00929                 movfw   0x77
0428   2???           00930                 call    WR_DATA
0429   0878           00931                 movfw   0x78
042A   2???           00932                 call    WR_DATA
                      00933 
042B   302F           00934                 movlw   "/"
042C   2???           00935                 call    WR_DATA
                      00936 
                      00937                 ;Get month
                      00938                 rtc_read        0x05            ;Read Address 0x05 from DS1307---month
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
042D   3005               M         movlw   0x05
042E   1283 1303          M         banksel 0x73
0430   00F3               M         movwf   0x73
0431   2???               M         call    read_rtc
0432   1283 1303          M         banksel 0x75
0434   0875               M         movf    0x75,w
0435   2???               M         call    rtc_convert   
0436   0877           00939                 movfw   0x77
0437   2???           00940                 call    WR_DATA
0438   0878           00941                 movfw   0x78
0439   2???           00942                 call    WR_DATA
                      00943 
043A   302F           00944                 movlw   "/"
043B   2???           00945                 call    WR_DATA
                      00946 
                      00947                 ;Get day
                      00948                 rtc_read        0x04            ;Read Address 0x04 from DS1307---day
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
MPASM 5.54  /USERS/JUDY/MPLABXPROJECTS/INTER   4-4-2014  16:50:32         PAGE 30


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M ;                       0x77 and the ones digit is placed in 0x78
043C   3004               M         movlw   0x04
043D   1283 1303          M         banksel 0x73
043F   00F3               M         movwf   0x73
0440   2???               M         call    read_rtc
0441   1283 1303          M         banksel 0x75
0443   0875               M         movf    0x75,w
0444   2???               M         call    rtc_convert   
0445   0877           00949                 movfw   0x77
0446   2???           00950                 call    WR_DATA
0447   0878           00951                 movfw   0x78
0448   2???           00952                 call    WR_DATA
                      00953 
0449   30C0           00954                 movlw   B'11000000'             ;Next line displays (hour):(min):(sec) **:**:**
044A   2???           00955                 call    WR_INS
                      00956 
044B                  00957 Refresh
044B   30C0           00958         movlw B'11000000' ;move cursor to position H?4B?
044C   2???           00959         call WR_INS
                      00960 
                      00961                 ;Get hour
                      00962                 rtc_read        0x02            ;Read Address 0x02 from DS1307---hour
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
044D   3002               M         movlw   0x02
044E   1283 1303          M         banksel 0x73
0450   00F3               M         movwf   0x73
0451   2???               M         call    read_rtc
0452   1283 1303          M         banksel 0x75
0454   0875               M         movf    0x75,w
0455   2???               M         call    rtc_convert   
0456   0877           00963                 movfw   0x77
0457   2???           00964                 call    WR_DATA
0458   0878           00965                 movfw   0x78
0459   2???           00966                 call    WR_DATA
045A   303A           00967                 movlw   ":"
045B   2???           00968                 call    WR_DATA
                      00969                 ;Get minute
                      00970                 rtc_read        0x01            ;Read Address 0x01 from DS1307---min
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
045C   3001               M         movlw   0x01
045D   1283 1303          M         banksel 0x73
045F   00F3               M         movwf   0x73
0460   2???               M         call    read_rtc
MPASM 5.54  /USERS/JUDY/MPLABXPROJECTS/INTER   4-4-2014  16:50:32         PAGE 31


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0461   1283 1303          M         banksel 0x75
0463   0875               M         movf    0x75,w
0464   2???               M         call    rtc_convert   
0465   0877           00971                 movfw   0x77
0466   2???           00972                 call    WR_DATA
0467   0878           00973                 movfw   0x78
0468   2???           00974                 call    WR_DATA
0469   303A           00975                 movlw                   ":"
046A   2???           00976                 call    WR_DATA
                      00977 
                      00978                 ;Get seconds
                      00979                 rtc_read        0x00            ;Read Address 0x00 from DS1307---seconds
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
046B   3000               M         movlw   0x00
046C   1283 1303          M         banksel 0x73
046E   00F3               M         movwf   0x73
046F   2???               M         call    read_rtc
0470   1283 1303          M         banksel 0x75
0472   0875               M         movf    0x75,w
0473   2???               M         call    rtc_convert   
0474   0877           00980                 movfw   0x77
0475   2???           00981                 call    WR_DATA
0476   0878           00982                 movfw   0x78
0477   2???           00983                 call    WR_DATA
                      00984 
0478   2???           00985                 call    HalfS                   ;Delay for exactly one seconds and read DS1307 again
0479   2???           00986         call    HalfS    ;Wait until data is available from the keypad
047A   1C86           00987         btfss   PORTB,1
047B   2???           00988             goto        Refresh
047C   0008           00989         return
                      00990 
047D                  00991 Motor_On
047D   3000           00992     movlw 0x00 ;turn motor off
047E   0087           00993     movwf PORTC
047F   2???           00994     call HalfS
0480   3001           00995     movlw 0x01 ;turn motor on
0481   0087           00996     movwf PORTC
0482   2???           00997     call EightS
0483   3000           00998     movlw 0x00 ;turn motor off
0484   0087           00999     movwf PORTC
0485   2???           01000     call HalfS
0486   3001           01001     movlw 0x01 ;turn motor on
0487   0087           01002     movwf PORTC
0488   2???           01003     call EightS
0489   3000           01004     movlw 0x00 ;turn motor off
048A   0087           01005     movwf PORTC
048B   2???           01006     call HalfS
048C   2???           01007     call Clear_Display
MPASM 5.54  /USERS/JUDY/MPLABXPROJECTS/INTER   4-4-2014  16:50:32         PAGE 32


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

048D   0008           01008     return
                      01009 
048E                  01010 Motor_Off
048E   3002           01011     movlw 0x02 ;turn motor on
048F   0087           01012     movwf PORTC
0490   2???           01013     call QuarterS
0491   3000           01014     movlw 0x00 ;turn motor off
0492   0087           01015     movwf PORTC
0493   2???           01016     call HalfS
0494   3002           01017     movlw 0x02 ;turn motor on
0495   0087           01018     movwf PORTC
0496   2???           01019     call EightS
0497   3000           01020     movlw 0x00 ;turn motor off
0498   0087           01021     movwf PORTC
0499   2???           01022     call Clear_Display
049A   0008           01023     return
                      01024 
049B                  01025 HalfS
  0000                01026         local   HalfS_0
049B   3088           01027       movlw 0x88
049C   00A0           01028       movwf COUNTH
049D   30BD           01029       movlw 0xBD
049E   00A1           01030       movwf COUNTM
049F   3003           01031       movlw 0x03
04A0   00A2           01032       movwf COUNTL
                      01033 
04A1                  01034 HalfS_0
04A1   0BA0           01035       decfsz COUNTH, f
04A2   2???           01036       goto   $+2
04A3   0BA1           01037       decfsz COUNTM, f
04A4   2???           01038       goto   $+2
04A5   0BA2           01039       decfsz COUNTL, f
04A6   2???           01040       goto   HalfS_0
                      01041 
04A7   2???           01042       goto $+1
04A8   0000           01043       nop
04A9   0000           01044       nop
04AA   0008           01045                 return
                      01046 
04AB                  01047 QuarterS
  0000                01048         local   QuarterS_0
04AB   3044           01049       movlw 0x44
04AC   00A0           01050       movwf COUNTH
04AD   304F           01051       movlw 0x4F
04AE   00A1           01052       movwf COUNTM
04AF   3003           01053       movlw 0x03
04B0   00A2           01054       movwf COUNTL
                      01055 
04B1                  01056 QuarterS_0
04B1   0BA0           01057       decfsz COUNTH, f
04B2   2???           01058       goto   $+2
04B3   0BA1           01059       decfsz COUNTM, f
04B4   2???           01060       goto   $+2
MPASM 5.54  /USERS/JUDY/MPLABXPROJECTS/INTER   4-4-2014  16:50:32         PAGE 33


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

04B5   0BA2           01061       decfsz COUNTL, f
04B6   2???           01062       goto   QuarterS_0
                      01063 
04B7   2???           01064       goto $+1
04B8   0000           01065       nop
04B9   0000           01066       nop
04BA   0008           01067                 return
                      01068 
04BB                  01069 EightS
  0000                01070         local   EightS_0
04BB   3020           01071       movlw 0x20
04BC   00A0           01072       movwf COUNTH
04BD   3020           01073       movlw 0x20
04BE   00A1           01074       movwf COUNTM
04BF   3003           01075       movlw 0x03
04C0   00A2           01076       movwf COUNTL
                      01077 
04C1                  01078 EightS_0
04C1   0BA0           01079       decfsz COUNTH, f
04C2   2???           01080       goto   $+2
04C3   0BA1           01081       decfsz COUNTM, f
04C4   2???           01082       goto   $+2
04C5   0BA2           01083       decfsz COUNTL, f
04C6   2???           01084       goto   EightS_0
                      01085 
04C7   2???           01086       goto $+1
04C8   0000           01087       nop
04C9   0000           01088       nop
04CA   0008           01089                 return
                      01090 
04CB                  01091 WR_INS
04CB   1108           01092         bcf             RS                              ;clear RS
04CC   00A9           01093         movwf   com                             ;W --> com
04CD   39F0           01094         andlw   0xF0                    ;mask 4 bits MSB w = X0
04CE   0088           01095         movwf   PORTD                   ;Send 4 bits MSB
04CF   1588           01096         bsf             E                               ;
04D0   2???           01097         call    lcdLongDelay    ;__    __
04D1   1188           01098         bcf             E                               ;  |__|
04D2   0E29           01099         swapf   com,w
04D3   39F0           01100         andlw   0xF0                    ;1111 0010
04D4   0088           01101         movwf   PORTD                   ;send 4 bits LSB
04D5   1588           01102         bsf             E                               ;
04D6   2???           01103         call    lcdLongDelay    ;__    __
04D7   1188           01104         bcf             E                               ;  |__|
04D8   2???           01105         call    lcdLongDelay
04D9   0008           01106         return
                      01107 
04DA                  01108 WR_DATA
04DA   1508           01109         bsf             RS
04DB   00AA           01110         movwf   dat
04DC   082A           01111         movf    dat,w
04DD   39F0           01112         andlw   0xF0
04DE   3E04           01113         addlw   4
MPASM 5.54  /USERS/JUDY/MPLABXPROJECTS/INTER   4-4-2014  16:50:32         PAGE 34


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

04DF   0088           01114         movwf   PORTD
04E0   1588           01115         bsf             E                               ;
04E1   2???           01116         call    lcdLongDelay    ;__    __
04E2   1188           01117         bcf             E                               ;  |__|
04E3   0E2A           01118         swapf   dat,w
04E4   39F0           01119         andlw   0xF0
04E5   3E04           01120         addlw   4
04E6   0088           01121         movwf   PORTD
04E7   1588           01122         bsf             E                               ;
04E8   2???           01123         call    lcdLongDelay    ;__    __
04E9   1188           01124         bcf             E                               ;  |__|
04EA   0008           01125         return
                      01126 
04EB                  01127 Convert
04EB   01BB           01128     clrf run_temp
                      01129 ;save and restore
04EC   0835           01130     movf runtime, w
04ED   00BB           01131     movwf run_temp
04EE   3008           01132     movlw 8
04EF   00BA           01133     movwf count_temp
04F0   01B9           01134     clrf huns
04F1   01B8           01135     clrf tens
04F2   01B7           01136     clrf ones
                      01137 
04F3                  01138 BCDADD3
                      01139 
04F3   3005           01140     movlw 5
04F4   0239           01141     subwf huns, 0
04F5   1803           01142     btfsc STATUS, C
04F6   2???           01143     CALL ADD3HUNS
                      01144 
04F7   3005           01145     movlw 5
04F8   0238           01146     subwf tens, 0
04F9   1803           01147     btfsc STATUS, C
04FA   2???           01148     CALL ADD3TENS
                      01149 
04FB   3005           01150     movlw 5
04FC   0237           01151     subwf ones, 0
04FD   1803           01152     btfsc STATUS, C
04FE   2???           01153     CALL ADD3ONES
                      01154 
04FF   03BA           01155     decf count_temp, 1
0500   1003           01156     bcf STATUS, C
0501   0DB5           01157     rlf runtime, 1
0502   0DB7           01158     rlf ones, 1
0503   1A37           01159     btfsc ones,4 ;
0504   2???           01160     CALL CARRYONES
0505   0DB8           01161     rlf tens, 1
                      01162 
0506   1A38           01163     btfsc tens,4 ;
0507   2???           01164     CALL CARRYTENS
0508   0DB9           01165     rlf huns,1
0509   1003           01166     bcf STATUS, C
MPASM 5.54  /USERS/JUDY/MPLABXPROJECTS/INTER   4-4-2014  16:50:32         PAGE 35


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01167 
050A   083A           01168     movf count_temp, 0
050B   1D03           01169     btfss STATUS, Z
050C   2???           01170     GOTO BCDADD3
                      01171 
                      01172 
050D   0839           01173     movf huns, 0 ; add ASCII Offset
050E   3E30           01174     addlw h'30'
050F   2???           01175     call WR_DATA
                      01176 
0510   0838           01177     movf tens, 0 ; add ASCII Offset
0511   3E30           01178     addlw h'30'
0512   2???           01179     call WR_DATA
                      01180 
0513   0837           01181     movf ones, 0 ; add ASCII Offset
0514   3E30           01182     addlw h'30'
0515   2???           01183     call WR_DATA
                      01184 
0516   083B           01185     movf run_temp, w
0517   00B5           01186     movwf runtime
0518   0008           01187     RETURN
                      01188 
0519                  01189 ADD3HUNS
0519   3003           01190     movlw 3
051A   07B9           01191     addwf huns,1
051B   0008           01192     RETURN
                      01193 
051C                  01194 ADD3TENS
051C   3003           01195     movlw 3
051D   07B8           01196     addwf tens,1
051E   0008           01197     RETURN
                      01198 
051F                  01199 ADD3ONES
051F   3003           01200     movlw 3
0520   07B7           01201     addwf ones,1
0521   0008           01202     RETURN
                      01203 
0522                  01204 CARRYONES
0522   1237           01205     bcf ones, 4
0523   1403           01206     bsf STATUS, C
0524   0008           01207     RETURN
                      01208 
0525                  01209 CARRYTENS
0525   1238           01210     bcf tens, 4
0526   1403           01211     bsf STATUS, C
0527   0008           01212     RETURN
                      01213 
0528                  01214 Convert1
0528   01BB           01215     clrf run_temp
                      01216 ;save and restore
0529   083F           01217     movf signal, w
052A   00BB           01218     movwf run_temp
052B   3008           01219     movlw 8
MPASM 5.54  /USERS/JUDY/MPLABXPROJECTS/INTER   4-4-2014  16:50:32         PAGE 36


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

052C   00BA           01220     movwf count_temp
052D   01B9           01221     clrf huns
052E   01B8           01222     clrf tens
052F   01B7           01223     clrf ones
                      01224 
0530                  01225 BCDADD31
                      01226 
0530   3005           01227     movlw 5
0531   0239           01228     subwf huns, 0
0532   1803           01229     btfsc STATUS, C
0533   2???           01230     CALL ADD3HUNS1
                      01231 
0534   3005           01232     movlw 5
0535   0238           01233     subwf tens, 0
0536   1803           01234     btfsc STATUS, C
0537   2???           01235     CALL ADD3TENS1
                      01236 
0538   3005           01237     movlw 5
0539   0237           01238     subwf ones, 0
053A   1803           01239     btfsc STATUS, C
053B   2???           01240     CALL ADD3ONES1
                      01241 
053C   03BA           01242     decf count_temp, 1
053D   1003           01243     bcf STATUS, C
053E   0DBF           01244     rlf signal, 1
053F   0DB7           01245     rlf ones, 1
0540   1A37           01246     btfsc ones,4 ;
0541   2???           01247     CALL CARRYONES1
0542   0DB8           01248     rlf tens, 1
                      01249 
0543   1A38           01250     btfsc tens,4 ;
0544   2???           01251     CALL CARRYTENS1
0545   0DB9           01252     rlf huns,1
0546   1003           01253     bcf STATUS, C
                      01254 
0547   083A           01255     movf count_temp, 0
0548   1D03           01256     btfss STATUS, Z
0549   2???           01257     GOTO BCDADD31
                      01258 
                      01259 
054A   0839           01260     movf huns, 0 ; add ASCII Offset
054B   3E30           01261     addlw h'30'
054C   2???           01262     call WR_DATA
                      01263 
054D   0838           01264     movf tens, 0 ; add ASCII Offset
054E   3E30           01265     addlw h'30'
054F   2???           01266     call WR_DATA
                      01267 
0550   0837           01268     movf ones, 0 ; add ASCII Offset
0551   3E30           01269     addlw h'30'
0552   2???           01270     call WR_DATA
                      01271 
0553   083B           01272     movf run_temp, w
MPASM 5.54  /USERS/JUDY/MPLABXPROJECTS/INTER   4-4-2014  16:50:32         PAGE 37


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0554   00BF           01273     movwf signal
0555   0008           01274     RETURN
                      01275 
0556                  01276 ADD3HUNS1
0556   3003           01277     movlw 3
0557   07B9           01278     addwf huns,1
0558   0008           01279     RETURN
                      01280 
0559                  01281 ADD3TENS1
0559   3003           01282     movlw 3
055A   07B8           01283     addwf tens,1
055B   0008           01284     RETURN
                      01285 
055C                  01286 ADD3ONES1
055C   3003           01287     movlw 3
055D   07B7           01288     addwf ones,1
055E   0008           01289     RETURN
                      01290 
055F                  01291 CARRYONES1
055F   1237           01292     bcf ones, 4
0560   1403           01293     bsf STATUS, C
0561   0008           01294     RETURN
                      01295 
0562                  01296 CARRYTENS1
0562   1238           01297     bcf tens, 4
0563   1403           01298     bsf STATUS, C
0564   0008           01299     RETURN
                      01300 
0565                  01301 lcdLongDelay
0565   3014           01302     movlw d'20'
0566   00AC           01303     movwf lcd_d2
0567                  01304 LLD_LOOP
                      01305     LCD_DELAY
0567   30FF               M         movlw   0xFF
0568   00AB               M         movwf   lcd_d1
0569   0BAB               M         decfsz  lcd_d1,f
056A   2???               M         goto    $-1
056B   0BAC           01306     decfsz lcd_d2,f
056C   2???           01307     goto LLD_LOOP
056D   0008           01308     return
                      01309 
                      01310 
056E                  01311 ISR
                      01312         ;saving registers
056E   00B0           01313         movwf w_temp
056F   0803           01314         movf STATUS, w
0570   00B1           01315         movwf status_temp
                      01316 
0571                  01317 Timer
0571   110B           01318         bcf     INTCON, 2
0572   0BB6           01319         decfsz  timercount, f
0573   2???           01320             goto    addsignal
0574   0AB5           01321         incf    runtime, f
MPASM 5.54  /USERS/JUDY/MPLABXPROJECTS/INTER   4-4-2014  16:50:32         PAGE 38


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0575   3026           01322         movlw   D'38'
0576   00B6           01323         movwf   timercount
0577   2???           01324         goto    finish
                      01325 
0578                  01326 addsignal
0578   1283 1303      01327         banksel PORTB
057A   1C06           01328         btfss   PORTB, 0
057B   2???           01329             goto    finish
Message[305]: Using default destination of 1 (file).
057C   0ABF           01330         incf    signal
                      01331 
057D                  01332 finish
057D   0831           01333         movf status_temp, w
057E   0083           01334         movwf STATUS
057F   0EB0           01335         swapf w_temp, f
0580   0E30           01336         swapf w_temp, w
0581   0009           01337         retfie
                      01338 
0582                  01339 write_EE
                      01340 ;write to EEPROM
0582   1283 1303      01341     banksel ADDRL
0584   083C           01342     movf    ADDRL, W ; write address of desired program memory location
0585   1283 1703      01343     banksel EEADR
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0587   008D           01344     movwf   EEADR
                      01345 ;    movf    ADDRH, W
                      01346 ;    movwf   EEADRH
0588   1283 1303      01347     banksel VALUEL
058A   083E           01348     movf    VALUEL, W ; write value to program at desired memory locqation
058B   1283 1703      01349     banksel EEDATA
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
058D   008C           01350     movwf   EEDATA
                      01351 ;    movf    VALUEH, W
                      01352 ;    movwf   EEDATH
                      01353 
058E   1683           01354     bsf     STATUS, RP0
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
058F   178C           01355     bsf     EECON1, EEPGD
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0590   150C           01356     bsf     EECON1, WREN
0591   138B           01357     bcf     INTCON, GIE
                      01358 
0592   3055           01359     movlw   0x55
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0593   008D           01360     movwf   EECON2
0594   30AA           01361     movlw   0xaa
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0595   008D           01362     movwf   EECON2 ;
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0596   148C           01363     bsf     EECON1, WR ; start write operation
0597   0000           01364     nop ;wait for micro
0598   0000           01365     nop
                      01366 
MPASM 5.54  /USERS/JUDY/MPLABXPROJECTS/INTER   4-4-2014  16:50:32         PAGE 39


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0599   178B           01367     bsf    INTCON, GIE ;re-enable interrupts
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
059A   110C           01368     bcf    EECON1, WREN ;disables writes
059B   1283           01369     bcf    STATUS, RP0
059C   1303           01370     bcf    STATUS, RP1 
059D   0008           01371     return
                      01372 
059E                  01373 write_EES
059E   1283 1303      01374     banksel ADDRL
05A0   083C           01375     movf    ADDRL, W ; write address of desired program memory location
05A1   1283 1703      01376     banksel EEADR
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
05A3   008D           01377     movwf   EEADR
                      01378 
05A4   1683           01379     bsf     STATUS, RP0
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
05A5   178C           01380     bsf     EECON1, EEPGD
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
05A6   150C           01381     bsf     EECON1, WREN
05A7   138B           01382     bcf     INTCON, GIE
                      01383 
05A8   3055           01384     movlw   0x55
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
05A9   008D           01385     movwf   EECON2
05AA   30AA           01386     movlw   0xaa
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
05AB   008D           01387     movwf   EECON2 ;
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
05AC   148C           01388     bsf     EECON1, WR ; start write operation
05AD   0000           01389     nop ;wait for micro
05AE   0000           01390     nop
                      01391 
05AF   178B           01392     bsf    INTCON, GIE ;re-enable interrupts
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
05B0   110C           01393     bcf    EECON1, WREN ;disables writes
05B1   1283           01394     bcf    STATUS, RP0
05B2   1303           01395     bcf    STATUS, RP1
05B3   0008           01396     return
                      01397 
05B4                  01398 read_EE
05B4   1283 1303      01399     banksel ADDRL
05B6   083C           01400     movf   ADDRL, W
05B7   1283 1703      01401     banksel EEADR
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
05B9   008D           01402     movwf   EEADR
05BA   1683 1703      01403     banksel EECON1
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
05BC   178C           01404     bsf     EECON1, EEPGD
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
05BD   140C           01405     bsf     EECON1, RD
05BE   0000           01406     nop
05BF   0000           01407     nop
05C0   1283           01408     bcf     STATUS, RP0
MPASM 5.54  /USERS/JUDY/MPLABXPROJECTS/INTER   4-4-2014  16:50:32         PAGE 40


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
05C1   080C           01409     movf    EEDATA, W
05C2   1283 1303      01410     banksel DATAL
05C4   00BD           01411     movwf   DATAL
05C5   1283           01412     bcf     STATUS, RP0
05C6   1303           01413     bcf     STATUS, RP1
05C7   0008           01414     return
                      01415 
05C8                  01416 shift_EE
                      01417 
                      01418 
                      01419     ;shift 3 to 4
05C8   1283 1303      01420     banksel DATAL
05CA   3018           01421     movlw   0x18
05CB   00BC           01422     movwf   ADDRL
05CC   2???           01423     call    read_EE
05CD   301C           01424     movlw   0x1c
05CE   00BC           01425     movwf   ADDRL
05CF   2???           01426     call    write_EES
                      01427 
05D0   3019           01428     movlw   0x19
05D1   00BC           01429     movwf   ADDRL
05D2   2???           01430     call    read_EE
05D3   301D           01431     movlw   0x1d
05D4   00BC           01432     movwf   ADDRL
05D5   2???           01433     call    write_EES
                      01434 
05D6   301A           01435     movlw   0x1a
05D7   00BC           01436     movwf   ADDRL
05D8   2???           01437     call    read_EE
05D9   301E           01438     movlw   0x1e
05DA   00BC           01439     movwf   ADDRL
05DB   2???           01440     call    write_EES
                      01441 
05DC   301B           01442     movlw   0x1b
05DD   00BC           01443     movwf   ADDRL
05DE   2???           01444     call    read_EE
05DF   301F           01445     movlw   0x1f
05E0   00BC           01446     movwf   ADDRL
05E1   2???           01447     call    write_EES
                      01448 
                      01449     ;shift 2 to 3
05E2   1283 1303      01450     banksel DATAL
05E4   3014           01451     movlw   0x14
05E5   00BC           01452     movwf   ADDRL
05E6   2???           01453     call    read_EE
05E7   3018           01454     movlw   0x18
05E8   00BC           01455     movwf   ADDRL
05E9   2???           01456     call    write_EES
                      01457 
05EA   3015           01458     movlw   0x15
05EB   00BC           01459     movwf   ADDRL
05EC   2???           01460     call    read_EE
MPASM 5.54  /USERS/JUDY/MPLABXPROJECTS/INTER   4-4-2014  16:50:32         PAGE 41


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

05ED   3019           01461     movlw   0x19
05EE   00BC           01462     movwf   ADDRL
05EF   2???           01463     call    write_EES
                      01464 
05F0   3016           01465     movlw   0x16
05F1   00BC           01466     movwf   ADDRL
05F2   2???           01467     call    read_EE
05F3   301A           01468     movlw   0x1a
05F4   00BC           01469     movwf   ADDRL
05F5   2???           01470     call    write_EES
                      01471 
05F6   3017           01472     movlw   0x17
05F7   00BC           01473     movwf   ADDRL
05F8   2???           01474     call    read_EE
05F9   301B           01475     movlw   0x1b
05FA   00BC           01476     movwf   ADDRL
05FB   2???           01477     call    write_EES
                      01478 
                      01479     ;shift 1 to 2
05FC   1283 1303      01480     banksel DATAL
05FE   3010           01481     movlw   0x10
05FF   00BC           01482     movwf   ADDRL
0600   2???           01483     call    read_EE
0601   3014           01484     movlw   0x14
0602   00BC           01485     movwf   ADDRL
0603   2???           01486     call    write_EES
                      01487 
0604   3011           01488     movlw   0x11
0605   00BC           01489     movwf   ADDRL
0606   2???           01490     call    read_EE
0607   3015           01491     movlw   0x15
0608   00BC           01492     movwf   ADDRL
0609   2???           01493     call    write_EES
                      01494 
060A   3012           01495     movlw   0x12
060B   00BC           01496     movwf   ADDRL
060C   2???           01497     call    read_EE
060D   3016           01498     movlw   0x16
060E   00BC           01499     movwf   ADDRL
060F   2???           01500     call    write_EES
                      01501 
0610   3013           01502     movlw   0x13
0611   00BC           01503     movwf   ADDRL
0612   2???           01504     call    read_EE
0613   3017           01505     movlw   0x17
0614   00BC           01506     movwf   ADDRL
0615   2???           01507     call    write_EES
                      01508 
0616   0008           01509     return
                      01510 
0617   1683           01511 pc_init bsf       STATUS,RP0     ; select bank 1
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0618   0188           01512         clrf      TRISD
MPASM 5.54  /USERS/JUDY/MPLABXPROJECTS/INTER   4-4-2014  16:50:32         PAGE 42


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01513 
                      01514         ;Setup USART for RS232
0619   300F           01515         movlw     d'15'          ; BAUD rate 9600, assuming 10MHz oscillator
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
061A   0099           01516         movwf     SPBRG
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
061B   0198           01517         clrf      TXSTA          ; 8 bits data ,no,1 stop
                      01518 
061C   1283           01519         bcf       STATUS,RP0     ; select bank 0
061D   1798           01520         bsf       RCSTA,SPEN     ; Asynchronous serial port enable
061E   1618           01521         bsf       RCSTA,CREN     ; continuous receive
                      01522 
061F   1683           01523         bsf       STATUS,RP0     ; select bank 1
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0620   1698           01524         bsf       TXSTA,TXEN     ; Transmit enable
0621   1283           01525         bcf       STATUS,RP0     ; select bank 0
                      01526 
0622   0008           01527         return
                      01528 
0623                  01529 wrt_char
0623   1283           01530         bcf     STATUS, RP0
0624   0099           01531         movwf     TXREG
0625   1683           01532         bsf       STATUS,RP0     ; Go to bank with TXSTA
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0626   1C98           01533         btfss     TXSTA,1        ; check TRMT bit in TXSTA (FSR) until TRMT=1
0627   2???           01534         goto      $-1
0628   1283           01535         bcf     STATUS, RP0
0629   0008           01536         return
                      01537 
                      01538 
062A                  01539 display_num
062A   084F           01540         movf    val,w
062B   390F           01541         andlw   0x0f           ; w  = 0000 LLLL
062C   3E30           01542         addlw   0x30           ; convert to ASCII
062D   1283           01543         bcf     STATUS, RP0
062E   0099           01544         movwf     TXREG
062F   1683           01545         bsf       STATUS,RP0     ; Go to bank with TXSTA
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0630   1C98           01546         btfss     TXSTA,1        ; check TRMT bit in TXSTA (FSR) until TRMT=1
0631   2???           01547         goto      $-1
0632   1283 1303      01548         banksel val
0634   0008           01549         return
                      01550 
0635                  01551 pc_log
                      01552 
                      01553                 ;Get year
0635   3032           01554                 movlw   "2"                             ;First line shows 20**/**/**
0636   2???           01555                 call    wrt_char
0637   3030           01556                 movlw   "0"
0638   2???           01557                 call    wrt_char
                      01558 
                      01559                 rtc_read        0x06            ;Read Address 0x06 from DS1307---year
                          M ;input:         addliteral
MPASM 5.54  /USERS/JUDY/MPLABXPROJECTS/INTER   4-4-2014  16:50:32         PAGE 43


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
0639   3006               M         movlw   0x06
063A   1283 1303          M         banksel 0x73
063C   00F3               M         movwf   0x73
063D   2???               M         call    read_rtc
063E   1283 1303          M         banksel 0x75
0640   0875               M         movf    0x75,w
0641   2???               M         call    rtc_convert   
0642   1283 1303      01560         banksel   val
0644   0877           01561         movf      0x77, w
0645   00CF           01562         movwf     val
0646   2???           01563         call      display_num
0647   0878           01564         movf      0x78, w
0648   00CF           01565         movwf     val
0649   2???           01566         call      display_num
064A   302F           01567                 movlw   "/"
064B   2???           01568                 call    wrt_char
                      01569 
                      01570                 ;Get month
                      01571                 rtc_read        0x05            ;Read Address 0x05 from DS1307---month
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
064C   3005               M         movlw   0x05
064D   1283 1303          M         banksel 0x73
064F   00F3               M         movwf   0x73
0650   2???               M         call    read_rtc
0651   1283 1303          M         banksel 0x75
0653   0875               M         movf    0x75,w
0654   2???               M         call    rtc_convert   
0655   0877           01572         movf      0x77, w
0656   00CF           01573         movwf     val
0657   2???           01574         call      display_num
0658   0878           01575         movf      0x78, w
0659   00CF           01576         movwf     val
065A   2???           01577         call      display_num
                      01578 
065B   302F           01579                 movlw   "/"
065C   2???           01580         call    wrt_char
                      01581 
                      01582                 ;Get day
                      01583                 rtc_read        0x04            ;Read Address 0x04 from DS1307---day
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
MPASM 5.54  /USERS/JUDY/MPLABXPROJECTS/INTER   4-4-2014  16:50:32         PAGE 44


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
065D   3004               M         movlw   0x04
065E   1283 1303          M         banksel 0x73
0660   00F3               M         movwf   0x73
0661   2???               M         call    read_rtc
0662   1283 1303          M         banksel 0x75
0664   0875               M         movf    0x75,w
0665   2???               M         call    rtc_convert   
0666   0877           01584         movf      0x77, w
0667   00CF           01585         movwf     val
0668   2???           01586         call      display_num
0669   0878           01587         movf      0x78, w
066A   00CF           01588         movwf     val
066B   2???           01589         call      display_num
                      01590 
066C   3020           01591         movlw     " "
066D   2???           01592         call    wrt_char
                      01593 
                      01594                 ;Get hour
                      01595                 rtc_read        0x02
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
066E   3002               M         movlw   0x02
066F   1283 1303          M         banksel 0x73
0671   00F3               M         movwf   0x73
0672   2???               M         call    read_rtc
0673   1283 1303          M         banksel 0x75
0675   0875               M         movf    0x75,w
0676   2???               M         call    rtc_convert   
0677   0877           01596         movf      0x77, w
0678   00CF           01597         movwf     val
0679   2???           01598         call      display_num
067A   0878           01599         movf      0x78, w
067B   00CF           01600         movwf     val
067C   2???           01601         call      display_num
067D   303A           01602                 movlw   ":"
067E   2???           01603                 call    wrt_char
                      01604 
                      01605                 ;Get minute
                      01606                 rtc_read        0x01            ;Read Address 0x01 from DS1307---min
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
067F   3001               M         movlw   0x01
0680   1283 1303          M         banksel 0x73
MPASM 5.54  /USERS/JUDY/MPLABXPROJECTS/INTER   4-4-2014  16:50:32         PAGE 45


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0682   00F3               M         movwf   0x73
0683   2???               M         call    read_rtc
0684   1283 1303          M         banksel 0x75
0686   0875               M         movf    0x75,w
0687   2???               M         call    rtc_convert   
0688   0877           01607         movf      0x77, w
0689   00CF           01608         movwf     val
068A   2???           01609         call      display_num
068B   0878           01610         movf      0x78, w
068C   00CF           01611         movwf     val
068D   2???           01612         call      display_num
                      01613 
                      01614 
068E   2???           01615         call      next_line
                      01616 
068F   3050           01617         movlw     "P"
0690   2???           01618         call    wrt_char
0691   303A           01619         movlw     ":"
0692   2???           01620         call    wrt_char
                      01621 
0693   1283 1303      01622         banksel   val
0695   0832           01623         movf      pass, w
0696   00CF           01624         movwf     val
0697   2???           01625         call      display_num
                      01626 
0698   3020           01627         movlw     " "
0699   2???           01628         call    wrt_char
                      01629 
069A   3046           01630         movlw     "F"
069B   2???           01631         call    wrt_char
                      01632 
069C   3046           01633         movlw     "F"
069D   2???           01634         call    wrt_char
                      01635 
069E   303A           01636         movlw     ":"
069F   2???           01637         call    wrt_char
                      01638 
06A0   1283 1303      01639         banksel   val
06A2   0833           01640         movf      flickerfail, w
06A3   00CF           01641         movwf     val
06A4   2???           01642         call      display_num
                      01643 
06A5   3020           01644         movlw     " "
06A6   2???           01645         call    wrt_char
                      01646 
06A7   304C           01647         movlw     "L"
06A8   2???           01648         call    wrt_char
                      01649 
06A9   3046           01650         movlw     "F"
06AA   2???           01651         call    wrt_char
                      01652 
06AB   303A           01653         movlw     ":"
06AC   2???           01654         call    wrt_char
MPASM 5.54  /USERS/JUDY/MPLABXPROJECTS/INTER   4-4-2014  16:50:32         PAGE 46


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01655 
06AD   1283 1303      01656         banksel   val
06AF   0834           01657         movf      ledfail, w
06B0   00CF           01658         movwf     val
06B1   2???           01659         call      display_num
                      01660 
06B2   3020           01661         movlw     " "
06B3   2???           01662         call    wrt_char
                      01663 
06B4   304E           01664         movlw     "N"
06B5   2???           01665         call    wrt_char
                      01666 
06B6   303A           01667         movlw     ":"
06B7   2???           01668         call    wrt_char
                      01669 
06B8   1283 1303      01670         banksel   val
06BA   0840           01671         movf      none, w
06BB   00CF           01672         movwf     val
06BC   2???           01673         call      display_num
                      01674 
06BD   2???           01675         call      next_line
                      01676 
06BE   0008           01677         return
                      01678 
06BF                  01679 next_line
06BF   300A           01680         movlw     H'0A'
06C0   2???           01681         call    wrt_char
06C1   300D           01682         movlw     H'0D'
06C2   2???           01683         call    wrt_char
                      01684 
Warning[203]: Found opcode in column 1. (return)
06C3   0008           01685 return
                      01686 
                      01687 
Warning[205]: Found directive in column 1. (END)
3F72                  01688 END
MPASM 5.54  /USERS/JUDY/MPLABXPROJECTS/INTER   4-4-2014  16:50:32         PAGE 47


SYMBOL TABLE
  LABEL                             VALUE 

ACKDT                             00000005
ACKEN                             00000004
ACKSTAT                           00000006
ADCON0                            0000001F
ADCON1                            0000009F
ADCS0                             00000006
ADCS1                             00000007
ADD3HUNS                          00000519
ADD3HUNS1                         00000556
ADD3ONES                          0000051F
ADD3ONES1                         0000055C
ADD3TENS                          0000051C
ADD3TENS1                         00000559
ADDEN                             00000003
ADDRL                             0000003C
ADFM                              00000007
ADIE                              00000006
ADIF                              00000006
ADON                              00000000
ADRESH                            0000001E
ADRESL                            0000009E
BCDADD3                           000004F3
BCDADD31                          00000530
BCD_Display                       
BCD_DisplayS                      
BCLIE                             00000003
BCLIF                             00000003
BF                                00000000
BRGH                              00000002
C                                 00000000
CARRYONES                         00000522
CARRYONES1                        0000055F
CARRYTENS                         00000525
CARRYTENS1                        00000562
CCP1CON                           00000017
CCP1IE                            00000002
CCP1IF                            00000002
CCP1M0                            00000000
CCP1M1                            00000001
CCP1M2                            00000002
CCP1M3                            00000003
CCP1X                             00000005
CCP1Y                             00000004
CCP2CON                           0000001D
CCP2IE                            00000000
CCP2IF                            00000000
CCP2M0                            00000000
CCP2M1                            00000001
CCP2M2                            00000002
CCP2M3                            00000003
CCP2X                             00000005
CCP2Y                             00000004
CCPR1                             00000015
MPASM 5.54  /USERS/JUDY/MPLABXPROJECTS/INTER   4-4-2014  16:50:32         PAGE 48


SYMBOL TABLE
  LABEL                             VALUE 

CCPR1H                            00000016
CCPR1L                            00000015
CCPR2                             0000001B
CCPR2H                            0000001C
CCPR2L                            0000001B
CHS0                              00000003
CHS1                              00000004
CHS2                              00000005
CKE                               00000006
CKP                               00000004
COUNTH                            00000020
COUNTL                            00000022
COUNTM                            00000021
CREN                              00000004
CSRC                              00000007
Check_Flicker                     0000019E
Clear_Display                     000000D4
Convert                           000004EB
Convert1                          00000528
D                                 00000005
DATAL                             0000003D
DATA_ADDRESS                      00000005
DC                                00000001
D_A                               00000005
D_NOT_A                           00000005
Display                           
Display_results                   000001F5
Done                              00000081
E                                 PORTD,3
EEADR                             0000010D
EEADRH                            0000010F
EECON1                            0000018C
EECON2                            0000018D
EEDATA                            0000010C
EEDATH                            0000010E
EEIE                              00000004
EEIF                              00000004
EEPGD                             00000007
EightS                            000004BB
F                                 00000001
FERR                              00000002
FSR                               00000004
GCEN                              00000007
GIE                               00000007
GO                                00000002
GO_DONE                           00000002
GO_NOT_DONE                       00000002
HalfS                             0000049B
I2C_DATA                          00000005
I2C_READ                          00000002
I2C_START                         00000003
I2C_STOP                          00000004
IBF                               00000007
MPASM 5.54  /USERS/JUDY/MPLABXPROJECTS/INTER   4-4-2014  16:50:32         PAGE 49


SYMBOL TABLE
  LABEL                             VALUE 

IBOV                              00000005
INDF                              00000000
INTCON                            0000000B
INTE                              00000004
INTEDG                            00000006
INTF                              00000001
IRP                               00000007
ISR                               0000056E
InitLCD                           000000D7
LCD_DELAY                         
LLD_LOOP                          00000567
Main                              00000024
Menu                              00000057
Motor_Off                         0000048E
Motor_On                          0000047D
NOT_A                             00000005
NOT_ADDRESS                       00000005
NOT_BO                            00000000
NOT_BOR                           00000000
NOT_DONE                          00000002
NOT_PD                            00000003
NOT_POR                           00000001
NOT_RBPU                          00000007
NOT_RC8                           00000006
NOT_T1SYNC                        00000002
NOT_TO                            00000004
NOT_TX8                           00000006
NOT_W                             00000002
NOT_WRITE                         00000002
OBF                               00000006
OERR                              00000001
OPTION_REG                        00000081
Other_wise                        00000160
P                                 00000004
PCFG0                             00000000
PCFG1                             00000001
PCFG2                             00000002
PCFG3                             00000003
PCL                               00000002
PCLATH                            0000000A
PCON                              0000008E
PEIE                              00000006
PEN                               00000002
PIE1                              0000008C
PIE2                              0000008D
PIR1                              0000000C
PIR2                              0000000D
PMem                              0000009E
PMenu                             000000AD
PORTA                             00000005
PORTB                             00000006
PORTC                             00000007
PORTD                             00000008
MPASM 5.54  /USERS/JUDY/MPLABXPROJECTS/INTER   4-4-2014  16:50:32         PAGE 50


SYMBOL TABLE
  LABEL                             VALUE 

PORTE                             00000009
PR2                               00000092
PS0                               00000000
PS1                               00000001
PS2                               00000002
PSA                               00000003
PSPIE                             00000007
PSPIF                             00000007
PSPMODE                           00000004
Paused                            0000004F
QuarterS                          000004AB
R                                 00000002
RA0                               00000000
RA1                               00000001
RA2                               00000002
RA3                               00000003
RA4                               00000004
RA5                               00000005
RB0                               00000000
RB1                               00000001
RB2                               00000002
RB3                               00000003
RB4                               00000004
RB5                               00000005
RB6                               00000006
RB7                               00000007
RBIE                              00000003
RBIF                              00000000
RC0                               00000000
RC1                               00000001
RC2                               00000002
RC3                               00000003
RC4                               00000004
RC5                               00000005
RC6                               00000006
RC7                               00000007
RC8_9                             00000006
RC9                               00000006
RCD8                              00000000
RCEN                              00000003
RCIE                              00000005
RCIF                              00000005
RCREG                             0000001A
RCSTA                             00000018
RD                                00000000
RD0                               00000000
RD1                               00000001
RD2                               00000002
RD3                               00000003
RD4                               00000004
RD5                               00000005
RD6                               00000006
RD7                               00000007
MPASM 5.54  /USERS/JUDY/MPLABXPROJECTS/INTER   4-4-2014  16:50:32         PAGE 51


SYMBOL TABLE
  LABEL                             VALUE 

RE0                               00000000
RE1                               00000001
RE2                               00000002
READ_WRITE                        00000002
RP0                               00000005
RP1                               00000006
RS                                PORTD,2
RSEN                              00000001
RTC                               000000BB
RX9                               00000006
RX9D                              00000000
R_NOT_W                           00000002
R_W                               00000002
Refresh                           0000044B
Run                               00000070
Runtime                           00000093
S                                 00000003
SEN                               00000000
SMP                               00000007
SPBRG                             00000099
SPEN                              00000007
SREN                              00000005
SSPADD                            00000093
SSPBUF                            00000013
SSPCON                            00000014
SSPCON2                           00000091
SSPEN                             00000005
SSPIE                             00000003
SSPIF                             00000003
SSPM0                             00000000
SSPM1                             00000001
SSPM2                             00000002
SSPM3                             00000003
SSPOV                             00000006
SSPSTAT                           00000094
STATUS                            00000003
SYNC                              00000004
Start_Test                        00000032
Switch_Lines                      000000D1
T0CS                              00000005
T0IE                              00000005
T0IF                              00000002
T0SE                              00000004
T1CKPS0                           00000004
T1CKPS1                           00000005
T1CON                             00000010
T1INSYNC                          00000002
T1OSCEN                           00000003
T1SYNC                            00000002
T2CKPS0                           00000000
T2CKPS1                           00000001
T2CON                             00000012
TMR0                              00000001
MPASM 5.54  /USERS/JUDY/MPLABXPROJECTS/INTER   4-4-2014  16:50:32         PAGE 52


SYMBOL TABLE
  LABEL                             VALUE 

TMR0IE                            00000005
TMR0IF                            00000002
TMR1                              0000000E
TMR1CS                            00000001
TMR1H                             0000000F
TMR1IE                            00000000
TMR1IF                            00000000
TMR1L                             0000000E
TMR1ON                            00000000
TMR2                              00000011
TMR2IE                            00000001
TMR2IF                            00000001
TMR2ON                            00000002
TOUTPS0                           00000003
TOUTPS1                           00000004
TOUTPS2                           00000005
TOUTPS3                           00000006
TRISA                             00000085
TRISA0                            00000000
TRISA1                            00000001
TRISA2                            00000002
TRISA3                            00000003
TRISA4                            00000004
TRISA5                            00000005
TRISB                             00000086
TRISB0                            00000000
TRISB1                            00000001
TRISB2                            00000002
TRISB3                            00000003
TRISB4                            00000004
TRISB5                            00000005
TRISB6                            00000006
TRISB7                            00000007
TRISC                             00000087
TRISC0                            00000000
TRISC1                            00000001
TRISC2                            00000002
TRISC3                            00000003
TRISC4                            00000004
TRISC5                            00000005
TRISC6                            00000006
TRISC7                            00000007
TRISD                             00000088
TRISD0                            00000000
TRISD1                            00000001
TRISD2                            00000002
TRISD3                            00000003
TRISD4                            00000004
TRISD5                            00000005
TRISD6                            00000006
TRISD7                            00000007
TRISE                             00000089
TRISE0                            00000000
MPASM 5.54  /USERS/JUDY/MPLABXPROJECTS/INTER   4-4-2014  16:50:32         PAGE 53


SYMBOL TABLE
  LABEL                             VALUE 

TRISE1                            00000001
TRISE2                            00000002
TRMT                              00000001
TX8_9                             00000006
TX9                               00000006
TX9D                              00000000
TXD8                              00000000
TXEN                              00000005
TXIE                              00000004
TXIF                              00000004
TXREG                             00000019
TXSTA                             00000098
Table_Counter                     00000023
Test                              0000003C
Timer                             00000571
Trial                             000000C2
UA                                00000001
VALUEL                            0000003E
W                                 00000000
WCOL                              00000007
WR                                00000001
WREN                              00000002
WRERR                             00000003
WRT_LCD                           
WR_DATA                           000004DA
WR_INS                            000004CB
Welcome_Msg                       00000045
Z                                 00000002
_.org_1_04A2                      000004A2
_.org_1_04A4                      000004A4
_.org_1_04A7                      000004A7
_.org_1_04B2                      000004B2
_.org_1_04B4                      000004B4
_.org_1_04B7                      000004B7
_.org_1_04C2                      000004C2
_.org_1_04C4                      000004C4
_.org_1_04C7                      000004C7
_.org_1_056A                      0000056A
_.org_1_0627                      00000627
_.org_1_0631                      00000631
_BODEN_OFF                        00003FBF
_BODEN_ON                         00003FFF
_BOREN_OFF                        00003FBF
_BOREN_ON                         00003FFF
_CONFIG                           00002007
_CPD_OFF                          00003FFF
_CPD_ON                           00003EFF
_CP_ALL                           00000FCF
_CP_HALF                          00001FDF
_CP_OFF                           00003FFF
_CP_UPPER_256                     00002FEF
_DEBUG_OFF                        00003FFF
_DEBUG_ON                         000037FF
MPASM 5.54  /USERS/JUDY/MPLABXPROJECTS/INTER   4-4-2014  16:50:32         PAGE 54


SYMBOL TABLE
  LABEL                             VALUE 

_DEVID1                           00002006
_FOSC_EXTRC                       00003FFF
_FOSC_HS                          00003FFE
_FOSC_LP                          00003FFC
_FOSC_XT                          00003FFD
_HS_OSC                           00003FFE
_IDLOC0                           00002000
_IDLOC1                           00002001
_IDLOC2                           00002002
_IDLOC3                           00002003
_LP_OSC                           00003FFC
_LVP_OFF                          00003F7F
_LVP_ON                           00003FFF
_PWRTE_OFF                        00003FFF
_PWRTE_ON                         00003FF7
_RC_OSC                           00003FFF
_WDTE_OFF                         00003FFB
_WDTE_ON                          00003FFF
_WDT_OFF                          00003FFB
_WDT_ON                           00003FFF
_WRT_ENABLE_OFF                   00003DFF
_WRT_ENABLE_ON                    00003FFF
_WRT_OFF                          00003DFF
_WRT_ON                           00003FFF
_XT_OSC                           00003FFD
__16F877                          00000001
addsignal                         00000578
bcd                               0000002D
check                             000000F5
check_1                           000002D2
check_2                           00000312
check_3                           00000332
check_4                           00000352
check_5                           00000372
check_6                           00000392
check_7                           000003B2
check_8                           000003D2
check_9                           000003F2
check_A                           000000F6
check_B                           0000013B
check_C                           00000158
com                               00000029
continue                          00000412
count                             0000002E
count_down                        00000162
count_loop                        00000170
count_temp                        0000003A
dat                               0000002A
display                           000002B3
display_EE                        000002F2
display_num                       0000062A
end_display                       000002C8
finish                            0000057D
MPASM 5.54  /USERS/JUDY/MPLABXPROJECTS/INTER   4-4-2014  16:50:32         PAGE 55


SYMBOL TABLE
  LABEL                             VALUE 

flickerfail                       00000033
flickerfailT                      0000004C
flickertime                       000001B4
goodcandle                        000001E7
huns                              00000039
i2c_common_setup                  00000000
init                              00000005
key_temp                          00000025
lcdLongDelay                      00000565
lcd_d1                            0000002B
lcd_d2                            0000002C
lcd_tmp                           00000024
ledfail                           00000034
ledfailT                          0000004D
light1                            00000041
light2                            00000042
light3                            00000043
light4                            00000044
light5                            00000045
light6                            00000046
light7                            00000047
light8                            00000048
light9                            00000049
lighteight                        00000294
lightfive                         00000267
lightfour                         00000258
lightnine                         000002A3
lightone                          0000022C
lightseven                        00000285
lightsix                          00000276
lightthree                        00000249
lighttwo                          0000023A
next                              000002B2
next_line                         000006BF
none                              00000040
noneT                             0000004E
notff                             000002C6
notflickerfail                    000001D2
notlf                             000002BF
notnone                           000002B8
ones                              00000037
pass                              00000032
passT                             0000004B
pc_init                           00000617
pc_log                            00000635
pmenu_access                      000002CA
read_EE                           000005B4
read_rtc                          00000000
result_temp                       0000004A
results_access                    0000021A
rtc1                              00000027
rtc2                              00000028
rtc_convert                       00000000
MPASM 5.54  /USERS/JUDY/MPLABXPROJECTS/INTER   4-4-2014  16:50:32         PAGE 56


SYMBOL TABLE
  LABEL                             VALUE 

rtc_read                          
rtc_resetAll                      
rtc_set                           
run_temp                          0000003B
runtime                           00000035
shift_EE                          000005C8
show_RTC                          00000418
show_data                         0000002F
signal                            0000003F
status_temp                       00000031
tens                              00000038
test                              00000026
timercount                        00000036
val                               0000004F
w_temp                            00000030
wait                              00000414
write_EE                          00000582
write_EES                         0000059E
write_rtc                         00000000
wrt_char                          00000623

Errors   :     0
Warnings :     7 reported,     0 suppressed
Messages :    46 reported,     0 suppressed

