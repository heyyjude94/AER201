MPASM 5.54  /USERS/JUDY/MPLABXPROJECTS/INTER   4-8-2014  1:03:34         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 ;*******************************************************************
                      00002 ; User Interface
                      00003 ; Assembler : mpasm.exe
                      00004 ; Linker    : mplink.exe
                      00005 ; Written By : Judy Shen
                      00006 ;*******************************************************************
                      00007 
                      00008       list p=16f877                 ; list directive to define processor
                      00009       #include <p16f877.inc>        ; processor specific variable definitions
                      00001         LIST
                      00002 
                      00003 ;==========================================================================
                      00004 ;  MPASM PIC16F877 processor include
                      00005 ; 
                      00006 ;  (c) Copyright 1999-2013 Microchip Technology, All rights reserved
                      00007 ;==========================================================================
                      00008 
                      00540         LIST
                      00010       #include <LCD.inc>
                      00001 
                      00002 WRT_LCD macro val
                      00003         movlw   val
                      00004         call    WR_DATA
                      00005         endm
                      00006 
                      00007     ;Delay: ~160us
Warning[207]: Found label after column 1. (LCD_DELAY)
                      00008  LCD_DELAY macro
                      00009         movlw   0xFF
                      00010         movwf   lcd_d1
                      00011         decfsz  lcd_d1,f
                      00012         goto    $-1
                      00013         endm
                      00014 
                      00015 BCD_Display macro val
                      00016         swapf val, w
                      00017         andlw   0x0f           ; Mask upper four bits 0000 HHHH
                      00018         addlw   0x30           ; convert to ASCII
                      00019         call WR_DATA
                      00020 
                      00021         call    lcdLongDelay
                      00022         movf    val,w
                      00023         andlw   0x0f           ; w  = 0000 LLLL
                      00024         addlw   0x30           ; convert to ASCII
                      00025         call WR_DATA
                      00026         endm
                      00027 
                      00028 BCD_DisplayS macro val
                      00029         movf    val,w
                      00030         andlw   0x0f           ; w  = 0000 LLLL
                      00031         addlw   0x30           ; convert to ASCII
                      00032         call WR_DATA
                      00033         endm
MPASM 5.54  /USERS/JUDY/MPLABXPROJECTS/INTER   4-8-2014  1:03:34         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00034 
                      00035 Display macro   Message
                      00036                 local   loop_
                      00037                 local   end_
                      00038                 clrf    Table_Counter
                      00039                 clrw
                      00040 loop_   movf    Table_Counter,W
                      00041                 call    Message
                      00042                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
                      00043                 btfsc   STATUS,Z
                      00044                         goto    end_
                      00045                 call    WR_DATA
                      00046                 incf    Table_Counter,F
                      00047                 goto    loop_
                      00048 end_
                      00049                 endm
                      00050 
                      00011       #include <rtc_macros.inc>
                      00001         ;External labels
  0000                00002         extern  write_rtc,read_rtc,rtc_convert,i2c_common_setup
                      00003 
                      00004 ;RTC Macros;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00005 
                      00006 rtc_resetAll    macro
                      00007 ;input:         none
                      00008 ;output:        none
                      00009 ;desc:          Resets all the time keeping registers on the RTC to zero
                      00010         banksel         0x74
                      00011         clrf            0x74
                      00012         banksel         0x73
                      00013         clrf            0x73
                      00014     call        write_rtc               ;Write 0 to Seconds
                      00015         banksel         0x73
                      00016     incf        0x73                    ;Set register address to 1
                      00017         call            write_rtc
                      00018         banksel         0x73
                      00019     incf        0x73                    ;Set register address to 2
                      00020         call            write_rtc
                      00021         banksel         0x73
                      00022     incf        0x73                    ;Set register address to 3
                      00023         call            write_rtc
                      00024         banksel         0x73
                      00025     incf        0x73                    ;Set register address to 4
                      00026         call            write_rtc
                      00027         banksel         0x73
                      00028     incf        0x73                    ;Set register address to 5
                      00029         call            write_rtc
                      00030         banksel         0x73
                      00031     incf        0x73                    ;Set register address to 6
                      00032         call            write_rtc
                      00033         endm
                      00034 
                      00035 rtc_set         macro   addliteral,datliteral
MPASM 5.54  /USERS/JUDY/MPLABXPROJECTS/INTER   4-8-2014  1:03:34         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00036 ;input:         addliteral: value of address
                      00037 ;                       datliteral: value of data
                      00038 ;output:        none
                      00039 ;desc:          loads the data in datliteral into the 
                      00040 ;                       address specified by addliteral in the RTC
                      00041         banksel 0x73
                      00042         movlw   addliteral
                      00043         movwf   0x73
                      00044         banksel 0x74
                      00045         movlw   datliteral
                      00046         movwf   0x74    
                      00047         call    write_rtc
                      00048         endm
                      00049 
                      00050 rtc_read        macro   addliteral
                      00051 ;input:         addliteral
                      00052 ;output:        0x75, 0x77, 0x78
                      00053 ;desc:          From the selected register in the RTC, read the data
                      00054 ;                       and load it into 0x75. 0x75 is also converted into 
                      00055 ;                       ASCII characters and the tens digit is placed into
                      00056 ;                       0x77 and the ones digit is placed in 0x78
                      00057         movlw   addliteral
                      00058         banksel 0x73
                      00059         movwf   0x73
                      00060         call    read_rtc
                      00061         banksel 0x75
                      00062         movf    0x75,w
                      00063         call    rtc_convert   
                      00064         endm
2007   3F72           00012       __CONFIG _CP_OFF & _WDT_OFF & _BODEN_ON & _PWRTE_ON & _HS_OSC & _WRT_ENABLE_ON & _CPD_OFF & _LVP_O
                            FF
                      00013 
                      00014         cblock  0x20
  00000020            00015                 COUNTH ;0x20
  00000021            00016                 COUNTM ;0x21
  00000022            00017                 COUNTL ;0x22
  00000023            00018                 Table_Counter ;0x23
  00000024            00019                 lcd_tmp ;0x24
  00000025            00020         key_temp ;0x25
  00000026            00021         test ;0x26
  00000027            00022         rtc1 ;0x27
  00000028            00023         rtc2 ;0x28
  00000029            00024         com ;0x29
  0000002A            00025         dat ;0x2a
  0000002B            00026         lcd_d1 ;0x2b
  0000002C            00027         lcd_d2 ;0x2c
  0000002D            00028         bcd ;0x2d
  0000002E            00029         count ;0x2e
  0000002F            00030         show_data ;02f
  00000030            00031         w_temp ;0x30
  00000031            00032         status_temp ;0x31
  00000032            00033         pass ;0x32
  00000033            00034         flickerfail ;0x33
MPASM 5.54  /USERS/JUDY/MPLABXPROJECTS/INTER   4-8-2014  1:03:34         PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000034            00035         ledfail ;0x34
  00000035            00036         runtime ;0x35
  00000036            00037         timercount ;0x36
  00000037            00038         ones ;0x37
  00000038            00039         tens ;0x38
  00000039            00040         huns ;0x39
  0000003A            00041         count_temp ;0x3a
  0000003B            00042         run_temp ;0x3b
  0000003C            00043         ADDRL ;0x3c
  0000003D            00044         DATAL ;0x3d
  0000003E            00045         VALUEL ;0x3e
  0000003F            00046         signal ;0x3f
  00000040            00047         none ;0x40
  00000041            00048         light1 ;0x41
  00000042            00049         light2 ;0x42
  00000043            00050         light3 ;0x43
  00000044            00051         light4 ;0x44
  00000045            00052         light5 ;0x45
  00000046            00053         light6 ;0x46
  00000047            00054         light7 ;0x47
  00000048            00055         light8 ;0x48
  00000049            00056         light9 ;0x49
  0000004A            00057         result_temp;0x4a
  0000004B            00058         temp1  ;0x4b
  0000004C            00059         temp2  ;0x4c
  0000004D            00060         val    ;0x4d
                      00061         endc
                      00062 
                      00063         ;Declare constants for pin assignments (LCD on PORTD)
                      00064 
                      00065                 #define RS      PORTD,2
                      00066                 #define E       PORTD,3
                      00067 
                      00068         ORG       0x0000     ;RESET vector must always be at 0x00
0000   018A           00069         clrf PCLATH
0001   2???           00070         goto      init       ;Just jump to the main code section.
                      00071 
                      00072         ORG 0x004;interrupt service routine
0004   2???           00073         goto ISR
0005                  00074 init
                      00075          ;initialize timer interrupt
0005   178B           00076          bsf        INTCON, GIE
0006   1683 1303      00077          banksel    OPTION_REG
0008   0181           00078          clrf       TMR0
0009   30C7           00079          movlw      B'11000111'
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
000A   0081           00080          movwf      OPTION_REG
000B   1283           00081          bcf        STATUS, RP0
                      00082 
                      00083          ;init timer
000C   3026           00084          movlw      D'38'
000D   00B6           00085          movwf      timercount
000E   3002           00086          movlw      D'02'
MPASM 5.54  /USERS/JUDY/MPLABXPROJECTS/INTER   4-8-2014  1:03:34         PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000F   00B5           00087          movwf      runtime
                      00088 
                      00089          ;set inputs and outputs
0010   1683           00090          bsf       STATUS,RP0     ; select bank 1
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0011   0185           00091          clrf      TRISA
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0012   1605           00092          bsf       TRISA, 4
0013   30F3           00093          movlw     b'11110011'    ; Set required keypad inputs
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0014   0086           00094          movwf     TRISB
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0015   0187           00095          clrf      TRISC          ; All port C is output
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0016   0188           00096          clrf      TRISD          ; All port D is output
                      00097 
                      00098 
                      00099          ;Set SDA and SCL to high-Z first as required for I2C
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0017   1607           00100                  bsf       TRISC,4
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0018   1587           00101                  bsf       TRISC,3
                      00102 
                      00103          ; clear ports
0019   1283           00104          bcf       STATUS,RP0     ; select bank 0
001A   0185           00105          clrf      PORTA
001B   0186           00106          clrf      PORTB
001C   0187           00107          clrf      PORTC
001D   0188           00108          clrf      PORTD
                      00109 
                      00110          ;initialize i2c
001E   2???           00111                  call      i2c_common_setup
                      00112          ;Initialize the LCD (code in lcd.asm; imported by lcd.inc)
001F   2???           00113          call      InitLCD    
                      00114          ;init RS232
0020   2???           00115          call      pc_init
                      00116          ; init EEPROM
0021   3010           00117          movlw    0x10
0022   00BC           00118          movwf    ADDRL
0023   01BD           00119          clrf     DATAL
0024   01BE           00120          clrf     VALUEL
                      00121 
                      00122 ;***************************************
                      00123 ;MAIN Menu
                      00124 ;***************************************
                      00125 Main    Display         Welcome_Msg
  0000                    M                 local   loop_
  0000                    M                 local   end_
0025   01A3               M                 clrf    Table_Counter
0026   0103               M                 clrw
0027   0823               M loop_   movf    Table_Counter,W
0028   2???               M                 call    Welcome_Msg
0029   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
MPASM 5.54  /USERS/JUDY/MPLABXPROJECTS/INTER   4-8-2014  1:03:34         PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

002A   1903               M                 btfsc   STATUS,Z
002B   2???               M                         goto    end_
002C   2???               M                 call    WR_DATA
002D   0AA3               M                 incf    Table_Counter,F
002E   2???               M                 goto    loop_
002F                      M end_
002F   2???           00126         call        HalfS
0030   2???           00127         call        HalfS
0031   2???           00128         call        HalfS
0032   2???           00129         call        Clear_Display
                      00130 
0033                  00131 Start_Test
                      00132                 Display         Menu
  0000                    M                 local   loop_
  0000                    M                 local   end_
0033   01A3               M                 clrf    Table_Counter
0034   0103               M                 clrw
0035   0823               M loop_   movf    Table_Counter,W
0036   2???               M                 call    Menu
0037   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
0038   1903               M                 btfsc   STATUS,Z
0039   2???               M                         goto    end_
003A   2???               M                 call    WR_DATA
003B   0AA3               M                 incf    Table_Counter,F
003C   2???               M                 goto    loop_
003D                      M end_
                      00133 
003D   3018           00134 Test     movlw          b'00011000'             ;Move to the left
003E   2???           00135          call           WR_INS
003F   2???           00136          call           HalfS    ;Wait until data is available from the keypad
0040   1C86           00137          btfss          PORTB,1
0041   2???           00138          goto           Test
                      00139 
                      00140 
0042   0E06           00141          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
0043   390F           00142          andlw          0x0F
0044   2???           00143          call       check
0045   2???           00144          goto       Start_Test
                      00145 
                      00146 ;***************************************
                      00147 ; Look up table
                      00148 ;***************************************
                      00149 
0046                  00150 Welcome_Msg
0046   0782           00151                 addwf   PCL,F
0047   3457 3465 346C 00152                 dt              "Welcome!", 0
       3463 346F 346D 
       3465 3421 3400 
                      00153 
0050                  00154 Paused
0050   0782           00155                 addwf   PCL,F
0051   3450 3461 3475 00156                 dt              "Paused", 0
       3473 3465 3464 
MPASM 5.54  /USERS/JUDY/MPLABXPROJECTS/INTER   4-8-2014  1:03:34         PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

       3400 
                      00157 
0058                  00158 Menu
0058   0782           00159                 addwf   PCL,F
0059   3441 343A 3453 00160                 dt              "A:Start, ", "B:PLog, ", "C:Time",0
       3474 3461 3472 
       3474 342C 3420 
       3442 343A 3450 
       344C 346F 3467 
       342C 3420 3443 
       343A 3454 3469 
       346D 3465 3400 
                      00161 
0071                  00162 Run
0071   0782           00163                 addwf   PCL,F
0072   3454 3465 3473 00164                 dt              "Testing Candles", 0
       3474 3469 346E 
       3467 3420 3443 
       3461 346E 3464 
       346C 3465 3473 
       3400 
                      00165 
0082                  00166 Done
0082   0782           00167                 addwf   PCL,F
0083   3446 3469 346E 00168                 dt              "Finished Testing", 0
       3469 3473 3468 
       3465 3464 3420 
       3454 3465 3473 
       3474 3469 346E 
       3467 3400 
                      00169 
0094                  00170 Runtime
0094   0782           00171                 addwf   PCL,F
0095   3452 3475 346E 00172                 dt              "Runtime: ", 0
       3474 3469 346D 
       3465 343A 3420 
       3400 
                      00173 
009F                  00174 PMem
009F   0782           00175                 addwf   PCL,F
00A0   3450 3465 3472 00176                 dt              "Permanent Log", 0
       346D 3461 346E 
       3465 346E 3474 
       3420 344C 346F 
       3467 3400 
00AE                  00177 PMenu
00AE   0782           00178         addwf   PCL, F
00AF   3453 3465 346C 00179         dt      "Select Trial", 0
       3465 3463 3474 
       3420 3454 3472 
       3469 3461 346C 
       3400 
                      00180 
MPASM 5.54  /USERS/JUDY/MPLABXPROJECTS/INTER   4-8-2014  1:03:34         PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00BC                  00181 RTC
00BC   0782           00182                 addwf   PCL,F
00BD   3454 3469 346D 00183                 dt              "Time:", 0
       3465 343A 3400 
                      00184 
00C3                  00185 Trial
00C3   0782           00186         addwf   PCL, F
00C4   3450 343A 3420 00187         dt      "P: FF: LF: N:", 0
       3446 3446 343A 
       3420 344C 3446 
       343A 3420 344E 
       343A 3400 
                      00188 
                      00189 
                      00190 ;***************************************
                      00191 ; General Helper Subrountines
                      00192 ;***************************************
                      00193 
00D2                  00194 Switch_Lines
                      00195 ;switches to the next line
00D2   30C0           00196                 movlw   B'11000000'
00D3   2???           00197                 call    WR_INS
00D4   0008           00198                 return
                      00199 
00D5                  00200 Clear_Display
                      00201 ;clears LCD display
00D5   3001           00202                 movlw   B'00000001'
00D6   2???           00203                 call    WR_INS
00D7   0008           00204                 return
                      00205 
00D8                  00206 wait
                      00207 ;loops until a keypad entry is detected
00D8   2???           00208          call           HalfS    ;Wait until data is available from the keypad
00D9   1C86           00209          btfss          PORTB,1
00DA   2???           00210          goto           wait
00DB   0008           00211          return
                      00212 
00DC                  00213 check
                      00214 ;checks key_pad input from main menu
                      00215 ;will direct program to A: Checking Candles B: Permanent Memory or C: Clock
00DC   00A5           00216          movwf      key_temp
                      00217 
00DD                  00218 check_A
                      00219 ;candle checking option
                      00220 ;modifies EEPROM after each activation
                      00221 ;uploads information to PC through RS232 when activated
00DD   3A03           00222          xorlw       D'3'
00DE   1D03           00223          btfss      STATUS, Z ;if not A go to check_B
00DF   2???           00224              goto    check_B
00E0   2???           00225          call       Clear_Display
                      00226          Display    Run
  0000                    M                 local   loop_
  0000                    M                 local   end_
MPASM 5.54  /USERS/JUDY/MPLABXPROJECTS/INTER   4-8-2014  1:03:34         PAGE  9


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00E1   01A3               M                 clrf    Table_Counter
00E2   0103               M                 clrw
00E3   0823               M loop_   movf    Table_Counter,W
00E4   2???               M                 call    Run
00E5   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
00E6   1903               M                 btfsc   STATUS,Z
00E7   2???               M                         goto    end_
00E8   2???               M                 call    WR_DATA
00E9   0AA3               M                 incf    Table_Counter,F
00EA   2???               M                 goto    loop_
00EB                      M end_
                      00227 
                      00228 ;Running operation
00EB   2???           00229         call        Motor_On ;turns switches on
00EC   168B           00230         bsf         INTCON, 5 ;begin timer
00ED   2???           00231         call        count_down ;calling main candle checking function
00EE   128B           00232         bcf         INTCON, 5 ;end timer
00EF   2???           00233         call        Motor_Off ;turns switches off
                      00234 
                      00235 ;Display finished message
00F0   2???           00236         call        Clear_Display
                      00237         Display     Done ;displaying finish message
  0000                    M                 local   loop_
  0000                    M                 local   end_
00F1   01A3               M                 clrf    Table_Counter
00F2   0103               M                 clrw
00F3   0823               M loop_   movf    Table_Counter,W
00F4   2???               M                 call    Done
00F5   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
00F6   1903               M                 btfsc   STATUS,Z
00F7   2???               M                         goto    end_
00F8   2???               M                 call    WR_DATA
00F9   0AA3               M                 incf    Table_Counter,F
00FA   2???               M                 goto    loop_
00FB                      M end_
00FB   2???           00238         call        Switch_Lines
                      00239         Display     Runtime ;displays message "Runtime"
  0000                    M                 local   loop_
  0000                    M                 local   end_
00FC   01A3               M                 clrf    Table_Counter
00FD   0103               M                 clrw
00FE   0823               M loop_   movf    Table_Counter,W
00FF   2???               M                 call    Runtime
0100   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
0101   1903               M                 btfsc   STATUS,Z
0102   2???               M                         goto    end_
0103   2???               M                 call    WR_DATA
0104   0AA3               M                 incf    Table_Counter,F
0105   2???               M                 goto    loop_
0106                      M end_
0106   2???           00240         call        Convert ;displays runtime
0107   3002           00241         movlw       D'02' ;adds motor operation time onto run time
0108   00B5           00242         movwf       runtime
MPASM 5.54  /USERS/JUDY/MPLABXPROJECTS/INTER   4-8-2014  1:03:34         PAGE 10


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00243 
                      00244 ;Writing run info into EEPROM
0109   2???           00245         call        shift_EE
010A   3010           00246         movlw       0x10
010B   00BC           00247         movwf       ADDRL
Warning[202]: Argument out of range.  Least significant bits used.
010C   0832           00248         movf        pass, VALUEL
010D   00BE           00249         movwf       VALUEL
010E   2???           00250         call        write_EE
                      00251 
Message[305]: Using default destination of 1 (file).
010F   0ABC           00252         incf        ADDRL
Warning[202]: Argument out of range.  Least significant bits used.
0110   0833           00253         movf        flickerfail, VALUEL
0111   00BE           00254         movwf       VALUEL
0112   2???           00255         call        write_EE
Message[305]: Using default destination of 1 (file).
0113   0ABC           00256         incf        ADDRL
                      00257 
Warning[202]: Argument out of range.  Least significant bits used.
0114   0834           00258         movf        ledfail, VALUEL
0115   00BE           00259         movwf       VALUEL
0116   2???           00260         call        write_EE
Message[305]: Using default destination of 1 (file).
0117   0ABC           00261         incf        ADDRL
                      00262 
Warning[202]: Argument out of range.  Least significant bits used.
0118   0840           00263         movf        none, VALUEL
0119   00BE           00264         movwf       VALUEL
011A   2???           00265         call        write_EE
                      00266 
                      00267 ;allowing checking of previous run trials
011B   2???           00268         call    wait
011C   2???           00269         call    Clear_Display
011D   2???           00270         call    results_access
                      00271 
                      00272 ;uploading to PC Interface
011E   2???           00273         call    pc_log
011F   2???           00274         call    wait
0120   2???           00275         call    Clear_Display
0121   0008           00276         return
                      00277 
0122                  00278 check_B
                      00279 ;access to EEPROM permanent memory
0122   0825           00280         movf    key_temp, W
0123   3A07           00281         xorlw   D'7'
0124   1D03           00282         btfss   STATUS, Z
0125   2???           00283             goto check_C ; go to check_C if not B
0126   2???           00284         call    Clear_Display
                      00285 
                      00286 ;Display of access instructions
                      00287         Display PMem
  0000                    M                 local   loop_
MPASM 5.54  /USERS/JUDY/MPLABXPROJECTS/INTER   4-8-2014  1:03:34         PAGE 11


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  0000                    M                 local   end_
0127   01A3               M                 clrf    Table_Counter
0128   0103               M                 clrw
0129   0823               M loop_   movf    Table_Counter,W
012A   2???               M                 call    PMem
012B   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
012C   1903               M                 btfsc   STATUS,Z
012D   2???               M                         goto    end_
012E   2???               M                 call    WR_DATA
012F   0AA3               M                 incf    Table_Counter,F
0130   2???               M                 goto    loop_
0131                      M end_
0131   2???           00288         call    Switch_Lines
                      00289         Display PMenu
  0000                    M                 local   loop_
  0000                    M                 local   end_
0132   01A3               M                 clrf    Table_Counter
0133   0103               M                 clrw
0134   0823               M loop_   movf    Table_Counter,W
0135   2???               M                 call    PMenu
0136   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
0137   1903               M                 btfsc   STATUS,Z
0138   2???               M                         goto    end_
0139   2???               M                 call    WR_DATA
013A   0AA3               M                 incf    Table_Counter,F
013B   2???               M                 goto    loop_
013C                      M end_
013C   2???           00290         call    pmenu_access
013D   2???           00291         call    Clear_Display
013E   0008           00292         return
                      00293 
013F                  00294 check_C
                      00295 ;Access to second by second real time clock
013F   0825           00296         movf    key_temp, W
0140   3A0B           00297         xorlw   D'11'
0141   1D03           00298         btfss   STATUS, Z
0142   2???           00299             goto Other_wise
0143   2???           00300         call    Clear_Display
0144   2???           00301         call    show_RTC
0145   2???           00302         call    Clear_Display
0146   0008           00303         return
                      00304 
0147                  00305 Other_wise
                      00306 ;return to main program if any other key on key pad is selected
0147   2???           00307         call    Clear_Display
0148   0008           00308         return
                      00309 
                      00310 ;***************************************
                      00311 ; Initialization Helper Subrountines
                      00312 ;***************************************
                      00313 
0149                  00314 InitLCD
                      00315 ;initializes LCD Display
MPASM 5.54  /USERS/JUDY/MPLABXPROJECTS/INTER   4-8-2014  1:03:34         PAGE 12


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0149   1283           00316         bcf     STATUS,RP0
014A   1588           00317         bsf     E     ;E default high
                      00318 
                      00319         ;Wait for LCD POR to finish (~15ms)
014B   2???           00320         call    lcdLongDelay
014C   2???           00321         call    lcdLongDelay
014D   2???           00322         call    lcdLongDelay
                      00323 
                      00324         ;Ensure 8-bit mode first (no way to immediately guarantee 4-bit mode)
                      00325         ; -> Send b'0011' 3 times
014E   3033           00326         movlw   b'00110011'
014F   2???           00327         call    WR_INS
0150   2???           00328         call    lcdLongDelay
0151   2???           00329         call    lcdLongDelay
0152   3032           00330         movlw   b'00110010'
0153   2???           00331         call    WR_INS
0154   2???           00332         call    lcdLongDelay
0155   2???           00333         call    lcdLongDelay
                      00334 
                      00335         ; 4 bits, 2 lines, 5x7 dots
0156   3028           00336         movlw   b'00101000'
0157   2???           00337         call    WR_INS
0158   2???           00338         call    lcdLongDelay
0159   2???           00339         call    lcdLongDelay
                      00340 
                      00341         ; display on/off
015A   300C           00342         movlw   b'00001100'
015B   2???           00343         call    WR_INS
015C   2???           00344         call    lcdLongDelay
015D   2???           00345         call    lcdLongDelay
                      00346 
                      00347         ; Entry mode
015E   3006           00348         movlw   b'00000110'
015F   2???           00349         call    WR_INS
0160   2???           00350         call    lcdLongDelay
0161   2???           00351         call    lcdLongDelay
                      00352 
                      00353         ; Clear ram
0162   3001           00354         movlw   b'00000001'
0163   2???           00355         call    WR_INS
0164   2???           00356         call    lcdLongDelay
0165   2???           00357         call    lcdLongDelay
0166   0008           00358         return
                      00359 
0167                  00360 WR_INS
                      00361 ;writes w value instruction to LCD (from sample code)
0167   1108           00362         bcf         RS                          ;clear RS
0168   00A9           00363         movwf       com                         ;W --> com
0169   39F0           00364         andlw       0xF0                        ;mask 4 bits MSB w = X0
016A   0088           00365         movwf       PORTD                       ;Send 4 bits MSB
016B   1588           00366         bsf         E                           ;
016C   2???           00367         call        lcdLongDelay        ;__    __
016D   1188           00368         bcf         E                           ;  |__|
MPASM 5.54  /USERS/JUDY/MPLABXPROJECTS/INTER   4-8-2014  1:03:34         PAGE 13


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

016E   0E29           00369         swapf       com,w
016F   39F0           00370         andlw       0xF0                        ;1111 0010
0170   0088           00371         movwf       PORTD                       ;send 4 bits LSB
0171   1588           00372         bsf         E                           ;
0172   2???           00373         call        lcdLongDelay        ;__    __
0173   1188           00374         bcf         E                           ;  |__|
0174   2???           00375         call        lcdLongDelay
0175   0008           00376         return
                      00377 
0176                  00378 WR_DATA
                      00379 ;writes w value data onto LCD (from sample code)
0176   1508           00380         bsf         RS
0177   00AA           00381         movwf       dat
0178   082A           00382         movf        dat,w
0179   39F0           00383         andlw       0xF0
017A   3E04           00384         addlw       4
017B   0088           00385         movwf       PORTD
017C   1588           00386         bsf         E                           ;
017D   2???           00387         call        lcdLongDelay        ;__    __
017E   1188           00388         bcf         E                           ;  |__|
017F   0E2A           00389         swapf       dat,w
0180   39F0           00390         andlw       0xF0
0181   3E04           00391         addlw       4
0182   0088           00392         movwf       PORTD
0183   1588           00393         bsf         E                           ;
0184   2???           00394         call        lcdLongDelay        ;__    __
0185   1188           00395         bcf         E                           ;  |__|
0186   0008           00396         return
                      00397 
                      00398 
0187                  00399 Convert
0187   01BB           00400         clrf        run_temp
                      00401 ;save and restore
0188   0835           00402         movf        runtime, w
0189   00BB           00403         movwf       run_temp
018A   3008           00404         movlw       8
018B   00BA           00405         movwf       count_temp
018C   01B9           00406         clrf        huns
018D   01B8           00407         clrf        tens
018E   01B7           00408         clrf        ones
                      00409 
018F                  00410 BCDADD3
                      00411 
018F   3005           00412         movlw       5
0190   0239           00413         subwf       huns, 0
0191   1803           00414         btfsc       STATUS, C
0192   2???           00415         call        ADD3HUNS
                      00416 
0193   3005           00417         movlw       5
0194   0238           00418         subwf       tens, 0
0195   1803           00419         btfsc       STATUS, C
0196   2???           00420         call        ADD3TENS
                      00421 
MPASM 5.54  /USERS/JUDY/MPLABXPROJECTS/INTER   4-8-2014  1:03:34         PAGE 14


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0197   3005           00422         movlw       5
0198   0237           00423         subwf       ones, 0
0199   1803           00424         btfsc       STATUS, C
019A   2???           00425         call        ADD3ONES
                      00426 
019B   03BA           00427         decf        count_temp, 1
019C   1003           00428         bcf         STATUS, C
019D   0DB5           00429         rlf         runtime, 1
019E   0DB7           00430         rlf         ones, 1
019F   1A37           00431         btfsc       ones,4 ;
01A0   2???           00432         call        CARRYONES
01A1   0DB8           00433         rlf         tens, 1
                      00434 
01A2   1A38           00435         btfsc       tens,4 ;
01A3   2???           00436         call        CARRYTENS
01A4   0DB9           00437         rlf         huns,1
01A5   1003           00438         bcf         STATUS, C
                      00439 
01A6   083A           00440         movf        count_temp, 0
01A7   1D03           00441         btfss       STATUS, Z
01A8   2???           00442             goto        BCDADD3
                      00443 
                      00444 
01A9   0839           00445         movf        huns, 0 ; add ASCII Offset
01AA   3E30           00446         addlw       h'30'
01AB   2???           00447         call        WR_DATA
                      00448 
01AC   0838           00449         movf        tens, 0 ; add ASCII Offset
01AD   3E30           00450         addlw       h'30'
01AE   2???           00451         call        WR_DATA
                      00452 
01AF   0837           00453         movf        ones, 0 ; add ASCII Offset
01B0   3E30           00454         addlw       h'30'
01B1   2???           00455         call        WR_DATA
                      00456 
01B2   083B           00457         movf        run_temp, w
01B3   00B5           00458         movwf       runtime
01B4   0008           00459         return
                      00460 
01B5                  00461 ADD3HUNS
01B5   3003           00462         movlw       3
01B6   07B9           00463         addwf       huns,1
01B7   0008           00464         return
                      00465 
01B8                  00466 ADD3TENS
01B8   3003           00467         movlw       3
01B9   07B8           00468         addwf       tens,1
01BA   0008           00469         return
                      00470 
01BB                  00471 ADD3ONES
01BB   3003           00472         movlw       3
01BC   07B7           00473         addwf       ones,1
01BD   0008           00474         return
MPASM 5.54  /USERS/JUDY/MPLABXPROJECTS/INTER   4-8-2014  1:03:34         PAGE 15


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00475 
01BE                  00476 CARRYONES
01BE   1237           00477         bcf         ones, 4
01BF   1403           00478         bsf         STATUS, C
01C0   0008           00479         return
                      00480 
01C1                  00481 CARRYTENS
01C1   1238           00482         bcf         tens, 4
01C2   1403           00483         bsf         STATUS, C
01C3   0008           00484         return
                      00485 
01C4                  00486 Convert1
01C4   01BB           00487     clrf run_temp
                      00488 ;save and restore
01C5   083F           00489     movf signal, w
01C6   00BB           00490     movwf run_temp
01C7   3008           00491     movlw 8
01C8   00BA           00492     movwf count_temp
01C9   01B9           00493     clrf huns
01CA   01B8           00494     clrf tens
01CB   01B7           00495     clrf ones
                      00496 
01CC                  00497 BCDADD31
01CC   3005           00498     movlw 5
01CD   0239           00499     subwf huns, 0
01CE   1803           00500     btfsc STATUS, C
01CF   2???           00501     CALL ADD3HUNS1
                      00502 
01D0   3005           00503     movlw 5
01D1   0238           00504     subwf tens, 0
01D2   1803           00505     btfsc STATUS, C
01D3   2???           00506     CALL ADD3TENS1
                      00507 
01D4   3005           00508     movlw 5
01D5   0237           00509     subwf ones, 0
01D6   1803           00510     btfsc STATUS, C
01D7   2???           00511     CALL ADD3ONES1
                      00512 
01D8   03BA           00513     decf count_temp, 1
01D9   1003           00514     bcf STATUS, C
01DA   0DBF           00515     rlf signal, 1
01DB   0DB7           00516     rlf ones, 1
01DC   1A37           00517     btfsc ones,4 ;
01DD   2???           00518     CALL CARRYONES1
01DE   0DB8           00519     rlf tens, 1
                      00520 
01DF   1A38           00521     btfsc tens,4 ;
01E0   2???           00522     CALL CARRYTENS1
01E1   0DB9           00523     rlf huns,1
01E2   1003           00524     bcf STATUS, C
                      00525 
01E3   083A           00526     movf count_temp, 0
01E4   1D03           00527     btfss STATUS, Z
MPASM 5.54  /USERS/JUDY/MPLABXPROJECTS/INTER   4-8-2014  1:03:34         PAGE 16


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

01E5   2???           00528     GOTO BCDADD31
                      00529 
01E6   0839           00530     movf huns, 0 ; add ASCII Offset
01E7   3E30           00531     addlw h'30'
01E8   2???           00532     call WR_DATA
                      00533 
01E9   0838           00534     movf tens, 0 ; add ASCII Offset
01EA   3E30           00535     addlw h'30'
01EB   2???           00536     call WR_DATA
                      00537 
01EC   0837           00538     movf ones, 0 ; add ASCII Offset
01ED   3E30           00539     addlw h'30'
01EE   2???           00540     call WR_DATA
                      00541 
01EF   083B           00542     movf run_temp, w
01F0   00BF           00543     movwf signal
01F1   0008           00544     RETURN
                      00545 
01F2                  00546 ADD3HUNS1
01F2   3003           00547     movlw 3
01F3   07B9           00548     addwf huns,1
01F4   0008           00549     RETURN
                      00550 
01F5                  00551 ADD3TENS1
01F5   3003           00552     movlw 3
01F6   07B8           00553     addwf tens,1
01F7   0008           00554     RETURN
                      00555 
01F8                  00556 ADD3ONES1
01F8   3003           00557     movlw 3
01F9   07B7           00558     addwf ones,1
01FA   0008           00559     RETURN
                      00560 
01FB                  00561 CARRYONES1
01FB   1237           00562     bcf ones, 4
01FC   1403           00563     bsf STATUS, C
01FD   0008           00564     RETURN
                      00565 
01FE                  00566 CARRYTENS1
01FE   1238           00567     bcf tens, 4
01FF   1403           00568     bsf STATUS, C
0200   0008           00569     RETURN
                      00570 
0201                  00571 lcdLongDelay
0201   3014           00572     movlw d'20'
0202   00AC           00573     movwf lcd_d2
0203                  00574 LLD_LOOP
                      00575     LCD_DELAY
0203   30FF               M         movlw   0xFF
0204   00AB               M         movwf   lcd_d1
0205   0BAB               M         decfsz  lcd_d1,f
0206   2???               M         goto    $-1
0207   0BAC           00576     decfsz lcd_d2,f
MPASM 5.54  /USERS/JUDY/MPLABXPROJECTS/INTER   4-8-2014  1:03:34         PAGE 17


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0208   2???           00577     goto LLD_LOOP
0209   0008           00578     return
                      00579 
                      00580 ;***************************************
                      00581 ; Candle Checking Helper Subrountines
                      00582 ;***************************************
                      00583 
020A                  00584 count_down
                      00585 ;subroutine checks the status of the IR and photoresistor sensor for 9 candles
                      00586 ;stores information for each candle in light1, light2... light9
                      00587 ;stores number of candles that are pass, flickerfail, ledfail, none
                      00588 
                      00589 ;clearing all relevant registers
020A   01AF           00590         clrf    show_data
020B   01B2           00591         clrf    pass
020C   01B3           00592         clrf    flickerfail
020D   01B4           00593         clrf    ledfail
020E   01C0           00594         clrf    none
020F   01C1           00595         clrf    light1
0210   01C2           00596         clrf    light2
0211   01C3           00597         clrf    light3
0212   01C4           00598         clrf    light4
0213   01C5           00599         clrf    light5
0214   01C6           00600         clrf    light6
0215   01C7           00601         clrf    light7
0216   01C8           00602         clrf    light8
0217   01C9           00603         clrf    light9
                      00604 
0218                  00605 count_loop
                      00606 ;going through  every sensor by sending individual multiplexer signals 
                      00607 
                      00608 ;candle 1
0218   3000           00609         movlw   b'00000000' ;loads signal into working register
0219   0085           00610         movwf   PORTA ;moves signal into PORTA
021A   2???           00611         call    Check_Flicker ;calls function to check candle
021B   084A           00612         movf    result_temp, w ;stores result of trial
021C   00C1           00613         movwf   light1
                      00614 
                      00615 ;candle 2
021D   3001           00616         movlw   b'00000001' ;loads signal into working register
021E   0085           00617         movwf   PORTA ;moves signal into PORTA
021F   2???           00618         call    Check_Flicker ;stores result of trial
0220   084A           00619         movf    result_temp, w ;stores result of trial
0221   00C2           00620         movwf   light2
                      00621 
0222   3002           00622         movlw   b'00000010'
0223   0085           00623         movwf   PORTA
0224   2???           00624         call    Check_Flicker
0225   084A           00625         movf    result_temp, w
0226   00C3           00626         movwf   light3
                      00627 
0227   3003           00628         movlw   b'00000011'
0228   0085           00629         movwf   PORTA
MPASM 5.54  /USERS/JUDY/MPLABXPROJECTS/INTER   4-8-2014  1:03:34         PAGE 18


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0229   2???           00630         call    Check_Flicker
022A   084A           00631         movf    result_temp, w
022B   00C4           00632         movwf   light4
                      00633 
022C   3004           00634         movlw   b'00000100'
022D   0085           00635         movwf   PORTA
022E   2???           00636         call    Check_Flicker
022F   084A           00637         movf    result_temp, w
0230   00C5           00638         movwf   light5
                      00639 
0231   3005           00640         movlw   b'00000101'
0232   0085           00641         movwf   PORTA
0233   2???           00642         call    Check_Flicker
0234   084A           00643         movf    result_temp, w
0235   00C6           00644         movwf   light6
                      00645 
0236   3006           00646         movlw   b'00000110'
0237   0085           00647         movwf   PORTA
0238   2???           00648         call    Check_Flicker
0239   084A           00649         movf    result_temp, w
023A   00C7           00650         movwf   light7
                      00651 
023B   3007           00652         movlw   b'00000111'
023C   0085           00653         movwf   PORTA
023D   2???           00654         call    Check_Flicker
023E   084A           00655         movf    result_temp, w
023F   00C8           00656         movwf   light8
                      00657 
0240   3008           00658         movlw   b'00001000'
0241   0085           00659         movwf   PORTA
0242   2???           00660         call    Check_Flicker
0243   084A           00661         movf    result_temp, w
0244   00C9           00662         movwf   light9
0245   0008           00663         return
                      00664 
0246                  00665 Check_Flicker
                      00666 ;checking the IR signal from each candle
0246   01BF           00667         clrf    signal
0247   0805           00668         movf    PORTA, w ;loads signal from portA into w
0248   3910           00669         andlw   b'00010000' ;checks if IR signal is on
0249   1D03           00670         btfss   STATUS, Z
024A   2???           00671                 goto flickertime
                      00672 
                      00673 ;low IR signal: result is N for non existant signal
                      00674     ;store results
Message[305]: Using default destination of 1 (file).
024B   0AC0           00675         incf    none
Message[305]: Using default destination of 1 (file).
024C   0AAF           00676         incf    show_data
024D   3001           00677         movlw   b'00000001' ;0x01 represents no candle
024E   00CA           00678         movwf   result_temp
                      00679     ;display results 
024F   2???           00680         call    Clear_Display
MPASM 5.54  /USERS/JUDY/MPLABXPROJECTS/INTER   4-8-2014  1:03:34         PAGE 19


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00681         BCD_DisplayS show_data
0250   082F               M         movf    show_data,w
0251   390F               M         andlw   0x0f           ; w  = 0000 LLLL
0252   3E30               M         addlw   0x30           ; convert to ASCII
0253   2???               M         call WR_DATA
0254   3020           00682         movlw   " "
0255   2???           00683         call    WR_DATA
0256   304E           00684         movlw   "N"
0257   2???           00685         call    WR_DATA
0258   3020           00686         movlw   " "
0259   2???           00687         call    WR_DATA
025A   2???           00688         goto    Display_results
                      00689 
025B                  00690 flickertime
                      00691 ;checking photo resistor signal for 2 seconds max count: 76
025B   01BF           00692         clrf    signal
025C   2???           00693         call    HalfS
025D   2???           00694         call    HalfS
025E   2???           00695         call    HalfS
025F   2???           00696         call    HalfS
0260   01CA           00697         clrf    result_temp
Message[305]: Using default destination of 1 (file).
0261   0AAF           00698         incf    show_data
0262   3080           00699         movlw   B'10000000' 
0263   2???           00700         call    WR_INS
                      00701 
                      00702 ;checking signal
0264   1F3F           00703         btfss   signal, 6
0265   2???           00704             goto notflickerfail
0266   1DBF           00705         btfss   signal, 3
0267   2???           00706             goto notflickerfail
                      00707 
                      00708 ;result greater than 72 flicker fail candle
                      00709     ;store results
Message[305]: Using default destination of 1 (file).
0268   0AB3           00710         incf    flickerfail
0269   3004           00711         movlw   b'00000100'
026A   00CA           00712         movwf   result_temp
                      00713     ;display results
026B   2???           00714         call    Clear_Display
                      00715         BCD_DisplayS show_data
026C   082F               M         movf    show_data,w
026D   390F               M         andlw   0x0f           ; w  = 0000 LLLL
026E   3E30               M         addlw   0x30           ; convert to ASCII
026F   2???               M         call WR_DATA
0270   3020           00716         movlw   " "
0271   2???           00717         call    WR_DATA
0272   3046           00718         movlw   "F"
0273   2???           00719         call    WR_DATA
0274   3046           00720         movlw   "F"
0275   2???           00721         call    WR_DATA
0276   3020           00722         movlw   " "
0277   2???           00723         call    WR_DATA
MPASM 5.54  /USERS/JUDY/MPLABXPROJECTS/INTER   4-8-2014  1:03:34         PAGE 20


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0278   2???           00724         goto    Display_results
                      00725 
0279                  00726 notflickerfail
                      00727 ;checking signal under 72
0279   083F           00728         movf    signal, w
027A   39F8           00729         andlw   b'11111000'
027B   1D03           00730         btfss   STATUS, Z
027C   2???           00731             goto    goodcandle
                      00732 
                      00733 ;result 7 or under led fail candle
                      00734     ;store results
Message[305]: Using default destination of 1 (file).
027D   0AB4           00735         incf    ledfail
027E   3002           00736         movlw   b'00000010'
027F   00CA           00737         movwf   result_temp
0280   2???           00738         call    Clear_Display
                      00739     ;display results
                      00740         BCD_DisplayS show_data
0281   082F               M         movf    show_data,w
0282   390F               M         andlw   0x0f           ; w  = 0000 LLLL
0283   3E30               M         addlw   0x30           ; convert to ASCII
0284   2???               M         call WR_DATA
0285   3020           00741         movlw   " "
0286   2???           00742         call    WR_DATA
0287   304C           00743         movlw   "L"
0288   2???           00744         call    WR_DATA
0289   3046           00745         movlw   "F"
028A   2???           00746         call    WR_DATA
028B   3020           00747         movlw   " "
028C   2???           00748         call    WR_DATA
028D   2???           00749         goto    Display_results
                      00750 
028E                  00751 goodcandle
                      00752 ;result is between 8 and 72 pass candle
                      00753     ;store results
Message[305]: Using default destination of 1 (file).
028E   0AB2           00754         incf    pass
028F   3008           00755         movlw   b'00001000'
0290   00CA           00756         movwf   result_temp
                      00757     ;display results
0291   2???           00758         call    Clear_Display
                      00759         BCD_DisplayS show_data
0292   082F               M         movf    show_data,w
0293   390F               M         andlw   0x0f           ; w  = 0000 LLLL
0294   3E30               M         addlw   0x30           ; convert to ASCII
0295   2???               M         call WR_DATA
0296   3020           00760         movlw   " "
0297   2???           00761         call    WR_DATA
0298   3050           00762         movlw   "P"
0299   2???           00763         call    WR_DATA
029A   3020           00764         movlw   " "
029B   2???           00765         call    WR_DATA
                      00766 
MPASM 5.54  /USERS/JUDY/MPLABXPROJECTS/INTER   4-8-2014  1:03:34         PAGE 21


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00767 
029C                  00768 Display_results
                      00769 ;subroutine to display results by number of candles in each status
029C   2???           00770         call    Convert1
029D   2???           00771         call    Switch_Lines
                      00772         Display     Trial
  0000                    M                 local   loop_
  0000                    M                 local   end_
029E   01A3               M                 clrf    Table_Counter
029F   0103               M                 clrw
02A0   0823               M loop_   movf    Table_Counter,W
02A1   2???               M                 call    Trial
02A2   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
02A3   1903               M                 btfsc   STATUS,Z
02A4   2???               M                         goto    end_
02A5   2???               M                 call    WR_DATA
02A6   0AA3               M                 incf    Table_Counter,F
02A7   2???               M                 goto    loop_
02A8                      M end_
02A8   30C2           00773         movlw   B'11000010' ;move cursor to Pass
02A9   2???           00774         call    WR_INS
                      00775         BCD_DisplayS pass
02AA   0832               M         movf    pass,w
02AB   390F               M         andlw   0x0f           ; w  = 0000 LLLL
02AC   3E30               M         addlw   0x30           ; convert to ASCII
02AD   2???               M         call WR_DATA
02AE   30C6           00776         movlw   B'11000110' ;move cursor to 46
02AF   2???           00777         call    WR_INS
                      00778         BCD_DisplayS flickerfail
02B0   0833               M         movf    flickerfail,w
02B1   390F               M         andlw   0x0f           ; w  = 0000 LLLL
02B2   3E30               M         addlw   0x30           ; convert to ASCII
02B3   2???               M         call WR_DATA
02B4   30CA           00779         movlw   B'11001010' ;move cursor to position 4A
02B5   2???           00780         call    WR_INS
                      00781         BCD_DisplayS ledfail
02B6   0834               M         movf    ledfail,w
02B7   390F               M         andlw   0x0f           ; w  = 0000 LLLL
02B8   3E30               M         addlw   0x30           ; convert to ASCII
02B9   2???               M         call WR_DATA
02BA   30CD           00782         movlw   B'11001101' ;move crusor to 4E
02BB   2???           00783         call    WR_INS
                      00784         BCD_DisplayS none
02BC   0840               M         movf    none,w
02BD   390F               M         andlw   0x0f           ; w  = 0000 LLLL
02BE   3E30               M         addlw   0x30           ; convert to ASCII
02BF   2???               M         call WR_DATA
02C0   0008           00785         return
                      00786 
02C1                  00787 results_access
                      00788 ;displays status in each candle of the trial based on keypad input 1-9
                      00789 ;returns to main menu from any other key
                      00790 
MPASM 5.54  /USERS/JUDY/MPLABXPROJECTS/INTER   4-8-2014  1:03:34         PAGE 22


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

02C1   3080           00791          movlw      B'10000000' ;move cursor to Pass
02C2   2???           00792          call       WR_INS
                      00793          Display    PMenu
  0000                    M                 local   loop_
  0000                    M                 local   end_
02C3   01A3               M                 clrf    Table_Counter
02C4   0103               M                 clrw
02C5   0823               M loop_   movf    Table_Counter,W
02C6   2???               M                 call    PMenu
02C7   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
02C8   1903               M                 btfsc   STATUS,Z
02C9   2???               M                         goto    end_
02CA   2???               M                 call    WR_DATA
02CB   0AA3               M                 incf    Table_Counter,F
02CC   2???               M                 goto    loop_
02CD                      M end_
                      00794 
02CD   2???           00795          call           HalfS    ;Wait until data is available from the keypad
02CE   1C86           00796          btfss          PORTB,1
02CF   2???           00797          goto           results_access
                      00798 
02D0   0E06           00799          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
02D1   390F           00800          andlw          0x0F
02D2   00A5           00801          movwf      key_temp
                      00802 
02D3                  00803 lightone
02D3   3A00           00804          xorlw      D'0'
02D4   1D03           00805          btfss      STATUS, Z
02D5   2???           00806             goto    lighttwo
02D6   0841           00807          movf       light1, w
02D7   00CA           00808          movwf      result_temp
02D8   2???           00809          call       Switch_Lines
02D9   3031           00810          movlw      "1"
02DA   2???           00811          call       WR_DATA
02DB   303A           00812          movlw      ":"
02DC   2???           00813          call       WR_DATA
02DD   2???           00814          call       display
02DE   2???           00815          call       HalfS
02DF   2???           00816          call       Clear_Display
02E0   2???           00817          goto       results_access
                      00818 
02E1                  00819 lighttwo
02E1   0825           00820         movf key_temp, W
02E2   3A01           00821         xorlw       D'1'
02E3   1D03           00822         btfss       STATUS, Z
02E4   2???           00823             goto    lightthree
02E5   0842           00824         movf        light2, w
02E6   00CA           00825         movwf       result_temp
02E7   2???           00826         call        Switch_Lines
02E8   3032           00827         movlw       "2"
02E9   2???           00828         call        WR_DATA
02EA   303A           00829         movlw       ":"
02EB   2???           00830         call        WR_DATA
MPASM 5.54  /USERS/JUDY/MPLABXPROJECTS/INTER   4-8-2014  1:03:34         PAGE 23


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

02EC   2???           00831         call        display
02ED   2???           00832         call        HalfS
02EE   2???           00833         call        Clear_Display
02EF   2???           00834         goto        results_access
                      00835 
02F0                  00836 lightthree 
02F0   0825           00837         movf key_temp, W
02F1   3A02           00838         xorlw       D'2'
02F2   1D03           00839         btfss       STATUS, Z
02F3   2???           00840             goto    lightfour
02F4   0843           00841         movf        light3, w
02F5   00CA           00842         movwf       result_temp
02F6   2???           00843         call        Switch_Lines
02F7   3033           00844         movlw       "3"
02F8   2???           00845         call        WR_DATA
02F9   303A           00846         movlw       ":"
02FA   2???           00847         call        WR_DATA
02FB   2???           00848         call        display
02FC   2???           00849         call        HalfS
02FD   2???           00850         call        Clear_Display
02FE   2???           00851         goto        results_access
                      00852 
02FF                  00853 lightfour
02FF   0825           00854         movf key_temp, W
0300   3A04           00855         xorlw       D'4'
0301   1D03           00856         btfss       STATUS, Z
0302   2???           00857             goto    lightfive
0303   0844           00858         movf        light4, w
0304   00CA           00859         movwf       result_temp
0305   2???           00860         call        Switch_Lines
0306   3034           00861         movlw       "4"
0307   2???           00862         call        WR_DATA
0308   303A           00863         movlw       ":"
0309   2???           00864         call        WR_DATA
030A   2???           00865         call        display
030B   2???           00866         call        HalfS
030C   2???           00867         call        Clear_Display
030D   2???           00868         goto        results_access
                      00869 
030E                  00870 lightfive
030E   0825           00871         movf key_temp, W
030F   3A05           00872         xorlw       D'5'
0310   1D03           00873         btfss       STATUS, Z
0311   2???           00874             goto    lightsix
0312   0845           00875         movf       light5, w
0313   00CA           00876         movwf      result_temp
0314   2???           00877         call        Switch_Lines
0315   3035           00878         movlw      "5"
0316   2???           00879         call       WR_DATA
0317   303A           00880         movlw      ":"
0318   2???           00881         call       WR_DATA
0319   2???           00882         call       display
031A   2???           00883         call       HalfS
MPASM 5.54  /USERS/JUDY/MPLABXPROJECTS/INTER   4-8-2014  1:03:34         PAGE 24


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

031B   2???           00884         call       Clear_Display
031C   2???           00885         goto       results_access
                      00886 
031D                  00887 lightsix
031D   0825           00888         movf key_temp, W
031E   3A06           00889         xorlw       D'6'
031F   1D03           00890         btfss       STATUS, Z
0320   2???           00891             goto    lightseven
0321   0846           00892         movf       light6, w
0322   00CA           00893         movwf      result_temp
0323   2???           00894         call       Switch_Lines
0324   3036           00895         movlw      "6"
0325   2???           00896         call       WR_DATA
0326   303A           00897         movlw      ":"
0327   2???           00898         call       WR_DATA
0328   2???           00899         call       display
0329   2???           00900         call       HalfS
032A   2???           00901         call       Clear_Display
032B   2???           00902             goto       results_access
                      00903 
032C                  00904 lightseven
032C   0825           00905         movf key_temp, W
032D   3A08           00906         xorlw       D'8'
032E   1D03           00907         btfss       STATUS, Z
032F   2???           00908             goto    lighteight
0330   0847           00909         movf       light7, w
0331   00CA           00910         movwf      result_temp
0332   2???           00911         call    Switch_Lines
0333   3037           00912         movlw      "7"
0334   2???           00913         call       WR_DATA
0335   303A           00914         movlw      ":"
0336   2???           00915         call       WR_DATA
0337   2???           00916         call       display
0338   2???           00917         call       HalfS
0339   2???           00918         call       Clear_Display
033A   2???           00919             goto       results_access
                      00920 
033B                  00921 lighteight
033B   0825           00922         movf key_temp, W
033C   3A09           00923         xorlw      D'9'
033D   1D03           00924         btfss      STATUS, Z
033E   2???           00925             goto    lightnine
033F   0848           00926         movf       light8, w
0340   00CA           00927         movwf      result_temp
0341   2???           00928         call       Switch_Lines
0342   3038           00929         movlw      "8"
0343   2???           00930         call       WR_DATA
0344   303A           00931         movlw      ":"
0345   2???           00932         call       WR_DATA
0346   2???           00933         call       display
0347   2???           00934         call       HalfS
0348   2???           00935         call       Clear_Display
0349   2???           00936         goto       results_access
MPASM 5.54  /USERS/JUDY/MPLABXPROJECTS/INTER   4-8-2014  1:03:34         PAGE 25


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00937 
034A                  00938 lightnine
034A   0825           00939         movf key_temp, W
034B   3A0A           00940         xorlw       D'10'
034C   1D03           00941         btfss       STATUS, Z
034D   2???           00942             goto    next
034E   0849           00943         movf        light9, w
034F   00CA           00944         movwf       result_temp
0350   2???           00945         call        Switch_Lines
0351   3039           00946         movlw       "9"
0352   2???           00947         call        WR_DATA
0353   303A           00948         movlw       ":"
0354   2???           00949         call        WR_DATA
0355   2???           00950         call        display
0356   2???           00951         call        HalfS
0357   2???           00952         call        Clear_Display
0358   2???           00953             goto       results_access
0359                  00954 next
0359   0008           00955          return
                      00956 
                      00957 
035A                  00958 display
                      00959 ;displays the candle staus through one hot encoding method for each status
035A   1C4A           00960         btfss       result_temp, 0
035B   2???           00961             goto    notnone
035C   304E           00962         movlw       "N"
035D   2???           00963         call        WR_DATA
035E   2???           00964         goto        end_display
                      00965 
035F                  00966 notnone
035F   1CCA           00967         btfss       result_temp, 1
0360   2???           00968             goto    notlf
0361   304C           00969         movlw       "L"
0362   2???           00970         call        WR_DATA
0363   3046           00971         movlw       "F"
0364   2???           00972         call        WR_DATA
0365   2???           00973         goto        end_display
                      00974 
0366                  00975 notlf
0366   1D4A           00976         btfss       result_temp, 2
0367   2???           00977             goto    notff
0368   3046           00978         movlw       "F"
0369   2???           00979         call        WR_DATA
036A   3046           00980         movlw       "F"
036B   2???           00981         call        WR_DATA
036C   2???           00982         goto        end_display
036D                  00983 notff
036D   3050           00984         movlw       "P"
036E   2???           00985         call        WR_DATA
                      00986 
036F                  00987 end_display
036F   2???           00988         call        HalfS
0370   0008           00989         return
MPASM 5.54  /USERS/JUDY/MPLABXPROJECTS/INTER   4-8-2014  1:03:34         PAGE 26


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00990 
                      00991 
0371                  00992 Motor_On
                      00993 ;subrountine to turn on candle switches on 2 X 1/8 second pushes
0371   3001           00994         movlw       0x01 ;turn motor on
0372   0087           00995         movwf       PORTC
0373   2???           00996         call        EightS
0374   3000           00997         movlw       0x00 ;turn motor off
0375   0087           00998         movwf       PORTC
0376   2???           00999         call        HalfS
0377   3001           01000         movlw       0x01 ;turn motor on
0378   0087           01001         movwf       PORTC
0379   2???           01002         call        EightS
037A   3000           01003         movlw       0x00 ;turn motor off
037B   0087           01004         movwf       PORTC
037C   2???           01005         call        Clear_Display
037D   0008           01006         return
                      01007 
037E                  01008 Motor_Off
                      01009 ;subrountine to turn on candle switches on 1/8 and 1/4 sec push
037E   3002           01010         movlw       0x02 ;turn motor on
037F   0087           01011         movwf       PORTC
0380   2???           01012         call        QuarterS
0381   3000           01013         movlw       0x00 ;turn motor off
0382   0087           01014         movwf       PORTC
0383   2???           01015         call        HalfS
0384   3002           01016         movlw       0x02 ;turn motor on
0385   0087           01017         movwf       PORTC
0386   2???           01018         call        EightS
0387   3000           01019         movlw       0x00 ;turn motor off
0388   0087           01020         movwf       PORTC
0389   2???           01021         call        HalfS
038A   3001           01022         movlw       0x01 ;turn motor on
038B   0087           01023         movwf       PORTC
038C   2???           01024         call        SixteenS
038D   3000           01025         movlw       0x00 ;turn motor off
038E   0087           01026         movwf       PORTC
038F   2???           01027         call        Clear_Display
0390   0008           01028         return
                      01029 
                      01030 ;***************************************
                      01031 ; EEPROM and Permanent Memory Helper Subrountines
                      01032 ;***************************************
                      01033 
0391                  01034 pmenu_access
                      01035 ;Permenent Memory display subroutine
                      01036 ;allows access to past 9 trials by number in each status 
0391   0186           01037          clrf       PORTB
0392   01A5           01038          clrf       key_temp
0393   2???           01039          call           HalfS    ;Wait until data is available from the keypad
0394   1C86           01040          btfss          PORTB,1
0395   2???           01041          goto           pmenu_access
                      01042 
MPASM 5.54  /USERS/JUDY/MPLABXPROJECTS/INTER   4-8-2014  1:03:34         PAGE 27


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0396   0E06           01043          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
0397   390F           01044          andlw          0x0F
0398   00A5           01045          movwf      key_temp
                      01046 
0399                  01047 check_1
0399   0825           01048         movf        key_temp, W
039A   3A00           01049         xorlw       D'0'
039B   1D03           01050         btfss       STATUS, Z
039C   2???           01051             goto    check_2
039D   2???           01052         call        Clear_Display
039E   3001           01053         movlw       H'01'
039F   00A4           01054         movwf       lcd_tmp
                      01055         BCD_Display lcd_tmp
03A0   0E24               M         swapf lcd_tmp, w
03A1   390F               M         andlw   0x0f           ; Mask upper four bits 0000 HHHH
03A2   3E30               M         addlw   0x30           ; convert to ASCII
03A3   2???               M         call WR_DATA
                          M 
03A4   2???               M         call    lcdLongDelay
03A5   0824               M         movf    lcd_tmp,w
03A6   390F               M         andlw   0x0f           ; w  = 0000 LLLL
03A7   3E30               M         addlw   0x30           ; convert to ASCII
03A8   2???               M         call WR_DATA
03A9   2???           01056         call        Switch_Lines
                      01057         Display     Trial
  0000                    M                 local   loop_
  0000                    M                 local   end_
03AA   01A3               M                 clrf    Table_Counter
03AB   0103               M                 clrw
03AC   0823               M loop_   movf    Table_Counter,W
03AD   2???               M                 call    Trial
03AE   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
03AF   1903               M                 btfsc   STATUS,Z
03B0   2???               M                         goto    end_
03B1   2???               M                 call    WR_DATA
03B2   0AA3               M                 incf    Table_Counter,F
03B3   2???               M                 goto    loop_
03B4                      M end_
03B4   3010           01058         movlw       0x10
03B5   00BC           01059         movwf       ADDRL
03B6   2???           01060         call        display_EE
03B7   2???           01061         call        HalfS
03B8   2???           01062         goto        pmenu_access
                      01063  
                      01064 
03B9                  01065 check_2
03B9   0825           01066         movf        key_temp, W
03BA   3A01           01067         xorlw       D'1'
03BB   1D03           01068         btfss       STATUS, Z
03BC   2???           01069             goto    check_3
03BD   2???           01070         call        Clear_Display
03BE   3002           01071         movlw       H'02'
03BF   00A4           01072         movwf       lcd_tmp
MPASM 5.54  /USERS/JUDY/MPLABXPROJECTS/INTER   4-8-2014  1:03:34         PAGE 28


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01073         BCD_Display lcd_tmp
03C0   0E24               M         swapf lcd_tmp, w
03C1   390F               M         andlw   0x0f           ; Mask upper four bits 0000 HHHH
03C2   3E30               M         addlw   0x30           ; convert to ASCII
03C3   2???               M         call WR_DATA
                          M 
03C4   2???               M         call    lcdLongDelay
03C5   0824               M         movf    lcd_tmp,w
03C6   390F               M         andlw   0x0f           ; w  = 0000 LLLL
03C7   3E30               M         addlw   0x30           ; convert to ASCII
03C8   2???               M         call WR_DATA
03C9   2???           01074         call        Switch_Lines
                      01075         Display     Trial
  0000                    M                 local   loop_
  0000                    M                 local   end_
03CA   01A3               M                 clrf    Table_Counter
03CB   0103               M                 clrw
03CC   0823               M loop_   movf    Table_Counter,W
03CD   2???               M                 call    Trial
03CE   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
03CF   1903               M                 btfsc   STATUS,Z
03D0   2???               M                         goto    end_
03D1   2???               M                 call    WR_DATA
03D2   0AA3               M                 incf    Table_Counter,F
03D3   2???               M                 goto    loop_
03D4                      M end_
03D4   3014           01076         movlw       0x14
03D5   00BC           01077         movwf       ADDRL
03D6   2???           01078         call        display_EE
03D7   2???           01079         call        HalfS
03D8   2???           01080         goto        pmenu_access
                      01081 
03D9                  01082 check_3
03D9   0825           01083         movf        key_temp, W
03DA   3A02           01084         xorlw       D'2'
03DB   1D03           01085         btfss       STATUS, Z
03DC   2???           01086             goto    check_4
03DD   2???           01087         call        Clear_Display
03DE   3003           01088         movlw       D'3'
03DF   00A4           01089         movwf       lcd_tmp
                      01090         BCD_Display lcd_tmp
03E0   0E24               M         swapf lcd_tmp, w
03E1   390F               M         andlw   0x0f           ; Mask upper four bits 0000 HHHH
03E2   3E30               M         addlw   0x30           ; convert to ASCII
03E3   2???               M         call WR_DATA
                          M 
03E4   2???               M         call    lcdLongDelay
03E5   0824               M         movf    lcd_tmp,w
03E6   390F               M         andlw   0x0f           ; w  = 0000 LLLL
03E7   3E30               M         addlw   0x30           ; convert to ASCII
03E8   2???               M         call WR_DATA
03E9   2???           01091         call        Switch_Lines
                      01092         Display     Trial
MPASM 5.54  /USERS/JUDY/MPLABXPROJECTS/INTER   4-8-2014  1:03:34         PAGE 29


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  0000                    M                 local   loop_
  0000                    M                 local   end_
03EA   01A3               M                 clrf    Table_Counter
03EB   0103               M                 clrw
03EC   0823               M loop_   movf    Table_Counter,W
03ED   2???               M                 call    Trial
03EE   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
03EF   1903               M                 btfsc   STATUS,Z
03F0   2???               M                         goto    end_
03F1   2???               M                 call    WR_DATA
03F2   0AA3               M                 incf    Table_Counter,F
03F3   2???               M                 goto    loop_
03F4                      M end_
03F4   3018           01093         movlw       0x18
03F5   00BC           01094         movwf       ADDRL
03F6   2???           01095         call        display_EE
03F7   2???           01096         call        HalfS
03F8   2???           01097         goto        pmenu_access
                      01098 
03F9                  01099 check_4
03F9   0825           01100         movf        key_temp, W
03FA   3A04           01101         xorlw       D'4'
03FB   1D03           01102         btfss       STATUS, Z
03FC   2???           01103             goto    check_5
03FD   2???           01104         call        Clear_Display
03FE   3004           01105         movlw       H'04'
03FF   00A4           01106         movwf       lcd_tmp
                      01107         BCD_Display lcd_tmp
0400   0E24               M         swapf lcd_tmp, w
0401   390F               M         andlw   0x0f           ; Mask upper four bits 0000 HHHH
0402   3E30               M         addlw   0x30           ; convert to ASCII
0403   2???               M         call WR_DATA
                          M 
0404   2???               M         call    lcdLongDelay
0405   0824               M         movf    lcd_tmp,w
0406   390F               M         andlw   0x0f           ; w  = 0000 LLLL
0407   3E30               M         addlw   0x30           ; convert to ASCII
0408   2???               M         call WR_DATA
0409   2???           01108         call        Switch_Lines
                      01109         Display     Trial
  0000                    M                 local   loop_
  0000                    M                 local   end_
040A   01A3               M                 clrf    Table_Counter
040B   0103               M                 clrw
040C   0823               M loop_   movf    Table_Counter,W
040D   2???               M                 call    Trial
040E   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
040F   1903               M                 btfsc   STATUS,Z
0410   2???               M                         goto    end_
0411   2???               M                 call    WR_DATA
0412   0AA3               M                 incf    Table_Counter,F
0413   2???               M                 goto    loop_
0414                      M end_
MPASM 5.54  /USERS/JUDY/MPLABXPROJECTS/INTER   4-8-2014  1:03:34         PAGE 30


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0414   301C           01110         movlw       0x1c
0415   00BC           01111         movwf       ADDRL
0416   2???           01112         call        display_EE
0417   2???           01113         call        HalfS
0418   2???           01114         goto        pmenu_access
                      01115 
0419                  01116 check_5
0419   0825           01117         movf        key_temp, W
041A   3A05           01118         xorlw       D'5'
041B   1D03           01119         btfss       STATUS, Z
041C   2???           01120             goto    check_6
041D   2???           01121         call        Clear_Display
041E   3005           01122         movlw       H'05'
041F   00A4           01123         movwf       lcd_tmp
                      01124         BCD_Display lcd_tmp
0420   0E24               M         swapf lcd_tmp, w
0421   390F               M         andlw   0x0f           ; Mask upper four bits 0000 HHHH
0422   3E30               M         addlw   0x30           ; convert to ASCII
0423   2???               M         call WR_DATA
                          M 
0424   2???               M         call    lcdLongDelay
0425   0824               M         movf    lcd_tmp,w
0426   390F               M         andlw   0x0f           ; w  = 0000 LLLL
0427   3E30               M         addlw   0x30           ; convert to ASCII
0428   2???               M         call WR_DATA
0429   2???           01125         call        Switch_Lines
                      01126         Display     Trial
  0000                    M                 local   loop_
  0000                    M                 local   end_
042A   01A3               M                 clrf    Table_Counter
042B   0103               M                 clrw
042C   0823               M loop_   movf    Table_Counter,W
042D   2???               M                 call    Trial
042E   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
042F   1903               M                 btfsc   STATUS,Z
0430   2???               M                         goto    end_
0431   2???               M                 call    WR_DATA
0432   0AA3               M                 incf    Table_Counter,F
0433   2???               M                 goto    loop_
0434                      M end_
0434   3020           01127         movlw       0x20
0435   00BC           01128         movwf       ADDRL
0436   2???           01129         call        display_EE
0437   2???           01130         call        HalfS
0438   2???           01131         goto        pmenu_access
                      01132 
0439                  01133 check_6
0439   0825           01134         movf        key_temp, W
043A   3A06           01135         xorlw       D'6'
043B   1D03           01136         btfss       STATUS, Z
043C   2???           01137             goto    check_7
043D   2???           01138         call        Clear_Display
043E   3006           01139         movlw       H'06'
MPASM 5.54  /USERS/JUDY/MPLABXPROJECTS/INTER   4-8-2014  1:03:34         PAGE 31


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

043F   00A4           01140         movwf       lcd_tmp
                      01141         BCD_Display lcd_tmp
0440   0E24               M         swapf lcd_tmp, w
0441   390F               M         andlw   0x0f           ; Mask upper four bits 0000 HHHH
0442   3E30               M         addlw   0x30           ; convert to ASCII
0443   2???               M         call WR_DATA
                          M 
0444   2???               M         call    lcdLongDelay
0445   0824               M         movf    lcd_tmp,w
0446   390F               M         andlw   0x0f           ; w  = 0000 LLLL
0447   3E30               M         addlw   0x30           ; convert to ASCII
0448   2???               M         call WR_DATA
0449   2???           01142         call        Switch_Lines
                      01143         Display     Trial
  0000                    M                 local   loop_
  0000                    M                 local   end_
044A   01A3               M                 clrf    Table_Counter
044B   0103               M                 clrw
044C   0823               M loop_   movf    Table_Counter,W
044D   2???               M                 call    Trial
044E   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
044F   1903               M                 btfsc   STATUS,Z
0450   2???               M                         goto    end_
0451   2???               M                 call    WR_DATA
0452   0AA3               M                 incf    Table_Counter,F
0453   2???               M                 goto    loop_
0454                      M end_
0454   3024           01144         movlw       0x24
0455   00BC           01145         movwf       ADDRL
0456   2???           01146         call        display_EE
0457   2???           01147         call        HalfS
0458   2???           01148         goto        pmenu_access
                      01149 
0459                  01150 check_7
0459   0825           01151         movf        key_temp, W
045A   3A08           01152         xorlw       D'8'
045B   1D03           01153         btfss       STATUS, Z
045C   2???           01154             goto    check_8
045D   2???           01155         call        Clear_Display
045E   3007           01156         movlw       H'07'
045F   00A4           01157         movwf       lcd_tmp
                      01158         BCD_Display lcd_tmp
0460   0E24               M         swapf lcd_tmp, w
0461   390F               M         andlw   0x0f           ; Mask upper four bits 0000 HHHH
0462   3E30               M         addlw   0x30           ; convert to ASCII
0463   2???               M         call WR_DATA
                          M 
0464   2???               M         call    lcdLongDelay
0465   0824               M         movf    lcd_tmp,w
0466   390F               M         andlw   0x0f           ; w  = 0000 LLLL
0467   3E30               M         addlw   0x30           ; convert to ASCII
0468   2???               M         call WR_DATA
0469   2???           01159         call        Switch_Lines
MPASM 5.54  /USERS/JUDY/MPLABXPROJECTS/INTER   4-8-2014  1:03:34         PAGE 32


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01160         Display     Trial
  0000                    M                 local   loop_
  0000                    M                 local   end_
046A   01A3               M                 clrf    Table_Counter
046B   0103               M                 clrw
046C   0823               M loop_   movf    Table_Counter,W
046D   2???               M                 call    Trial
046E   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
046F   1903               M                 btfsc   STATUS,Z
0470   2???               M                         goto    end_
0471   2???               M                 call    WR_DATA
0472   0AA3               M                 incf    Table_Counter,F
0473   2???               M                 goto    loop_
0474                      M end_
0474   3028           01161         movlw       0x28
0475   00BC           01162         movwf       ADDRL
0476   2???           01163         call        display_EE
0477   2???           01164         call        HalfS
0478   2???           01165         goto        pmenu_access
                      01166 
0479                  01167 check_8
0479   0825           01168         movf        key_temp, W
047A   3A09           01169         xorlw       D'9'
047B   1D03           01170         btfss       STATUS, Z
047C   2???           01171             goto    check_9
047D   2???           01172         call        Clear_Display
047E   3008           01173         movlw       H'08'
047F   00A4           01174         movwf       lcd_tmp
                      01175         BCD_Display lcd_tmp
0480   0E24               M         swapf lcd_tmp, w
0481   390F               M         andlw   0x0f           ; Mask upper four bits 0000 HHHH
0482   3E30               M         addlw   0x30           ; convert to ASCII
0483   2???               M         call WR_DATA
                          M 
0484   2???               M         call    lcdLongDelay
0485   0824               M         movf    lcd_tmp,w
0486   390F               M         andlw   0x0f           ; w  = 0000 LLLL
0487   3E30               M         addlw   0x30           ; convert to ASCII
0488   2???               M         call WR_DATA
0489   2???           01176         call        Switch_Lines
                      01177         Display     Trial
  0000                    M                 local   loop_
  0000                    M                 local   end_
048A   01A3               M                 clrf    Table_Counter
048B   0103               M                 clrw
048C   0823               M loop_   movf    Table_Counter,W
048D   2???               M                 call    Trial
048E   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
048F   1903               M                 btfsc   STATUS,Z
0490   2???               M                         goto    end_
0491   2???               M                 call    WR_DATA
0492   0AA3               M                 incf    Table_Counter,F
0493   2???               M                 goto    loop_
MPASM 5.54  /USERS/JUDY/MPLABXPROJECTS/INTER   4-8-2014  1:03:34         PAGE 33


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0494                      M end_
0494   302C           01178         movlw       0x2c
0495   00BC           01179         movwf       ADDRL
0496   2???           01180         call        display_EE
0497   2???           01181         call        HalfS
0498   2???           01182         goto        pmenu_access
                      01183 
0499                  01184 check_9
0499   0825           01185         movf        key_temp, W
049A   3A0A           01186         xorlw       D'10'
049B   1D03           01187         btfss       STATUS, Z
049C   2???           01188                 goto continue
049D   2???           01189         call        Clear_Display
049E   3009           01190         movlw       H'09'
049F   00A4           01191         movwf       lcd_tmp
                      01192         BCD_Display lcd_tmp
04A0   0E24               M         swapf lcd_tmp, w
04A1   390F               M         andlw   0x0f           ; Mask upper four bits 0000 HHHH
04A2   3E30               M         addlw   0x30           ; convert to ASCII
04A3   2???               M         call WR_DATA
                          M 
04A4   2???               M         call    lcdLongDelay
04A5   0824               M         movf    lcd_tmp,w
04A6   390F               M         andlw   0x0f           ; w  = 0000 LLLL
04A7   3E30               M         addlw   0x30           ; convert to ASCII
04A8   2???               M         call WR_DATA
04A9   2???           01193         call        Switch_Lines
                      01194         Display     Trial
  0000                    M                 local   loop_
  0000                    M                 local   end_
04AA   01A3               M                 clrf    Table_Counter
04AB   0103               M                 clrw
04AC   0823               M loop_   movf    Table_Counter,W
04AD   2???               M                 call    Trial
04AE   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
04AF   1903               M                 btfsc   STATUS,Z
04B0   2???               M                         goto    end_
04B1   2???               M                 call    WR_DATA
04B2   0AA3               M                 incf    Table_Counter,F
04B3   2???               M                 goto    loop_
04B4                      M end_
04B4   3030           01195         movlw       0x30
04B5   00BC           01196         movwf       ADDRL
04B6   2???           01197         call        display_EE
04B7   2???           01198         call        HalfS
04B8   2???           01199         goto        pmenu_access
                      01200 
04B9                  01201 continue
04B9   2???           01202         call        Clear_Display
04BA   0008           01203         return
                      01204 
04BB                  01205 display_EE
                      01206 ;Reads the data from EEPROM and displays on the LCD
MPASM 5.54  /USERS/JUDY/MPLABXPROJECTS/INTER   4-8-2014  1:03:34         PAGE 34


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01207 ;Will display "?" if no trial has been recorded in EEPROM position
04BB   2???           01208         call        read_EE
04BC   30C2           01209         movlw       B'11000010' ;move cursor to Pass
04BD   2???           01210         call        WR_INS
                      01211         BCD_DisplayS DATAL
04BE   083D               M         movf    DATAL,w
04BF   390F               M         andlw   0x0f           ; w  = 0000 LLLL
04C0   3E30               M         addlw   0x30           ; convert to ASCII
04C1   2???               M         call WR_DATA
04C2   30C6           01212         movlw       B'11000110' ;move cursor to 46
04C3   2???           01213         call        WR_INS
Message[305]: Using default destination of 1 (file).
04C4   0ABC           01214         incf        ADDRL
04C5   2???           01215         call        read_EE
                      01216         BCD_DisplayS DATAL
04C6   083D               M         movf    DATAL,w
04C7   390F               M         andlw   0x0f           ; w  = 0000 LLLL
04C8   3E30               M         addlw   0x30           ; convert to ASCII
04C9   2???               M         call WR_DATA
04CA   30CA           01217         movlw       B'11001010' ;move cursor to position 4A
04CB   2???           01218         call        WR_INS
Message[305]: Using default destination of 1 (file).
04CC   0ABC           01219         incf        ADDRL
04CD   2???           01220         call        read_EE
                      01221         BCD_DisplayS DATAL
04CE   083D               M         movf    DATAL,w
04CF   390F               M         andlw   0x0f           ; w  = 0000 LLLL
04D0   3E30               M         addlw   0x30           ; convert to ASCII
04D1   2???               M         call WR_DATA
04D2   30CD           01222         movlw       B'11001101' ;move cursor to position 4A
04D3   2???           01223         call        WR_INS
Message[305]: Using default destination of 1 (file).
04D4   0ABC           01224         incf        ADDRL
04D5   2???           01225         call        read_EE
                      01226         BCD_DisplayS DATAL
04D6   083D               M         movf    DATAL,w
04D7   390F               M         andlw   0x0f           ; w  = 0000 LLLL
04D8   3E30               M         addlw   0x30           ; convert to ASCII
04D9   2???               M         call WR_DATA
04DA   0008           01227         return
                      01228 
04DB                  01229 write_EE
                      01230 ;function to write data to EEPROM: writes data VALUEL to address ADDRL
04DB   1283 1303      01231         banksel     ADDRL
04DD   083C           01232         movf        ADDRL, W ; write address of desired program memory location
04DE   1283 1703      01233         banksel     EEADR
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
04E0   008D           01234         movwf       EEADR
04E1   1283 1303      01235         banksel     VALUEL
04E3   083E           01236         movf        VALUEL, W ; write value to program at desired memory locqation
04E4   1283 1703      01237         banksel     EEDATA
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
04E6   008C           01238         movwf       EEDATA
MPASM 5.54  /USERS/JUDY/MPLABXPROJECTS/INTER   4-8-2014  1:03:34         PAGE 35


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

04E7   1683           01239         bsf         STATUS, RP0
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
04E8   178C           01240         bsf         EECON1, EEPGD
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
04E9   150C           01241         bsf         EECON1, WREN
04EA   138B           01242         bcf         INTCON, GIE
                      01243 
04EB   3055           01244         movlw       0x55
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
04EC   008D           01245         movwf       EECON2
04ED   30AA           01246         movlw       0xaa
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
04EE   008D           01247         movwf       EECON2 ;
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
04EF   148C           01248         bsf         EECON1, WR ; start write operation
04F0   0000           01249         nop ;wait for micro
04F1   0000           01250         nop
                      01251 
04F2   178B           01252         bsf         INTCON, GIE ;re-enable interrupts
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
04F3   110C           01253         bcf         EECON1, WREN ;disables writes
04F4   1283           01254         bcf         STATUS, RP0
04F5   1303           01255         bcf         STATUS, RP1
04F6   0008           01256         return
                      01257 
04F7                  01258 write_EES
                      01259 ;function to write data to EEPROM: writes to address ADDRL from any register
04F7   1283 1303      01260         banksel     ADDRL
04F9   083C           01261         movf        ADDRL, W ; write address of desired program memory location
04FA   1283 1703      01262         banksel     EEADR
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
04FC   008D           01263         movwf       EEADR
                      01264 
04FD   1683           01265         bsf         STATUS, RP0
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
04FE   178C           01266         bsf         EECON1, EEPGD
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
04FF   150C           01267         bsf         EECON1, WREN
0500   138B           01268         bcf         INTCON, GIE
                      01269 
0501   3055           01270         movlw       0x55
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0502   008D           01271         movwf       EECON2
0503   30AA           01272         movlw       0xaa
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0504   008D           01273         movwf       EECON2 ;
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0505   148C           01274         bsf         EECON1, WR ; start write operation
0506   0000           01275         nop ;wait for micro
0507   0000           01276         nop
                      01277 
0508   178B           01278         bsf         INTCON, GIE ;re-enable interrupts
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
MPASM 5.54  /USERS/JUDY/MPLABXPROJECTS/INTER   4-8-2014  1:03:34         PAGE 36


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0509   110C           01279         bcf         EECON1, WREN ;disables writes
050A   1283           01280         bcf         STATUS, RP0
050B   1303           01281         bcf         STATUS, RP1
050C   0008           01282         return
                      01283 
050D                  01284 read_EE
                      01285 ;reads infromation from EEPROM into DATAL
050D   1283 1303      01286         banksel     ADDRL
050F   083C           01287         movf        ADDRL, W
0510   1283 1703      01288         banksel     EEADR
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0512   008D           01289         movwf       EEADR
0513   1683 1703      01290         banksel     EECON1
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0515   178C           01291         bsf         EECON1, EEPGD
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0516   140C           01292         bsf         EECON1, RD
0517   0000           01293         nop
0518   0000           01294         nop
0519   1283           01295         bcf         STATUS, RP0
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
051A   080C           01296         movf        EEDATA, W
051B   1283 1303      01297         banksel     DATAL
051D   00BD           01298         movwf       DATAL
051E   1283           01299         bcf         STATUS, RP0
051F   1303           01300         bcf         STATUS, RP1
0520   0008           01301         return
                      01302 
0521                  01303 shift_EE
                      01304 ;shifts each trial information down 4 spots to make room for the next trial
                      01305  ;shift 8 to 9
0521   302C           01306         movlw       0x2c
0522   00CB           01307         movwf       temp1
0523   3030           01308         movlw       0x30
0524   00CC           01309         movwf       temp2
0525   2???           01310         call        help_shift_EE
                      01311 ;shift 7 to 8
0526   3028           01312         movlw       0x28
0527   00CB           01313         movwf       temp1
0528   302C           01314         movlw       0x2c
0529   00CC           01315         movwf       temp2
052A   2???           01316         call        help_shift_EE
                      01317 ;shift 6 to 7
052B   3024           01318         movlw       0x24
052C   00CB           01319         movwf       temp1
052D   3028           01320         movlw       0x28
052E   00CC           01321         movwf       temp2
052F   2???           01322         call        help_shift_EE
                      01323 ;shift 5 to 6
0530   3020           01324         movlw       0x20
0531   00CB           01325         movwf       temp1
0532   3024           01326         movlw       0x24
0533   00CC           01327         movwf       temp2
MPASM 5.54  /USERS/JUDY/MPLABXPROJECTS/INTER   4-8-2014  1:03:34         PAGE 37


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0534   2???           01328         call        help_shift_EE
                      01329 ;shift 4 to 5
0535   301C           01330         movlw       0x1c
0536   00CB           01331         movwf       temp1
0537   3020           01332         movlw       0x20
0538   00CC           01333         movwf       temp2
0539   2???           01334         call        help_shift_EE
                      01335 ;shift 3 to 4
053A   3018           01336         movlw       0x18
053B   00CB           01337         movwf       temp1
053C   301C           01338         movlw       0x1c
053D   00CC           01339         movwf       temp2
053E   2???           01340         call        help_shift_EE
                      01341 ;shift 2 to 3
053F   3014           01342         movlw       0x14
0540   00CB           01343         movwf       temp1
0541   3018           01344         movlw       0x18
0542   00CC           01345         movwf       temp2
0543   2???           01346         call        help_shift_EE
                      01347 ;shift 1 to 2
0544   3010           01348         movlw       0x10
0545   00CB           01349         movwf       temp1
0546   3014           01350         movlw       0x14
0547   00CC           01351         movwf       temp2
0548   2???           01352         call        help_shift_EE
0549   0008           01353         return
                      01354 
054A                  01355 help_shift_EE ;subrountine to shift block of 4 starting of temp1 into temp2
054A   1283 1303      01356         banksel     DATAL 
054C   084B           01357         movf        temp1, w ;moves the address from temp1 to working
054D   00BC           01358         movwf       ADDRL ;moves address to ADDRL
054E   2???           01359         call        read_EE ;reads value at temp1 address into DATAL
054F   084C           01360         movf        temp2, w ;moves the destination address from temp2
0550   00BC           01361         movwf       ADDRL ;moves destination address to ADDRL
0551   2???           01362         call        write_EES ;writes data in DATAL into address at temp2
                      01363 
Message[305]: Using default destination of 1 (file).
0552   0ACB           01364         incf        temp1 ;moves to next address after temp 1
0553   084B           01365         movf        temp1, w
0554   00BC           01366         movwf       ADDRL
0555   2???           01367         call        read_EE
Message[305]: Using default destination of 1 (file).
0556   0ACC           01368         incf        temp2 ;moves to next address after temp 2
0557   084C           01369         movf        temp2, w
0558   00BC           01370         movwf       ADDRL
0559   2???           01371         call        write_EES
                      01372 
Message[305]: Using default destination of 1 (file).
055A   0ACB           01373         incf        temp1
055B   084B           01374         movf        temp1,w
055C   00BC           01375         movwf       ADDRL
055D   2???           01376         call        read_EE
Message[305]: Using default destination of 1 (file).
MPASM 5.54  /USERS/JUDY/MPLABXPROJECTS/INTER   4-8-2014  1:03:34         PAGE 38


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

055E   0ACC           01377         incf        temp2
055F   084C           01378         movf        temp2, w
0560   00BC           01379         movwf       ADDRL
0561   2???           01380         call        write_EES
                      01381 
Message[305]: Using default destination of 1 (file).
0562   0ACB           01382         incf        temp1
0563   084B           01383         movf        temp1,w
0564   00BC           01384         movwf       ADDRL
0565   2???           01385         call        read_EE
Message[305]: Using default destination of 1 (file).
0566   0ACC           01386         incf        temp2
0567   084C           01387         movf        temp2, w
0568   00BC           01388         movwf       ADDRL
0569   2???           01389         call        write_EES
056A   0008           01390     return
                      01391 
                      01392 ;***************************************
                      01393 ; Real Time Clock Helper Subrountines
                      01394 ;***************************************
                      01395 
056B                  01396 show_RTC
                      01397 ;subrountine to display real time clock by seconds based on sample code
                      01398                 ;clear LCD screen
056B   3001           01399                 movlw       b'00000001'
056C   2???           01400                 call        WR_INS
                      01401 
                      01402                 ;Get year
056D   3032           01403                 movlw       "2"                         ;First line shows 20**/**/**
056E   2???           01404                 call        WR_DATA
056F   3030           01405                 movlw       "0"
0570   2???           01406                 call        WR_DATA
                      01407 
                      01408                 rtc_read        0x06            ;Read Address 0x06 from DS1307---year
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
0571   3006               M         movlw   0x06
0572   1283 1303          M         banksel 0x73
0574   00F3               M         movwf   0x73
0575   2???               M         call    read_rtc
0576   1283 1303          M         banksel 0x75
0578   0875               M         movf    0x75,w
0579   2???               M         call    rtc_convert   
057A   0877           01409                 movfw       0x77
057B   2???           01410                 call        WR_DATA
057C   0878           01411                 movfw       0x78
057D   2???           01412                 call        WR_DATA
057E   302F           01413                 movlw       "/"
057F   2???           01414                 call        WR_DATA
MPASM 5.54  /USERS/JUDY/MPLABXPROJECTS/INTER   4-8-2014  1:03:34         PAGE 39


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01415 
                      01416                 ;Get month
                      01417                 rtc_read        0x05            ;Read Address 0x05 from DS1307---month
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
0580   3005               M         movlw   0x05
0581   1283 1303          M         banksel 0x73
0583   00F3               M         movwf   0x73
0584   2???               M         call    read_rtc
0585   1283 1303          M         banksel 0x75
0587   0875               M         movf    0x75,w
0588   2???               M         call    rtc_convert   
0589   0877           01418                 movfw       0x77
058A   2???           01419                 call        WR_DATA
058B   0878           01420                 movfw       0x78
058C   2???           01421                 call        WR_DATA
058D   302F           01422                 movlw       "/"
058E   2???           01423                 call        WR_DATA
                      01424 
                      01425                 ;Get day
                      01426                 rtc_read        0x04            ;Read Address 0x04 from DS1307---day
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
058F   3004               M         movlw   0x04
0590   1283 1303          M         banksel 0x73
0592   00F3               M         movwf   0x73
0593   2???               M         call    read_rtc
0594   1283 1303          M         banksel 0x75
0596   0875               M         movf    0x75,w
0597   2???               M         call    rtc_convert   
0598   0877           01427                 movfw       0x77
0599   2???           01428                 call        WR_DATA
059A   0878           01429                 movfw       0x78
059B   2???           01430                 call        WR_DATA
059C   30C0           01431                 movlw       B'11000000'         ;Next line displays (hour):(min):(sec) **:**:**
059D   2???           01432                 call        WR_INS
                      01433 
059E                  01434 Refresh
059E   30C0           01435         movlw       B'11000000' ;move cursor to position H?4B?
059F   2???           01436         call        WR_INS
                      01437 
                      01438                 ;Get hour
                      01439                 rtc_read        0x02            ;Read Address 0x02 from DS1307---hour
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
MPASM 5.54  /USERS/JUDY/MPLABXPROJECTS/INTER   4-8-2014  1:03:34         PAGE 40


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
05A0   3002               M         movlw   0x02
05A1   1283 1303          M         banksel 0x73
05A3   00F3               M         movwf   0x73
05A4   2???               M         call    read_rtc
05A5   1283 1303          M         banksel 0x75
05A7   0875               M         movf    0x75,w
05A8   2???               M         call    rtc_convert   
05A9   0877           01440                 movfw       0x77
05AA   2???           01441                 call        WR_DATA
05AB   0878           01442                 movfw       0x78
05AC   2???           01443                 call        WR_DATA
05AD   303A           01444                 movlw       ":"
05AE   2???           01445                 call        WR_DATA
                      01446                 ;Get minute
                      01447                 rtc_read        0x01            ;Read Address 0x01 from DS1307---min
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
05AF   3001               M         movlw   0x01
05B0   1283 1303          M         banksel 0x73
05B2   00F3               M         movwf   0x73
05B3   2???               M         call    read_rtc
05B4   1283 1303          M         banksel 0x75
05B6   0875               M         movf    0x75,w
05B7   2???               M         call    rtc_convert   
05B8   0877           01448                 movfw       0x77
05B9   2???           01449                 call        WR_DATA
05BA   0878           01450                 movfw       0x78
05BB   2???           01451                 call        WR_DATA
05BC   303A           01452                 movlw       ":"
05BD   2???           01453                 call        WR_DATA
                      01454 
                      01455                 ;Get seconds
                      01456                 rtc_read        0x00            ;Read Address 0x00 from DS1307---seconds
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
05BE   3000               M         movlw   0x00
05BF   1283 1303          M         banksel 0x73
05C1   00F3               M         movwf   0x73
05C2   2???               M         call    read_rtc
05C3   1283 1303          M         banksel 0x75
05C5   0875               M         movf    0x75,w
MPASM 5.54  /USERS/JUDY/MPLABXPROJECTS/INTER   4-8-2014  1:03:34         PAGE 41


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

05C6   2???               M         call    rtc_convert   
05C7   0877           01457                 movfw       0x77
05C8   2???           01458                 call        WR_DATA
05C9   0878           01459                 movfw       0x78
05CA   2???           01460                 call        WR_DATA
                      01461 
05CB   2???           01462                 call        HalfS                       ;Delay for exactly one seconds and read DS1307 a
                            gain
05CC   2???           01463         call        HalfS    ;Wait until data is available from the keypad
05CD   1C86           01464         btfss       PORTB,1
05CE   2???           01465             goto        Refresh
05CF   0008           01466         return
                      01467 
                      01468 ;***************************************
                      01469 ; Delay Helper Subrountines
                      01470 ;***************************************
                      01471 
05D0                  01472 HalfS
                      01473 ;half second delay loop 
  0000                01474         local   HalfS_0
05D0   3088           01475         movlw       0x88
05D1   00A0           01476         movwf       COUNTH
05D2   30BD           01477         movlw       0xBD
05D3   00A1           01478         movwf       COUNTM
05D4   3003           01479         movlw       0x03
05D5   00A2           01480         movwf       COUNTL
                      01481 
05D6                  01482 HalfS_0
05D6   0BA0           01483         decfsz      COUNTH, f
05D7   2???           01484             goto        $+2
05D8   0BA1           01485         decfsz      COUNTM, f
05D9   2???           01486             goto        $+2
05DA   0BA2           01487         decfsz      COUNTL, f
05DB   2???           01488             goto    HalfS_0
05DC   2???           01489             goto $+1
05DD   0000           01490         nop
05DE   0000           01491         nop
05DF   0008           01492                 return
                      01493 
05E0                  01494 QuarterS
                      01495 ;quarter second delay loop
  0000                01496         local       QuarterS_0
05E0   3044           01497         movlw       0x44
05E1   00A0           01498         movwf       COUNTH
05E2   304F           01499         movlw       0x4F
05E3   00A1           01500         movwf       COUNTM
05E4   3003           01501         movlw       0x03
05E5   00A2           01502         movwf       COUNTL
                      01503 
05E6                  01504 QuarterS_0
05E6   0BA0           01505         decfsz      COUNTH, f
05E7   2???           01506             goto        $+2
05E8   0BA1           01507         decfsz      COUNTM, f
MPASM 5.54  /USERS/JUDY/MPLABXPROJECTS/INTER   4-8-2014  1:03:34         PAGE 42


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

05E9   2???           01508             goto        $+2
05EA   0BA2           01509         decfsz      COUNTL, f
05EB   2???           01510             goto        QuarterS_0
05EC   2???           01511             goto        $+1
05ED   0000           01512             nop
05EE   0000           01513             nop
05EF   0008           01514                 return
                      01515 
05F0                  01516 EightS
                      01517 ;eighth second delay loop
  0000                01518         local       EightS_0
05F0   3020           01519         movlw       0x20
05F1   00A0           01520         movwf       COUNTH
05F2   3020           01521         movlw       0x20
05F3   00A1           01522         movwf       COUNTM
05F4   3003           01523         movlw       0x03
05F5   00A2           01524         movwf       COUNTL
                      01525 
05F6                  01526 EightS_0
05F6   0BA0           01527         decfsz      COUNTH, f
05F7   2???           01528             goto        $+2
05F8   0BA1           01529         decfsz      COUNTM, f
05F9   2???           01530             goto        $+2
05FA   0BA2           01531         decfsz      COUNTL, f
05FB   2???           01532             goto   EightS_0
05FC   2???           01533             goto        $+1
05FD   0000           01534         nop
05FE   0000           01535         nop
05FF   0008           01536                 return
                      01537 
0600                  01538 SixteenS
                      01539 ;eighth second delay loop
  0000                01540         local       SixteenS_0
0600   3010           01541         movlw       0x10
0601   00A0           01542         movwf       COUNTH
0602   3020           01543         movlw       0x20
0603   00A1           01544         movwf       COUNTM
0604   3002           01545         movlw       0x02
0605   00A2           01546         movwf       COUNTL
                      01547 
0606                  01548 SixteenS_0
0606   0BA0           01549         decfsz      COUNTH, f
0607   2???           01550             goto        $+2
0608   0BA1           01551         decfsz      COUNTM, f
0609   2???           01552             goto        $+2
060A   0BA2           01553         decfsz      COUNTL, f
060B   2???           01554             goto   SixteenS_0
060C   2???           01555             goto        $+1
060D   0000           01556         nop
060E   0000           01557         nop
060F   0008           01558                 return
                      01559 
                      01560 ;***************************************
MPASM 5.54  /USERS/JUDY/MPLABXPROJECTS/INTER   4-8-2014  1:03:34         PAGE 43


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01561 ; Interrupt Service Rountine
                      01562 ;***************************************
                      01563 
0610                  01564 ISR       ;saving registers
0610   00B0           01565         movwf       w_temp
0611   0803           01566         movf        STATUS, w
0612   00B1           01567         movwf       status_temp
                      01568 
0613                  01569 Timer
0613   110B           01570         bcf         INTCON, 2 ;clears interrupt bit
0614   0BB6           01571         decfsz      timercount, f ;decrements value for timer
0615   2???           01572             goto        addsignal ;continues to polling
                      01573 
                      01574         ;decreamented timercount to 0 increment runtime
0616   0AB5           01575         incf        runtime, f
0617   3026           01576         movlw       D'38'
0618   00B6           01577         movwf       timercount
0619   2???           01578         goto        finish
                      01579 
061A                  01580 addsignal
061A   1283 1303      01581         banksel     PORTB ;go to PORTB
061C   1C06           01582         btfss       PORTB, 0 ;if RB0 is 0 do not increment signal count
061D   2???           01583             goto    finish
Message[305]: Using default destination of 1 (file).
061E   0ABF           01584         incf        signal ;increment signal count if RB0 is 1
                      01585 
061F                  01586 finish
061F   0831           01587         movf        status_temp, w
0620   0083           01588         movwf       STATUS
0621   0EB0           01589         swapf       w_temp, f
0622   0E30           01590         swapf       w_temp, w
0623   0009           01591         retfie
                      01592 
                      01593 
                      01594 
                      01595 ;***************************************
                      01596 ; RS232 PC Interface Helper Rountines
                      01597 ;***************************************
0624                  01598 pc_init
0624   1683           01599         bsf       STATUS,RP0     ; select bank 1
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0625   0188           01600         clrf      TRISD
                      01601 
                      01602         ;Setup USART for RS232
0626   300F           01603         movlw     d'15'          ; BAUD rate 9600, assuming 10MHz oscillator
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0627   0099           01604         movwf     SPBRG
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0628   0198           01605         clrf      TXSTA          ; 8 bits data ,no,1 stop
                      01606 
0629   1283           01607         bcf       STATUS,RP0     ; select bank 0
062A   1798           01608         bsf       RCSTA,SPEN     ; Asynchronous serial port enable
062B   1618           01609         bsf       RCSTA,CREN     ; continuous receive
MPASM 5.54  /USERS/JUDY/MPLABXPROJECTS/INTER   4-8-2014  1:03:34         PAGE 44


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01610 
062C   1683           01611         bsf       STATUS,RP0     ; select bank 1
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
062D   1698           01612         bsf       TXSTA,TXEN     ; Transmit enable
062E   1283           01613         bcf       STATUS,RP0     ; select bank 0
                      01614 
062F   0008           01615         return
                      01616 
                      01617 
0630                  01618 wrt_char
                      01619 ;display value stored in w
0630   1283           01620         bcf     STATUS, RP0
0631   0099           01621         movwf     TXREG
0632   1683           01622         bsf       STATUS,RP0     ; Go to bank with TXSTA
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0633   1C98           01623         btfss     TXSTA,1        ; check TRMT bit in TXSTA (FSR) until TRMT=1
0634   2???           01624         goto      $-1
0635   1283           01625         bcf     STATUS, RP0
0636   0008           01626         return
                      01627 
0637                  01628 display_num
0637   084D           01629         movf    val,w
0638   390F           01630         andlw   0x0f           ; w  = 0000 LLLL
0639   3E30           01631         addlw   0x30           ; convert to ASCII
063A   1283           01632         bcf     STATUS, RP0
063B   0099           01633         movwf     TXREG
063C   1683           01634         bsf       STATUS,RP0     ; Go to bank with TXSTA
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
063D   1C98           01635         btfss     TXSTA,1        ; check TRMT bit in TXSTA (FSR) until TRMT=1
063E   2???           01636         goto      $-1
063F   1283 1303      01637         banksel val
0641   0008           01638         return
                      01639 
0642                  01640 pc_log
                      01641 ;display log on pc interface in the format of
                      01642 ;20xx/xx/xx xx:xx
                      01643 ;P:x FF:x LF:x N:x
                      01644 
                      01645                 ;Get year
0642   3032           01646                 movlw       "2"                         ;First line shows 20**/**/**
0643   2???           01647                 call        wrt_char
0644   3030           01648                 movlw       "0"
0645   2???           01649                 call        wrt_char
                      01650 
                      01651                 rtc_read        0x06            ;Read Address 0x06 from DS1307---year
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
0646   3006               M         movlw   0x06
0647   1283 1303          M         banksel 0x73
MPASM 5.54  /USERS/JUDY/MPLABXPROJECTS/INTER   4-8-2014  1:03:34         PAGE 45


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0649   00F3               M         movwf   0x73
064A   2???               M         call    read_rtc
064B   1283 1303          M         banksel 0x75
064D   0875               M         movf    0x75,w
064E   2???               M         call    rtc_convert   
064F   1283 1303      01652         banksel     val
0651   0877           01653         movf        0x77, w
0652   00CD           01654         movwf       val
0653   2???           01655         call        display_num
0654   0878           01656         movf        0x78, w
0655   00CD           01657         movwf       val
0656   2???           01658         call        display_num
0657   302F           01659                 movlw       "/"
0658   2???           01660                 call        wrt_char
                      01661 
                      01662                 ;Get month
                      01663                 rtc_read        0x05            ;Read Address 0x05 from DS1307---month
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
0659   3005               M         movlw   0x05
065A   1283 1303          M         banksel 0x73
065C   00F3               M         movwf   0x73
065D   2???               M         call    read_rtc
065E   1283 1303          M         banksel 0x75
0660   0875               M         movf    0x75,w
0661   2???               M         call    rtc_convert   
0662   0877           01664         movf        0x77, w
0663   00CD           01665         movwf       val
0664   2???           01666         call        display_num
0665   0878           01667         movf        0x78, w
0666   00CD           01668         movwf       val
0667   2???           01669         call        display_num
0668   302F           01670                 movlw       "/"
0669   2???           01671         call        wrt_char
                      01672 
                      01673                 ;Get day
                      01674                 rtc_read        0x04            ;Read Address 0x04 from DS1307---day
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
066A   3004               M         movlw   0x04
066B   1283 1303          M         banksel 0x73
066D   00F3               M         movwf   0x73
066E   2???               M         call    read_rtc
066F   1283 1303          M         banksel 0x75
0671   0875               M         movf    0x75,w
MPASM 5.54  /USERS/JUDY/MPLABXPROJECTS/INTER   4-8-2014  1:03:34         PAGE 46


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0672   2???               M         call    rtc_convert   
0673   0877           01675         movf        0x77, w
0674   00CD           01676         movwf       val
0675   2???           01677         call        display_num
0676   0878           01678         movf        0x78, w
0677   00CD           01679         movwf       val
0678   2???           01680         call        display_num
0679   3020           01681         movlw       " "
067A   2???           01682         call        wrt_char
                      01683 
                      01684                 ;Get hour
                      01685                 rtc_read        0x02
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
067B   3002               M         movlw   0x02
067C   1283 1303          M         banksel 0x73
067E   00F3               M         movwf   0x73
067F   2???               M         call    read_rtc
0680   1283 1303          M         banksel 0x75
0682   0875               M         movf    0x75,w
0683   2???               M         call    rtc_convert   
0684   0877           01686         movf        0x77, w
0685   00CD           01687         movwf       val
0686   2???           01688         call        display_num
0687   0878           01689         movf        0x78, w
0688   00CD           01690         movwf       val
0689   2???           01691         call        display_num
068A   303A           01692                 movlw       ":"
068B   2???           01693                 call        wrt_char
                      01694 
                      01695                 ;Get minute
                      01696                 rtc_read        0x01            ;Read Address 0x01 from DS1307---min
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
068C   3001               M         movlw   0x01
068D   1283 1303          M         banksel 0x73
068F   00F3               M         movwf   0x73
0690   2???               M         call    read_rtc
0691   1283 1303          M         banksel 0x75
0693   0875               M         movf    0x75,w
0694   2???               M         call    rtc_convert   
0695   0877           01697         movf        0x77, w
0696   00CD           01698         movwf       val
0697   2???           01699         call        display_num
0698   0878           01700         movf        0x78, w
MPASM 5.54  /USERS/JUDY/MPLABXPROJECTS/INTER   4-8-2014  1:03:34         PAGE 47


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0699   00CD           01701         movwf       val
069A   2???           01702         call        display_num
                      01703 
069B   2???           01704         call        next_line
069C   3050           01705         movlw        "P"
069D   2???           01706         call        wrt_char
069E   303A           01707         movlw       ":"
069F   2???           01708         call        wrt_char
                      01709 
06A0   1283 1303      01710         banksel     val
06A2   0832           01711         movf        pass, w
06A3   00CD           01712         movwf       val
06A4   2???           01713         call        display_num
06A5   3020           01714         movlw       " "
06A6   2???           01715         call        wrt_char
06A7   3046           01716         movlw       "F"
06A8   2???           01717         call        wrt_char
06A9   3046           01718         movlw       "F"
06AA   2???           01719         call        wrt_char
06AB   303A           01720         movlw       ":"
06AC   2???           01721         call        wrt_char
                      01722 
06AD   1283 1303      01723         banksel     val
06AF   0833           01724         movf        flickerfail, w
06B0   00CD           01725         movwf       val
06B1   2???           01726         call        display_num
                      01727 
06B2   3020           01728         movlw       " "
06B3   2???           01729         call        wrt_char
06B4   304C           01730         movlw       "L"
06B5   2???           01731         call        wrt_char
06B6   3046           01732         movlw       "F"
06B7   2???           01733         call        wrt_char
06B8   303A           01734         movlw       ":"
06B9   2???           01735         call        wrt_char
                      01736 
06BA   1283 1303      01737         banksel     val
06BC   0834           01738         movf        ledfail, w
06BD   00CD           01739         movwf       val
06BE   2???           01740         call        display_num
                      01741 
06BF   3020           01742         movlw       " "
06C0   2???           01743         call        wrt_char
06C1   304E           01744         movlw       "N"
06C2   2???           01745         call        wrt_char
06C3   303A           01746         movlw       ":"
06C4   2???           01747         call        wrt_char
                      01748 
06C5   1283 1303      01749         banksel     val
06C7   0840           01750         movf        none, w
06C8   00CD           01751         movwf       val
06C9   2???           01752         call        display_num
06CA   2???           01753         call        next_line
MPASM 5.54  /USERS/JUDY/MPLABXPROJECTS/INTER   4-8-2014  1:03:34         PAGE 48


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

06CB   0008           01754         return
                      01755 
06CC                  01756 next_line
                      01757 ;insert blank line into PC display
06CC   300A           01758         movlw       H'0A'
06CD   2???           01759         call        wrt_char
06CE   300D           01760         movlw       H'0D'
06CF   2???           01761         call        wrt_char
06D0   0008           01762         return
                      01763 
Warning[205]: Found directive in column 1. (END)
3F72                  01764 END
MPASM 5.54  /USERS/JUDY/MPLABXPROJECTS/INTER   4-8-2014  1:03:34         PAGE 49


SYMBOL TABLE
  LABEL                             VALUE 

ACKDT                             00000005
ACKEN                             00000004
ACKSTAT                           00000006
ADCON0                            0000001F
ADCON1                            0000009F
ADCS0                             00000006
ADCS1                             00000007
ADD3HUNS                          000001B5
ADD3HUNS1                         000001F2
ADD3ONES                          000001BB
ADD3ONES1                         000001F8
ADD3TENS                          000001B8
ADD3TENS1                         000001F5
ADDEN                             00000003
ADDRL                             0000003C
ADFM                              00000007
ADIE                              00000006
ADIF                              00000006
ADON                              00000000
ADRESH                            0000001E
ADRESL                            0000009E
BCDADD3                           0000018F
BCDADD31                          000001CC
BCD_Display                       
BCD_DisplayS                      
BCLIE                             00000003
BCLIF                             00000003
BF                                00000000
BRGH                              00000002
C                                 00000000
CARRYONES                         000001BE
CARRYONES1                        000001FB
CARRYTENS                         000001C1
CARRYTENS1                        000001FE
CCP1CON                           00000017
CCP1IE                            00000002
CCP1IF                            00000002
CCP1M0                            00000000
CCP1M1                            00000001
CCP1M2                            00000002
CCP1M3                            00000003
CCP1X                             00000005
CCP1Y                             00000004
CCP2CON                           0000001D
CCP2IE                            00000000
CCP2IF                            00000000
CCP2M0                            00000000
CCP2M1                            00000001
CCP2M2                            00000002
CCP2M3                            00000003
CCP2X                             00000005
CCP2Y                             00000004
CCPR1                             00000015
MPASM 5.54  /USERS/JUDY/MPLABXPROJECTS/INTER   4-8-2014  1:03:34         PAGE 50


SYMBOL TABLE
  LABEL                             VALUE 

CCPR1H                            00000016
CCPR1L                            00000015
CCPR2                             0000001B
CCPR2H                            0000001C
CCPR2L                            0000001B
CHS0                              00000003
CHS1                              00000004
CHS2                              00000005
CKE                               00000006
CKP                               00000004
COUNTH                            00000020
COUNTL                            00000022
COUNTM                            00000021
CREN                              00000004
CSRC                              00000007
Check_Flicker                     00000246
Clear_Display                     000000D5
Convert                           00000187
Convert1                          000001C4
D                                 00000005
DATAL                             0000003D
DATA_ADDRESS                      00000005
DC                                00000001
D_A                               00000005
D_NOT_A                           00000005
Display                           
Display_results                   0000029C
Done                              00000082
E                                 PORTD,3
EEADR                             0000010D
EEADRH                            0000010F
EECON1                            0000018C
EECON2                            0000018D
EEDATA                            0000010C
EEDATH                            0000010E
EEIE                              00000004
EEIF                              00000004
EEPGD                             00000007
EightS                            000005F0
F                                 00000001
FERR                              00000002
FSR                               00000004
GCEN                              00000007
GIE                               00000007
GO                                00000002
GO_DONE                           00000002
GO_NOT_DONE                       00000002
HalfS                             000005D0
I2C_DATA                          00000005
I2C_READ                          00000002
I2C_START                         00000003
I2C_STOP                          00000004
IBF                               00000007
MPASM 5.54  /USERS/JUDY/MPLABXPROJECTS/INTER   4-8-2014  1:03:34         PAGE 51


SYMBOL TABLE
  LABEL                             VALUE 

IBOV                              00000005
INDF                              00000000
INTCON                            0000000B
INTE                              00000004
INTEDG                            00000006
INTF                              00000001
IRP                               00000007
ISR                               00000610
InitLCD                           00000149
LCD_DELAY                         
LLD_LOOP                          00000203
Main                              00000025
Menu                              00000058
Motor_Off                         0000037E
Motor_On                          00000371
NOT_A                             00000005
NOT_ADDRESS                       00000005
NOT_BO                            00000000
NOT_BOR                           00000000
NOT_DONE                          00000002
NOT_PD                            00000003
NOT_POR                           00000001
NOT_RBPU                          00000007
NOT_RC8                           00000006
NOT_T1SYNC                        00000002
NOT_TO                            00000004
NOT_TX8                           00000006
NOT_W                             00000002
NOT_WRITE                         00000002
OBF                               00000006
OERR                              00000001
OPTION_REG                        00000081
Other_wise                        00000147
P                                 00000004
PCFG0                             00000000
PCFG1                             00000001
PCFG2                             00000002
PCFG3                             00000003
PCL                               00000002
PCLATH                            0000000A
PCON                              0000008E
PEIE                              00000006
PEN                               00000002
PIE1                              0000008C
PIE2                              0000008D
PIR1                              0000000C
PIR2                              0000000D
PMem                              0000009F
PMenu                             000000AE
PORTA                             00000005
PORTB                             00000006
PORTC                             00000007
PORTD                             00000008
MPASM 5.54  /USERS/JUDY/MPLABXPROJECTS/INTER   4-8-2014  1:03:34         PAGE 52


SYMBOL TABLE
  LABEL                             VALUE 

PORTE                             00000009
PR2                               00000092
PS0                               00000000
PS1                               00000001
PS2                               00000002
PSA                               00000003
PSPIE                             00000007
PSPIF                             00000007
PSPMODE                           00000004
Paused                            00000050
QuarterS                          000005E0
R                                 00000002
RA0                               00000000
RA1                               00000001
RA2                               00000002
RA3                               00000003
RA4                               00000004
RA5                               00000005
RB0                               00000000
RB1                               00000001
RB2                               00000002
RB3                               00000003
RB4                               00000004
RB5                               00000005
RB6                               00000006
RB7                               00000007
RBIE                              00000003
RBIF                              00000000
RC0                               00000000
RC1                               00000001
RC2                               00000002
RC3                               00000003
RC4                               00000004
RC5                               00000005
RC6                               00000006
RC7                               00000007
RC8_9                             00000006
RC9                               00000006
RCD8                              00000000
RCEN                              00000003
RCIE                              00000005
RCIF                              00000005
RCREG                             0000001A
RCSTA                             00000018
RD                                00000000
RD0                               00000000
RD1                               00000001
RD2                               00000002
RD3                               00000003
RD4                               00000004
RD5                               00000005
RD6                               00000006
RD7                               00000007
MPASM 5.54  /USERS/JUDY/MPLABXPROJECTS/INTER   4-8-2014  1:03:34         PAGE 53


SYMBOL TABLE
  LABEL                             VALUE 

RE0                               00000000
RE1                               00000001
RE2                               00000002
READ_WRITE                        00000002
RP0                               00000005
RP1                               00000006
RS                                PORTD,2
RSEN                              00000001
RTC                               000000BC
RX9                               00000006
RX9D                              00000000
R_NOT_W                           00000002
R_W                               00000002
Refresh                           0000059E
Run                               00000071
Runtime                           00000094
S                                 00000003
SEN                               00000000
SMP                               00000007
SPBRG                             00000099
SPEN                              00000007
SREN                              00000005
SSPADD                            00000093
SSPBUF                            00000013
SSPCON                            00000014
SSPCON2                           00000091
SSPEN                             00000005
SSPIE                             00000003
SSPIF                             00000003
SSPM0                             00000000
SSPM1                             00000001
SSPM2                             00000002
SSPM3                             00000003
SSPOV                             00000006
SSPSTAT                           00000094
STATUS                            00000003
SYNC                              00000004
SixteenS                          00000600
Start_Test                        00000033
Switch_Lines                      000000D2
T0CS                              00000005
T0IE                              00000005
T0IF                              00000002
T0SE                              00000004
T1CKPS0                           00000004
T1CKPS1                           00000005
T1CON                             00000010
T1INSYNC                          00000002
T1OSCEN                           00000003
T1SYNC                            00000002
T2CKPS0                           00000000
T2CKPS1                           00000001
T2CON                             00000012
MPASM 5.54  /USERS/JUDY/MPLABXPROJECTS/INTER   4-8-2014  1:03:34         PAGE 54


SYMBOL TABLE
  LABEL                             VALUE 

TMR0                              00000001
TMR0IE                            00000005
TMR0IF                            00000002
TMR1                              0000000E
TMR1CS                            00000001
TMR1H                             0000000F
TMR1IE                            00000000
TMR1IF                            00000000
TMR1L                             0000000E
TMR1ON                            00000000
TMR2                              00000011
TMR2IE                            00000001
TMR2IF                            00000001
TMR2ON                            00000002
TOUTPS0                           00000003
TOUTPS1                           00000004
TOUTPS2                           00000005
TOUTPS3                           00000006
TRISA                             00000085
TRISA0                            00000000
TRISA1                            00000001
TRISA2                            00000002
TRISA3                            00000003
TRISA4                            00000004
TRISA5                            00000005
TRISB                             00000086
TRISB0                            00000000
TRISB1                            00000001
TRISB2                            00000002
TRISB3                            00000003
TRISB4                            00000004
TRISB5                            00000005
TRISB6                            00000006
TRISB7                            00000007
TRISC                             00000087
TRISC0                            00000000
TRISC1                            00000001
TRISC2                            00000002
TRISC3                            00000003
TRISC4                            00000004
TRISC5                            00000005
TRISC6                            00000006
TRISC7                            00000007
TRISD                             00000088
TRISD0                            00000000
TRISD1                            00000001
TRISD2                            00000002
TRISD3                            00000003
TRISD4                            00000004
TRISD5                            00000005
TRISD6                            00000006
TRISD7                            00000007
TRISE                             00000089
MPASM 5.54  /USERS/JUDY/MPLABXPROJECTS/INTER   4-8-2014  1:03:34         PAGE 55


SYMBOL TABLE
  LABEL                             VALUE 

TRISE0                            00000000
TRISE1                            00000001
TRISE2                            00000002
TRMT                              00000001
TX8_9                             00000006
TX9                               00000006
TX9D                              00000000
TXD8                              00000000
TXEN                              00000005
TXIE                              00000004
TXIF                              00000004
TXREG                             00000019
TXSTA                             00000098
Table_Counter                     00000023
Test                              0000003D
Timer                             00000613
Trial                             000000C3
UA                                00000001
VALUEL                            0000003E
W                                 00000000
WCOL                              00000007
WR                                00000001
WREN                              00000002
WRERR                             00000003
WRT_LCD                           
WR_DATA                           00000176
WR_INS                            00000167
Welcome_Msg                       00000046
Z                                 00000002
_.org_1_0206                      00000206
_.org_1_05D7                      000005D7
_.org_1_05D9                      000005D9
_.org_1_05DC                      000005DC
_.org_1_05E7                      000005E7
_.org_1_05E9                      000005E9
_.org_1_05EC                      000005EC
_.org_1_05F7                      000005F7
_.org_1_05F9                      000005F9
_.org_1_05FC                      000005FC
_.org_1_0607                      00000607
_.org_1_0609                      00000609
_.org_1_060C                      0000060C
_.org_1_0634                      00000634
_.org_1_063E                      0000063E
_BODEN_OFF                        00003FBF
_BODEN_ON                         00003FFF
_BOREN_OFF                        00003FBF
_BOREN_ON                         00003FFF
_CONFIG                           00002007
_CPD_OFF                          00003FFF
_CPD_ON                           00003EFF
_CP_ALL                           00000FCF
_CP_HALF                          00001FDF
MPASM 5.54  /USERS/JUDY/MPLABXPROJECTS/INTER   4-8-2014  1:03:34         PAGE 56


SYMBOL TABLE
  LABEL                             VALUE 

_CP_OFF                           00003FFF
_CP_UPPER_256                     00002FEF
_DEBUG_OFF                        00003FFF
_DEBUG_ON                         000037FF
_DEVID1                           00002006
_FOSC_EXTRC                       00003FFF
_FOSC_HS                          00003FFE
_FOSC_LP                          00003FFC
_FOSC_XT                          00003FFD
_HS_OSC                           00003FFE
_IDLOC0                           00002000
_IDLOC1                           00002001
_IDLOC2                           00002002
_IDLOC3                           00002003
_LP_OSC                           00003FFC
_LVP_OFF                          00003F7F
_LVP_ON                           00003FFF
_PWRTE_OFF                        00003FFF
_PWRTE_ON                         00003FF7
_RC_OSC                           00003FFF
_WDTE_OFF                         00003FFB
_WDTE_ON                          00003FFF
_WDT_OFF                          00003FFB
_WDT_ON                           00003FFF
_WRT_ENABLE_OFF                   00003DFF
_WRT_ENABLE_ON                    00003FFF
_WRT_OFF                          00003DFF
_WRT_ON                           00003FFF
_XT_OSC                           00003FFD
__16F877                          00000001
addsignal                         0000061A
bcd                               0000002D
check                             000000DC
check_1                           00000399
check_2                           000003B9
check_3                           000003D9
check_4                           000003F9
check_5                           00000419
check_6                           00000439
check_7                           00000459
check_8                           00000479
check_9                           00000499
check_A                           000000DD
check_B                           00000122
check_C                           0000013F
com                               00000029
continue                          000004B9
count                             0000002E
count_down                        0000020A
count_loop                        00000218
count_temp                        0000003A
dat                               0000002A
display                           0000035A
MPASM 5.54  /USERS/JUDY/MPLABXPROJECTS/INTER   4-8-2014  1:03:34         PAGE 57


SYMBOL TABLE
  LABEL                             VALUE 

display_EE                        000004BB
display_num                       00000637
end_display                       0000036F
finish                            0000061F
flickerfail                       00000033
flickertime                       0000025B
goodcandle                        0000028E
help_shift_EE                     0000054A
huns                              00000039
i2c_common_setup                  00000000
init                              00000005
key_temp                          00000025
lcdLongDelay                      00000201
lcd_d1                            0000002B
lcd_d2                            0000002C
lcd_tmp                           00000024
ledfail                           00000034
light1                            00000041
light2                            00000042
light3                            00000043
light4                            00000044
light5                            00000045
light6                            00000046
light7                            00000047
light8                            00000048
light9                            00000049
lighteight                        0000033B
lightfive                         0000030E
lightfour                         000002FF
lightnine                         0000034A
lightone                          000002D3
lightseven                        0000032C
lightsix                          0000031D
lightthree                        000002F0
lighttwo                          000002E1
next                              00000359
next_line                         000006CC
none                              00000040
notff                             0000036D
notflickerfail                    00000279
notlf                             00000366
notnone                           0000035F
ones                              00000037
pass                              00000032
pc_init                           00000624
pc_log                            00000642
pmenu_access                      00000391
read_EE                           0000050D
read_rtc                          00000000
result_temp                       0000004A
results_access                    000002C1
rtc1                              00000027
rtc2                              00000028
MPASM 5.54  /USERS/JUDY/MPLABXPROJECTS/INTER   4-8-2014  1:03:34         PAGE 58


SYMBOL TABLE
  LABEL                             VALUE 

rtc_convert                       00000000
rtc_read                          
rtc_resetAll                      
rtc_set                           
run_temp                          0000003B
runtime                           00000035
shift_EE                          00000521
show_RTC                          0000056B
show_data                         0000002F
signal                            0000003F
status_temp                       00000031
temp1                             0000004B
temp2                             0000004C
tens                              00000038
test                              00000026
timercount                        00000036
val                               0000004D
w_temp                            00000030
wait                              000000D8
write_EE                          000004DB
write_EES                         000004F7
write_rtc                         00000000
wrt_char                          00000630

Errors   :     0
Warnings :     6 reported,     0 suppressed
Messages :    52 reported,     0 suppressed

